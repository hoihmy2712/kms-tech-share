/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 33.0, "minX": 0.0, "maxY": 55265.0, "series": [{"data": [[0.0, 490.0], [0.1, 490.0], [0.2, 490.0], [0.3, 490.0], [0.4, 490.0], [0.5, 490.0], [0.6, 490.0], [0.7, 490.0], [0.8, 490.0], [0.9, 490.0], [1.0, 490.0], [1.1, 490.0], [1.2, 490.0], [1.3, 490.0], [1.4, 490.0], [1.5, 490.0], [1.6, 490.0], [1.7, 490.0], [1.8, 490.0], [1.9, 490.0], [2.0, 490.0], [2.1, 490.0], [2.2, 490.0], [2.3, 490.0], [2.4, 490.0], [2.5, 490.0], [2.6, 490.0], [2.7, 490.0], [2.8, 490.0], [2.9, 490.0], [3.0, 490.0], [3.1, 490.0], [3.2, 490.0], [3.3, 490.0], [3.4, 490.0], [3.5, 490.0], [3.6, 490.0], [3.7, 490.0], [3.8, 490.0], [3.9, 490.0], [4.0, 490.0], [4.1, 490.0], [4.2, 490.0], [4.3, 490.0], [4.4, 490.0], [4.5, 490.0], [4.6, 490.0], [4.7, 490.0], [4.8, 490.0], [4.9, 490.0], [5.0, 490.0], [5.1, 490.0], [5.2, 490.0], [5.3, 490.0], [5.4, 490.0], [5.5, 490.0], [5.6, 490.0], [5.7, 490.0], [5.8, 490.0], [5.9, 490.0], [6.0, 490.0], [6.1, 490.0], [6.2, 490.0], [6.3, 490.0], [6.4, 490.0], [6.5, 490.0], [6.6, 490.0], [6.7, 490.0], [6.8, 490.0], [6.9, 490.0], [7.0, 490.0], [7.1, 490.0], [7.2, 490.0], [7.3, 490.0], [7.4, 490.0], [7.5, 490.0], [7.6, 490.0], [7.7, 490.0], [7.8, 490.0], [7.9, 490.0], [8.0, 490.0], [8.1, 490.0], [8.2, 490.0], [8.3, 490.0], [8.4, 490.0], [8.5, 490.0], [8.6, 490.0], [8.7, 490.0], [8.8, 490.0], [8.9, 490.0], [9.0, 490.0], [9.1, 490.0], [9.2, 490.0], [9.3, 490.0], [9.4, 490.0], [9.5, 490.0], [9.6, 490.0], [9.7, 490.0], [9.8, 490.0], [9.9, 490.0], [10.0, 490.0], [10.1, 490.0], [10.2, 490.0], [10.3, 490.0], [10.4, 490.0], [10.5, 490.0], [10.6, 490.0], [10.7, 490.0], [10.8, 490.0], [10.9, 490.0], [11.0, 490.0], [11.1, 490.0], [11.2, 490.0], [11.3, 490.0], [11.4, 490.0], [11.5, 490.0], [11.6, 490.0], [11.7, 490.0], [11.8, 490.0], [11.9, 490.0], [12.0, 490.0], [12.1, 490.0], [12.2, 490.0], [12.3, 490.0], [12.4, 490.0], [12.5, 490.0], [12.6, 490.0], [12.7, 490.0], [12.8, 490.0], [12.9, 490.0], [13.0, 490.0], [13.1, 490.0], [13.2, 490.0], [13.3, 490.0], [13.4, 490.0], [13.5, 490.0], [13.6, 490.0], [13.7, 490.0], [13.8, 490.0], [13.9, 490.0], [14.0, 490.0], [14.1, 490.0], [14.2, 490.0], [14.3, 490.0], [14.4, 490.0], [14.5, 490.0], [14.6, 490.0], [14.7, 490.0], [14.8, 490.0], [14.9, 490.0], [15.0, 490.0], [15.1, 490.0], [15.2, 490.0], [15.3, 490.0], [15.4, 490.0], [15.5, 490.0], [15.6, 490.0], [15.7, 490.0], [15.8, 490.0], [15.9, 490.0], [16.0, 490.0], [16.1, 490.0], [16.2, 490.0], [16.3, 490.0], [16.4, 490.0], [16.5, 490.0], [16.6, 490.0], [16.7, 490.0], [16.8, 490.0], [16.9, 490.0], [17.0, 490.0], [17.1, 490.0], [17.2, 490.0], [17.3, 490.0], [17.4, 490.0], [17.5, 490.0], [17.6, 490.0], [17.7, 490.0], [17.8, 490.0], [17.9, 490.0], [18.0, 490.0], [18.1, 490.0], [18.2, 490.0], [18.3, 490.0], [18.4, 490.0], [18.5, 490.0], [18.6, 490.0], [18.7, 490.0], [18.8, 490.0], [18.9, 490.0], [19.0, 490.0], [19.1, 490.0], [19.2, 490.0], [19.3, 490.0], [19.4, 490.0], [19.5, 490.0], [19.6, 490.0], [19.7, 490.0], [19.8, 490.0], [19.9, 490.0], [20.0, 490.0], [20.1, 490.0], [20.2, 490.0], [20.3, 490.0], [20.4, 490.0], [20.5, 490.0], [20.6, 490.0], [20.7, 490.0], [20.8, 490.0], [20.9, 490.0], [21.0, 490.0], [21.1, 490.0], [21.2, 490.0], [21.3, 490.0], [21.4, 490.0], [21.5, 490.0], [21.6, 490.0], [21.7, 490.0], [21.8, 490.0], [21.9, 490.0], [22.0, 490.0], [22.1, 490.0], [22.2, 490.0], [22.3, 490.0], [22.4, 490.0], [22.5, 490.0], [22.6, 490.0], [22.7, 490.0], [22.8, 490.0], [22.9, 490.0], [23.0, 490.0], [23.1, 490.0], [23.2, 490.0], [23.3, 490.0], [23.4, 490.0], [23.5, 490.0], [23.6, 490.0], [23.7, 490.0], [23.8, 490.0], [23.9, 490.0], [24.0, 490.0], [24.1, 490.0], [24.2, 490.0], [24.3, 490.0], [24.4, 490.0], [24.5, 490.0], [24.6, 490.0], [24.7, 490.0], [24.8, 490.0], [24.9, 490.0], [25.0, 490.0], [25.1, 490.0], [25.2, 490.0], [25.3, 490.0], [25.4, 490.0], [25.5, 490.0], [25.6, 490.0], [25.7, 490.0], [25.8, 490.0], [25.9, 490.0], [26.0, 490.0], [26.1, 490.0], [26.2, 490.0], [26.3, 490.0], [26.4, 490.0], [26.5, 490.0], [26.6, 490.0], [26.7, 490.0], [26.8, 490.0], [26.9, 490.0], [27.0, 490.0], [27.1, 490.0], [27.2, 490.0], [27.3, 490.0], [27.4, 490.0], [27.5, 490.0], [27.6, 490.0], [27.7, 490.0], [27.8, 490.0], [27.9, 490.0], [28.0, 490.0], [28.1, 490.0], [28.2, 490.0], [28.3, 490.0], [28.4, 490.0], [28.5, 490.0], [28.6, 490.0], [28.7, 490.0], [28.8, 490.0], [28.9, 490.0], [29.0, 490.0], [29.1, 490.0], [29.2, 490.0], [29.3, 490.0], [29.4, 490.0], [29.5, 490.0], [29.6, 490.0], [29.7, 490.0], [29.8, 490.0], [29.9, 490.0], [30.0, 490.0], [30.1, 490.0], [30.2, 490.0], [30.3, 490.0], [30.4, 490.0], [30.5, 490.0], [30.6, 490.0], [30.7, 490.0], [30.8, 490.0], [30.9, 490.0], [31.0, 490.0], [31.1, 490.0], [31.2, 490.0], [31.3, 490.0], [31.4, 490.0], [31.5, 490.0], [31.6, 490.0], [31.7, 490.0], [31.8, 490.0], [31.9, 490.0], [32.0, 490.0], [32.1, 490.0], [32.2, 490.0], [32.3, 490.0], [32.4, 490.0], [32.5, 490.0], [32.6, 490.0], [32.7, 490.0], [32.8, 490.0], [32.9, 490.0], [33.0, 490.0], [33.1, 490.0], [33.2, 490.0], [33.3, 490.0], [33.4, 490.0], [33.5, 490.0], [33.6, 490.0], [33.7, 490.0], [33.8, 490.0], [33.9, 490.0], [34.0, 490.0], [34.1, 490.0], [34.2, 490.0], [34.3, 490.0], [34.4, 490.0], [34.5, 490.0], [34.6, 490.0], [34.7, 490.0], [34.8, 490.0], [34.9, 490.0], [35.0, 490.0], [35.1, 490.0], [35.2, 490.0], [35.3, 490.0], [35.4, 490.0], [35.5, 490.0], [35.6, 490.0], [35.7, 490.0], [35.8, 490.0], [35.9, 490.0], [36.0, 490.0], [36.1, 490.0], [36.2, 490.0], [36.3, 490.0], [36.4, 490.0], [36.5, 490.0], [36.6, 490.0], [36.7, 490.0], [36.8, 490.0], [36.9, 490.0], [37.0, 490.0], [37.1, 490.0], [37.2, 490.0], [37.3, 490.0], [37.4, 490.0], [37.5, 490.0], [37.6, 490.0], [37.7, 490.0], [37.8, 490.0], [37.9, 490.0], [38.0, 490.0], [38.1, 490.0], [38.2, 490.0], [38.3, 490.0], [38.4, 490.0], [38.5, 490.0], [38.6, 490.0], [38.7, 490.0], [38.8, 490.0], [38.9, 490.0], [39.0, 490.0], [39.1, 490.0], [39.2, 490.0], [39.3, 490.0], [39.4, 490.0], [39.5, 490.0], [39.6, 490.0], [39.7, 490.0], [39.8, 490.0], [39.9, 490.0], [40.0, 490.0], [40.1, 490.0], [40.2, 490.0], [40.3, 490.0], [40.4, 490.0], [40.5, 490.0], [40.6, 490.0], [40.7, 490.0], [40.8, 490.0], [40.9, 490.0], [41.0, 490.0], [41.1, 490.0], [41.2, 490.0], [41.3, 490.0], [41.4, 490.0], [41.5, 490.0], [41.6, 490.0], [41.7, 490.0], [41.8, 490.0], [41.9, 490.0], [42.0, 490.0], [42.1, 490.0], [42.2, 490.0], [42.3, 490.0], [42.4, 490.0], [42.5, 490.0], [42.6, 490.0], [42.7, 490.0], [42.8, 490.0], [42.9, 490.0], [43.0, 490.0], [43.1, 490.0], [43.2, 490.0], [43.3, 490.0], [43.4, 490.0], [43.5, 490.0], [43.6, 490.0], [43.7, 490.0], [43.8, 490.0], [43.9, 490.0], [44.0, 490.0], [44.1, 490.0], [44.2, 490.0], [44.3, 490.0], [44.4, 490.0], [44.5, 490.0], [44.6, 490.0], [44.7, 490.0], [44.8, 490.0], [44.9, 490.0], [45.0, 490.0], [45.1, 490.0], [45.2, 490.0], [45.3, 490.0], [45.4, 490.0], [45.5, 490.0], [45.6, 490.0], [45.7, 490.0], [45.8, 490.0], [45.9, 490.0], [46.0, 490.0], [46.1, 490.0], [46.2, 490.0], [46.3, 490.0], [46.4, 490.0], [46.5, 490.0], [46.6, 490.0], [46.7, 490.0], [46.8, 490.0], [46.9, 490.0], [47.0, 490.0], [47.1, 490.0], [47.2, 490.0], [47.3, 490.0], [47.4, 490.0], [47.5, 490.0], [47.6, 490.0], [47.7, 490.0], [47.8, 490.0], [47.9, 490.0], [48.0, 490.0], [48.1, 490.0], [48.2, 490.0], [48.3, 490.0], [48.4, 490.0], [48.5, 490.0], [48.6, 490.0], [48.7, 490.0], [48.8, 490.0], [48.9, 490.0], [49.0, 490.0], [49.1, 490.0], [49.2, 490.0], [49.3, 490.0], [49.4, 490.0], [49.5, 490.0], [49.6, 490.0], [49.7, 490.0], [49.8, 490.0], [49.9, 490.0], [50.0, 490.0], [50.1, 490.0], [50.2, 490.0], [50.3, 490.0], [50.4, 490.0], [50.5, 490.0], [50.6, 490.0], [50.7, 490.0], [50.8, 490.0], [50.9, 490.0], [51.0, 490.0], [51.1, 490.0], [51.2, 490.0], [51.3, 490.0], [51.4, 490.0], [51.5, 490.0], [51.6, 490.0], [51.7, 490.0], [51.8, 490.0], [51.9, 490.0], [52.0, 490.0], [52.1, 490.0], [52.2, 490.0], [52.3, 490.0], [52.4, 490.0], [52.5, 490.0], [52.6, 490.0], [52.7, 490.0], [52.8, 490.0], [52.9, 490.0], [53.0, 490.0], [53.1, 490.0], [53.2, 490.0], [53.3, 490.0], [53.4, 490.0], [53.5, 490.0], [53.6, 490.0], [53.7, 490.0], [53.8, 490.0], [53.9, 490.0], [54.0, 490.0], [54.1, 490.0], [54.2, 490.0], [54.3, 490.0], [54.4, 490.0], [54.5, 490.0], [54.6, 490.0], [54.7, 490.0], [54.8, 490.0], [54.9, 490.0], [55.0, 490.0], [55.1, 490.0], [55.2, 490.0], [55.3, 490.0], [55.4, 490.0], [55.5, 490.0], [55.6, 490.0], [55.7, 490.0], [55.8, 490.0], [55.9, 490.0], [56.0, 490.0], [56.1, 490.0], [56.2, 490.0], [56.3, 490.0], [56.4, 490.0], [56.5, 490.0], [56.6, 490.0], [56.7, 490.0], [56.8, 490.0], [56.9, 490.0], [57.0, 490.0], [57.1, 490.0], [57.2, 490.0], [57.3, 490.0], [57.4, 490.0], [57.5, 490.0], [57.6, 490.0], [57.7, 490.0], [57.8, 490.0], [57.9, 490.0], [58.0, 490.0], [58.1, 490.0], [58.2, 490.0], [58.3, 490.0], [58.4, 490.0], [58.5, 490.0], [58.6, 490.0], [58.7, 490.0], [58.8, 490.0], [58.9, 490.0], [59.0, 490.0], [59.1, 490.0], [59.2, 490.0], [59.3, 490.0], [59.4, 490.0], [59.5, 490.0], [59.6, 490.0], [59.7, 490.0], [59.8, 490.0], [59.9, 490.0], [60.0, 490.0], [60.1, 490.0], [60.2, 490.0], [60.3, 490.0], [60.4, 490.0], [60.5, 490.0], [60.6, 490.0], [60.7, 490.0], [60.8, 490.0], [60.9, 490.0], [61.0, 490.0], [61.1, 490.0], [61.2, 490.0], [61.3, 490.0], [61.4, 490.0], [61.5, 490.0], [61.6, 490.0], [61.7, 490.0], [61.8, 490.0], [61.9, 490.0], [62.0, 490.0], [62.1, 490.0], [62.2, 490.0], [62.3, 490.0], [62.4, 490.0], [62.5, 490.0], [62.6, 490.0], [62.7, 490.0], [62.8, 490.0], [62.9, 490.0], [63.0, 490.0], [63.1, 490.0], [63.2, 490.0], [63.3, 490.0], [63.4, 490.0], [63.5, 490.0], [63.6, 490.0], [63.7, 490.0], [63.8, 490.0], [63.9, 490.0], [64.0, 490.0], [64.1, 490.0], [64.2, 490.0], [64.3, 490.0], [64.4, 490.0], [64.5, 490.0], [64.6, 490.0], [64.7, 490.0], [64.8, 490.0], [64.9, 490.0], [65.0, 490.0], [65.1, 490.0], [65.2, 490.0], [65.3, 490.0], [65.4, 490.0], [65.5, 490.0], [65.6, 490.0], [65.7, 490.0], [65.8, 490.0], [65.9, 490.0], [66.0, 490.0], [66.1, 490.0], [66.2, 490.0], [66.3, 490.0], [66.4, 490.0], [66.5, 490.0], [66.6, 490.0], [66.7, 490.0], [66.8, 490.0], [66.9, 490.0], [67.0, 490.0], [67.1, 490.0], [67.2, 490.0], [67.3, 490.0], [67.4, 490.0], [67.5, 490.0], [67.6, 490.0], [67.7, 490.0], [67.8, 490.0], [67.9, 490.0], [68.0, 490.0], [68.1, 490.0], [68.2, 490.0], [68.3, 490.0], [68.4, 490.0], [68.5, 490.0], [68.6, 490.0], [68.7, 490.0], [68.8, 490.0], [68.9, 490.0], [69.0, 490.0], [69.1, 490.0], [69.2, 490.0], [69.3, 490.0], [69.4, 490.0], [69.5, 490.0], [69.6, 490.0], [69.7, 490.0], [69.8, 490.0], [69.9, 490.0], [70.0, 490.0], [70.1, 490.0], [70.2, 490.0], [70.3, 490.0], [70.4, 490.0], [70.5, 490.0], [70.6, 490.0], [70.7, 490.0], [70.8, 490.0], [70.9, 490.0], [71.0, 490.0], [71.1, 490.0], [71.2, 490.0], [71.3, 490.0], [71.4, 490.0], [71.5, 490.0], [71.6, 490.0], [71.7, 490.0], [71.8, 490.0], [71.9, 490.0], [72.0, 490.0], [72.1, 490.0], [72.2, 490.0], [72.3, 490.0], [72.4, 490.0], [72.5, 490.0], [72.6, 490.0], [72.7, 490.0], [72.8, 490.0], [72.9, 490.0], [73.0, 490.0], [73.1, 490.0], [73.2, 490.0], [73.3, 490.0], [73.4, 490.0], [73.5, 490.0], [73.6, 490.0], [73.7, 490.0], [73.8, 490.0], [73.9, 490.0], [74.0, 490.0], [74.1, 490.0], [74.2, 490.0], [74.3, 490.0], [74.4, 490.0], [74.5, 490.0], [74.6, 490.0], [74.7, 490.0], [74.8, 490.0], [74.9, 490.0], [75.0, 490.0], [75.1, 490.0], [75.2, 490.0], [75.3, 490.0], [75.4, 490.0], [75.5, 490.0], [75.6, 490.0], [75.7, 490.0], [75.8, 490.0], [75.9, 490.0], [76.0, 490.0], [76.1, 490.0], [76.2, 490.0], [76.3, 490.0], [76.4, 490.0], [76.5, 490.0], [76.6, 490.0], [76.7, 490.0], [76.8, 490.0], [76.9, 490.0], [77.0, 490.0], [77.1, 490.0], [77.2, 490.0], [77.3, 490.0], [77.4, 490.0], [77.5, 490.0], [77.6, 490.0], [77.7, 490.0], [77.8, 490.0], [77.9, 490.0], [78.0, 490.0], [78.1, 490.0], [78.2, 490.0], [78.3, 490.0], [78.4, 490.0], [78.5, 490.0], [78.6, 490.0], [78.7, 490.0], [78.8, 490.0], [78.9, 490.0], [79.0, 490.0], [79.1, 490.0], [79.2, 490.0], [79.3, 490.0], [79.4, 490.0], [79.5, 490.0], [79.6, 490.0], [79.7, 490.0], [79.8, 490.0], [79.9, 490.0], [80.0, 490.0], [80.1, 490.0], [80.2, 490.0], [80.3, 490.0], [80.4, 490.0], [80.5, 490.0], [80.6, 490.0], [80.7, 490.0], [80.8, 490.0], [80.9, 490.0], [81.0, 490.0], [81.1, 490.0], [81.2, 490.0], [81.3, 490.0], [81.4, 490.0], [81.5, 490.0], [81.6, 490.0], [81.7, 490.0], [81.8, 490.0], [81.9, 490.0], [82.0, 490.0], [82.1, 490.0], [82.2, 490.0], [82.3, 490.0], [82.4, 490.0], [82.5, 490.0], [82.6, 490.0], [82.7, 490.0], [82.8, 490.0], [82.9, 490.0], [83.0, 490.0], [83.1, 490.0], [83.2, 490.0], [83.3, 490.0], [83.4, 490.0], [83.5, 490.0], [83.6, 490.0], [83.7, 490.0], [83.8, 490.0], [83.9, 490.0], [84.0, 490.0], [84.1, 490.0], [84.2, 490.0], [84.3, 490.0], [84.4, 490.0], [84.5, 490.0], [84.6, 490.0], [84.7, 490.0], [84.8, 490.0], [84.9, 490.0], [85.0, 490.0], [85.1, 490.0], [85.2, 490.0], [85.3, 490.0], [85.4, 490.0], [85.5, 490.0], [85.6, 490.0], [85.7, 490.0], [85.8, 490.0], [85.9, 490.0], [86.0, 490.0], [86.1, 490.0], [86.2, 490.0], [86.3, 490.0], [86.4, 490.0], [86.5, 490.0], [86.6, 490.0], [86.7, 490.0], [86.8, 490.0], [86.9, 490.0], [87.0, 490.0], [87.1, 490.0], [87.2, 490.0], [87.3, 490.0], [87.4, 490.0], [87.5, 490.0], [87.6, 490.0], [87.7, 490.0], [87.8, 490.0], [87.9, 490.0], [88.0, 490.0], [88.1, 490.0], [88.2, 490.0], [88.3, 490.0], [88.4, 490.0], [88.5, 490.0], [88.6, 490.0], [88.7, 490.0], [88.8, 490.0], [88.9, 490.0], [89.0, 490.0], [89.1, 490.0], [89.2, 490.0], [89.3, 490.0], [89.4, 490.0], [89.5, 490.0], [89.6, 490.0], [89.7, 490.0], [89.8, 490.0], [89.9, 490.0], [90.0, 490.0], [90.1, 490.0], [90.2, 490.0], [90.3, 490.0], [90.4, 490.0], [90.5, 490.0], [90.6, 490.0], [90.7, 490.0], [90.8, 490.0], [90.9, 490.0], [91.0, 490.0], [91.1, 490.0], [91.2, 490.0], [91.3, 490.0], [91.4, 490.0], [91.5, 490.0], [91.6, 490.0], [91.7, 490.0], [91.8, 490.0], [91.9, 490.0], [92.0, 490.0], [92.1, 490.0], [92.2, 490.0], [92.3, 490.0], [92.4, 490.0], [92.5, 490.0], [92.6, 490.0], [92.7, 490.0], [92.8, 490.0], [92.9, 490.0], [93.0, 490.0], [93.1, 490.0], [93.2, 490.0], [93.3, 490.0], [93.4, 490.0], [93.5, 490.0], [93.6, 490.0], [93.7, 490.0], [93.8, 490.0], [93.9, 490.0], [94.0, 490.0], [94.1, 490.0], [94.2, 490.0], [94.3, 490.0], [94.4, 490.0], [94.5, 490.0], [94.6, 490.0], [94.7, 490.0], [94.8, 490.0], [94.9, 490.0], [95.0, 490.0], [95.1, 490.0], [95.2, 490.0], [95.3, 490.0], [95.4, 490.0], [95.5, 490.0], [95.6, 490.0], [95.7, 490.0], [95.8, 490.0], [95.9, 490.0], [96.0, 490.0], [96.1, 490.0], [96.2, 490.0], [96.3, 490.0], [96.4, 490.0], [96.5, 490.0], [96.6, 490.0], [96.7, 490.0], [96.8, 490.0], [96.9, 490.0], [97.0, 490.0], [97.1, 490.0], [97.2, 490.0], [97.3, 490.0], [97.4, 490.0], [97.5, 490.0], [97.6, 490.0], [97.7, 490.0], [97.8, 490.0], [97.9, 490.0], [98.0, 490.0], [98.1, 490.0], [98.2, 490.0], [98.3, 490.0], [98.4, 490.0], [98.5, 490.0], [98.6, 490.0], [98.7, 490.0], [98.8, 490.0], [98.9, 490.0], [99.0, 490.0], [99.1, 490.0], [99.2, 490.0], [99.3, 490.0], [99.4, 490.0], [99.5, 490.0], [99.6, 490.0], [99.7, 490.0], [99.8, 490.0], [99.9, 490.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[0.0, 33.0], [0.1, 52.0], [0.2, 1306.0], [0.3, 3336.0], [0.4, 4101.0], [0.5, 4277.0], [0.6, 4411.0], [0.7, 4558.0], [0.8, 4666.0], [0.9, 4752.0], [1.0, 4780.0], [1.1, 4868.0], [1.2, 4965.0], [1.3, 4992.0], [1.4, 5049.0], [1.5, 5152.0], [1.6, 5204.0], [1.7, 5243.0], [1.8, 5302.0], [1.9, 5348.0], [2.0, 5387.0], [2.1, 5419.0], [2.2, 5462.0], [2.3, 5470.0], [2.4, 5487.0], [2.5, 5498.0], [2.6, 5511.0], [2.7, 5527.0], [2.8, 5568.0], [2.9, 5581.0], [3.0, 5590.0], [3.1, 5594.0], [3.2, 5596.0], [3.3, 5600.0], [3.4, 5605.0], [3.5, 5609.0], [3.6, 5612.0], [3.7, 5621.0], [3.8, 5631.0], [3.9, 5642.0], [4.0, 5649.0], [4.1, 5654.0], [4.2, 5656.0], [4.3, 5659.0], [4.4, 5661.0], [4.5, 5669.0], [4.6, 5673.0], [4.7, 5680.0], [4.8, 5685.0], [4.9, 5692.0], [5.0, 5695.0], [5.1, 5703.0], [5.2, 5708.0], [5.3, 5715.0], [5.4, 5719.0], [5.5, 5722.0], [5.6, 5725.0], [5.7, 5729.0], [5.8, 5734.0], [5.9, 5737.0], [6.0, 5739.0], [6.1, 5745.0], [6.2, 5747.0], [6.3, 5749.0], [6.4, 5750.0], [6.5, 5752.0], [6.6, 5754.0], [6.7, 5756.0], [6.8, 5758.0], [6.9, 5763.0], [7.0, 5768.0], [7.1, 5772.0], [7.2, 5774.0], [7.3, 5777.0], [7.4, 5780.0], [7.5, 5782.0], [7.6, 5784.0], [7.7, 5786.0], [7.8, 5788.0], [7.9, 5791.0], [8.0, 5794.0], [8.1, 5798.0], [8.2, 5801.0], [8.3, 5807.0], [8.4, 5808.0], [8.5, 5810.0], [8.6, 5813.0], [8.7, 5817.0], [8.8, 5821.0], [8.9, 5823.0], [9.0, 5825.0], [9.1, 5828.0], [9.2, 5832.0], [9.3, 5834.0], [9.4, 5835.0], [9.5, 5840.0], [9.6, 5843.0], [9.7, 5846.0], [9.8, 5849.0], [9.9, 5852.0], [10.0, 5857.0], [10.1, 5858.0], [10.2, 5861.0], [10.3, 5864.0], [10.4, 5867.0], [10.5, 5868.0], [10.6, 5869.0], [10.7, 5873.0], [10.8, 5876.0], [10.9, 5880.0], [11.0, 5884.0], [11.1, 5888.0], [11.2, 5891.0], [11.3, 5894.0], [11.4, 5895.0], [11.5, 5896.0], [11.6, 5898.0], [11.7, 5899.0], [11.8, 5902.0], [11.9, 5904.0], [12.0, 5906.0], [12.1, 5906.0], [12.2, 5907.0], [12.3, 5908.0], [12.4, 5911.0], [12.5, 5913.0], [12.6, 5916.0], [12.7, 5917.0], [12.8, 5919.0], [12.9, 5922.0], [13.0, 5923.0], [13.1, 5924.0], [13.2, 5926.0], [13.3, 5927.0], [13.4, 5930.0], [13.5, 5933.0], [13.6, 5934.0], [13.7, 5937.0], [13.8, 5938.0], [13.9, 5939.0], [14.0, 5941.0], [14.1, 5942.0], [14.2, 5943.0], [14.3, 5944.0], [14.4, 5947.0], [14.5, 5949.0], [14.6, 5950.0], [14.7, 5954.0], [14.8, 5954.0], [14.9, 5956.0], [15.0, 5960.0], [15.1, 5964.0], [15.2, 5966.0], [15.3, 5969.0], [15.4, 5970.0], [15.5, 5973.0], [15.6, 5975.0], [15.7, 5977.0], [15.8, 5979.0], [15.9, 5980.0], [16.0, 5983.0], [16.1, 5985.0], [16.2, 5986.0], [16.3, 5988.0], [16.4, 5993.0], [16.5, 5994.0], [16.6, 5995.0], [16.7, 5996.0], [16.8, 5996.0], [16.9, 5997.0], [17.0, 5998.0], [17.1, 5999.0], [17.2, 5999.0], [17.3, 6000.0], [17.4, 6001.0], [17.5, 6002.0], [17.6, 6003.0], [17.7, 6004.0], [17.8, 6006.0], [17.9, 6008.0], [18.0, 6009.0], [18.1, 6010.0], [18.2, 6011.0], [18.3, 6013.0], [18.4, 6014.0], [18.5, 6015.0], [18.6, 6016.0], [18.7, 6019.0], [18.8, 6020.0], [18.9, 6022.0], [19.0, 6024.0], [19.1, 6025.0], [19.2, 6026.0], [19.3, 6028.0], [19.4, 6029.0], [19.5, 6032.0], [19.6, 6035.0], [19.7, 6037.0], [19.8, 6039.0], [19.9, 6040.0], [20.0, 6042.0], [20.1, 6043.0], [20.2, 6045.0], [20.3, 6047.0], [20.4, 6048.0], [20.5, 6049.0], [20.6, 6051.0], [20.7, 6053.0], [20.8, 6053.0], [20.9, 6056.0], [21.0, 6057.0], [21.1, 6058.0], [21.2, 6059.0], [21.3, 6062.0], [21.4, 6064.0], [21.5, 6066.0], [21.6, 6068.0], [21.7, 6070.0], [21.8, 6071.0], [21.9, 6071.0], [22.0, 6073.0], [22.1, 6075.0], [22.2, 6076.0], [22.3, 6077.0], [22.4, 6078.0], [22.5, 6081.0], [22.6, 6082.0], [22.7, 6083.0], [22.8, 6084.0], [22.9, 6085.0], [23.0, 6087.0], [23.1, 6088.0], [23.2, 6089.0], [23.3, 6091.0], [23.4, 6093.0], [23.5, 6095.0], [23.6, 6096.0], [23.7, 6098.0], [23.8, 6098.0], [23.9, 6099.0], [24.0, 6100.0], [24.1, 6100.0], [24.2, 6101.0], [24.3, 6102.0], [24.4, 6103.0], [24.5, 6106.0], [24.6, 6108.0], [24.7, 6112.0], [24.8, 6114.0], [24.9, 6115.0], [25.0, 6117.0], [25.1, 6121.0], [25.2, 6123.0], [25.3, 6125.0], [25.4, 6126.0], [25.5, 6129.0], [25.6, 6132.0], [25.7, 6134.0], [25.8, 6135.0], [25.9, 6137.0], [26.0, 6141.0], [26.1, 6144.0], [26.2, 6148.0], [26.3, 6150.0], [26.4, 6151.0], [26.5, 6153.0], [26.6, 6156.0], [26.7, 6157.0], [26.8, 6158.0], [26.9, 6160.0], [27.0, 6162.0], [27.1, 6166.0], [27.2, 6168.0], [27.3, 6170.0], [27.4, 6171.0], [27.5, 6173.0], [27.6, 6174.0], [27.7, 6177.0], [27.8, 6177.0], [27.9, 6179.0], [28.0, 6181.0], [28.1, 6182.0], [28.2, 6184.0], [28.3, 6186.0], [28.4, 6188.0], [28.5, 6192.0], [28.6, 6194.0], [28.7, 6194.0], [28.8, 6196.0], [28.9, 6197.0], [29.0, 6199.0], [29.1, 6200.0], [29.2, 6201.0], [29.3, 6202.0], [29.4, 6203.0], [29.5, 6204.0], [29.6, 6205.0], [29.7, 6206.0], [29.8, 6208.0], [29.9, 6209.0], [30.0, 6210.0], [30.1, 6211.0], [30.2, 6212.0], [30.3, 6213.0], [30.4, 6214.0], [30.5, 6214.0], [30.6, 6215.0], [30.7, 6216.0], [30.8, 6219.0], [30.9, 6220.0], [31.0, 6221.0], [31.1, 6223.0], [31.2, 6224.0], [31.3, 6226.0], [31.4, 6228.0], [31.5, 6231.0], [31.6, 6232.0], [31.7, 6234.0], [31.8, 6235.0], [31.9, 6236.0], [32.0, 6238.0], [32.1, 6240.0], [32.2, 6243.0], [32.3, 6248.0], [32.4, 6255.0], [32.5, 6258.0], [32.6, 6260.0], [32.7, 6261.0], [32.8, 6263.0], [32.9, 6264.0], [33.0, 6269.0], [33.1, 6272.0], [33.2, 6275.0], [33.3, 6277.0], [33.4, 6280.0], [33.5, 6281.0], [33.6, 6283.0], [33.7, 6284.0], [33.8, 6287.0], [33.9, 6288.0], [34.0, 6289.0], [34.1, 6290.0], [34.2, 6291.0], [34.3, 6292.0], [34.4, 6293.0], [34.5, 6295.0], [34.6, 6297.0], [34.7, 6298.0], [34.8, 6299.0], [34.9, 6300.0], [35.0, 6302.0], [35.1, 6303.0], [35.2, 6303.0], [35.3, 6304.0], [35.4, 6306.0], [35.5, 6307.0], [35.6, 6309.0], [35.7, 6311.0], [35.8, 6312.0], [35.9, 6313.0], [36.0, 6314.0], [36.1, 6315.0], [36.2, 6318.0], [36.3, 6320.0], [36.4, 6322.0], [36.5, 6323.0], [36.6, 6325.0], [36.7, 6329.0], [36.8, 6332.0], [36.9, 6335.0], [37.0, 6338.0], [37.1, 6339.0], [37.2, 6342.0], [37.3, 6344.0], [37.4, 6347.0], [37.5, 6348.0], [37.6, 6350.0], [37.7, 6351.0], [37.8, 6354.0], [37.9, 6355.0], [38.0, 6356.0], [38.1, 6358.0], [38.2, 6361.0], [38.3, 6362.0], [38.4, 6365.0], [38.5, 6367.0], [38.6, 6369.0], [38.7, 6374.0], [38.8, 6376.0], [38.9, 6380.0], [39.0, 6382.0], [39.1, 6383.0], [39.2, 6385.0], [39.3, 6386.0], [39.4, 6387.0], [39.5, 6387.0], [39.6, 6390.0], [39.7, 6391.0], [39.8, 6394.0], [39.9, 6397.0], [40.0, 6398.0], [40.1, 6399.0], [40.2, 6401.0], [40.3, 6402.0], [40.4, 6403.0], [40.5, 6405.0], [40.6, 6408.0], [40.7, 6410.0], [40.8, 6415.0], [40.9, 6418.0], [41.0, 6421.0], [41.1, 6422.0], [41.2, 6426.0], [41.3, 6428.0], [41.4, 6429.0], [41.5, 6431.0], [41.6, 6434.0], [41.7, 6437.0], [41.8, 6441.0], [41.9, 6445.0], [42.0, 6447.0], [42.1, 6450.0], [42.2, 6456.0], [42.3, 6458.0], [42.4, 6460.0], [42.5, 6468.0], [42.6, 6470.0], [42.7, 6473.0], [42.8, 6474.0], [42.9, 6476.0], [43.0, 6477.0], [43.1, 6479.0], [43.2, 6484.0], [43.3, 6485.0], [43.4, 6487.0], [43.5, 6490.0], [43.6, 6491.0], [43.7, 6495.0], [43.8, 6497.0], [43.9, 6501.0], [44.0, 6503.0], [44.1, 6507.0], [44.2, 6510.0], [44.3, 6512.0], [44.4, 6516.0], [44.5, 6520.0], [44.6, 6521.0], [44.7, 6523.0], [44.8, 6525.0], [44.9, 6526.0], [45.0, 6531.0], [45.1, 6536.0], [45.2, 6539.0], [45.3, 6541.0], [45.4, 6544.0], [45.5, 6547.0], [45.6, 6550.0], [45.7, 6553.0], [45.8, 6556.0], [45.9, 6562.0], [46.0, 6565.0], [46.1, 6570.0], [46.2, 6573.0], [46.3, 6576.0], [46.4, 6577.0], [46.5, 6579.0], [46.6, 6581.0], [46.7, 6582.0], [46.8, 6585.0], [46.9, 6586.0], [47.0, 6591.0], [47.1, 6593.0], [47.2, 6595.0], [47.3, 6600.0], [47.4, 6602.0], [47.5, 6605.0], [47.6, 6608.0], [47.7, 6610.0], [47.8, 6612.0], [47.9, 6615.0], [48.0, 6620.0], [48.1, 6623.0], [48.2, 6629.0], [48.3, 6637.0], [48.4, 6642.0], [48.5, 6648.0], [48.6, 6651.0], [48.7, 6653.0], [48.8, 6658.0], [48.9, 6666.0], [49.0, 6674.0], [49.1, 6681.0], [49.2, 6683.0], [49.3, 6685.0], [49.4, 6687.0], [49.5, 6688.0], [49.6, 6691.0], [49.7, 6693.0], [49.8, 6695.0], [49.9, 6698.0], [50.0, 6700.0], [50.1, 6702.0], [50.2, 6704.0], [50.3, 6705.0], [50.4, 6707.0], [50.5, 6708.0], [50.6, 6710.0], [50.7, 6713.0], [50.8, 6717.0], [50.9, 6721.0], [51.0, 6726.0], [51.1, 6730.0], [51.2, 6734.0], [51.3, 6737.0], [51.4, 6742.0], [51.5, 6749.0], [51.6, 6758.0], [51.7, 6768.0], [51.8, 6772.0], [51.9, 6774.0], [52.0, 6778.0], [52.1, 6780.0], [52.2, 6784.0], [52.3, 6789.0], [52.4, 6791.0], [52.5, 6793.0], [52.6, 6797.0], [52.7, 6798.0], [52.8, 6800.0], [52.9, 6804.0], [53.0, 6806.0], [53.1, 6812.0], [53.2, 6817.0], [53.3, 6823.0], [53.4, 6834.0], [53.5, 6845.0], [53.6, 6850.0], [53.7, 6851.0], [53.8, 6854.0], [53.9, 6862.0], [54.0, 6879.0], [54.1, 6882.0], [54.2, 6884.0], [54.3, 6889.0], [54.4, 6893.0], [54.5, 6895.0], [54.6, 6897.0], [54.7, 6899.0], [54.8, 6902.0], [54.9, 6908.0], [55.0, 6913.0], [55.1, 6919.0], [55.2, 6922.0], [55.3, 6925.0], [55.4, 6929.0], [55.5, 6936.0], [55.6, 6948.0], [55.7, 6967.0], [55.8, 6971.0], [55.9, 6981.0], [56.0, 6985.0], [56.1, 6989.0], [56.2, 6994.0], [56.3, 7000.0], [56.4, 7002.0], [56.5, 7004.0], [56.6, 7014.0], [56.7, 7024.0], [56.8, 7030.0], [56.9, 7034.0], [57.0, 7046.0], [57.1, 7057.0], [57.2, 7067.0], [57.3, 7080.0], [57.4, 7084.0], [57.5, 7086.0], [57.6, 7090.0], [57.7, 7092.0], [57.8, 7094.0], [57.9, 7096.0], [58.0, 7102.0], [58.1, 7107.0], [58.2, 7115.0], [58.3, 7121.0], [58.4, 7124.0], [58.5, 7132.0], [58.6, 7139.0], [58.7, 7147.0], [58.8, 7157.0], [58.9, 7164.0], [59.0, 7169.0], [59.1, 7176.0], [59.2, 7181.0], [59.3, 7194.0], [59.4, 7197.0], [59.5, 7201.0], [59.6, 7208.0], [59.7, 7213.0], [59.8, 7222.0], [59.9, 7229.0], [60.0, 7239.0], [60.1, 7246.0], [60.2, 7254.0], [60.3, 7261.0], [60.4, 7270.0], [60.5, 7273.0], [60.6, 7274.0], [60.7, 7280.0], [60.8, 7285.0], [60.9, 7287.0], [61.0, 7293.0], [61.1, 7299.0], [61.2, 7302.0], [61.3, 7307.0], [61.4, 7310.0], [61.5, 7315.0], [61.6, 7319.0], [61.7, 7329.0], [61.8, 7333.0], [61.9, 7339.0], [62.0, 7340.0], [62.1, 7344.0], [62.2, 7348.0], [62.3, 7350.0], [62.4, 7353.0], [62.5, 7362.0], [62.6, 7366.0], [62.7, 7378.0], [62.8, 7381.0], [62.9, 7384.0], [63.0, 7391.0], [63.1, 7395.0], [63.2, 7398.0], [63.3, 7403.0], [63.4, 7408.0], [63.5, 7414.0], [63.6, 7420.0], [63.7, 7431.0], [63.8, 7439.0], [63.9, 7444.0], [64.0, 7450.0], [64.1, 7453.0], [64.2, 7463.0], [64.3, 7469.0], [64.4, 7476.0], [64.5, 7480.0], [64.6, 7485.0], [64.7, 7492.0], [64.8, 7496.0], [64.9, 7498.0], [65.0, 7502.0], [65.1, 7510.0], [65.2, 7513.0], [65.3, 7519.0], [65.4, 7523.0], [65.5, 7538.0], [65.6, 7548.0], [65.7, 7556.0], [65.8, 7561.0], [65.9, 7576.0], [66.0, 7586.0], [66.1, 7590.0], [66.2, 7598.0], [66.3, 7606.0], [66.4, 7611.0], [66.5, 7618.0], [66.6, 7622.0], [66.7, 7628.0], [66.8, 7631.0], [66.9, 7641.0], [67.0, 7646.0], [67.1, 7652.0], [67.2, 7657.0], [67.3, 7671.0], [67.4, 7683.0], [67.5, 7686.0], [67.6, 7703.0], [67.7, 7707.0], [67.8, 7717.0], [67.9, 7727.0], [68.0, 7732.0], [68.1, 7744.0], [68.2, 7758.0], [68.3, 7767.0], [68.4, 7771.0], [68.5, 7779.0], [68.6, 7785.0], [68.7, 7793.0], [68.8, 7803.0], [68.9, 7818.0], [69.0, 7826.0], [69.1, 7842.0], [69.2, 7860.0], [69.3, 7869.0], [69.4, 7885.0], [69.5, 7893.0], [69.6, 7909.0], [69.7, 7914.0], [69.8, 7922.0], [69.9, 7932.0], [70.0, 7947.0], [70.1, 7960.0], [70.2, 7969.0], [70.3, 8016.0], [70.4, 8021.0], [70.5, 8040.0], [70.6, 8062.0], [70.7, 8084.0], [70.8, 8092.0], [70.9, 8105.0], [71.0, 8109.0], [71.1, 8116.0], [71.2, 8138.0], [71.3, 8150.0], [71.4, 8159.0], [71.5, 8168.0], [71.6, 8183.0], [71.7, 8204.0], [71.8, 8224.0], [71.9, 8245.0], [72.0, 8260.0], [72.1, 8281.0], [72.2, 8327.0], [72.3, 8345.0], [72.4, 8363.0], [72.5, 8373.0], [72.6, 8391.0], [72.7, 8416.0], [72.8, 8426.0], [72.9, 8458.0], [73.0, 8492.0], [73.1, 8518.0], [73.2, 8529.0], [73.3, 8563.0], [73.4, 8585.0], [73.5, 8607.0], [73.6, 8625.0], [73.7, 8650.0], [73.8, 8672.0], [73.9, 8697.0], [74.0, 8728.0], [74.1, 8743.0], [74.2, 8765.0], [74.3, 8775.0], [74.4, 8794.0], [74.5, 8805.0], [74.6, 8823.0], [74.7, 8838.0], [74.8, 8855.0], [74.9, 8901.0], [75.0, 8909.0], [75.1, 8917.0], [75.2, 8937.0], [75.3, 8947.0], [75.4, 8954.0], [75.5, 8963.0], [75.6, 8981.0], [75.7, 8997.0], [75.8, 9029.0], [75.9, 9036.0], [76.0, 9052.0], [76.1, 9072.0], [76.2, 9093.0], [76.3, 9111.0], [76.4, 9113.0], [76.5, 9144.0], [76.6, 9151.0], [76.7, 9167.0], [76.8, 9178.0], [76.9, 9192.0], [77.0, 9205.0], [77.1, 9216.0], [77.2, 9224.0], [77.3, 9231.0], [77.4, 9240.0], [77.5, 9252.0], [77.6, 9260.0], [77.7, 9285.0], [77.8, 9297.0], [77.9, 9315.0], [78.0, 9328.0], [78.1, 9333.0], [78.2, 9346.0], [78.3, 9373.0], [78.4, 9386.0], [78.5, 9398.0], [78.6, 9402.0], [78.7, 9405.0], [78.8, 9409.0], [78.9, 9414.0], [79.0, 9429.0], [79.1, 9437.0], [79.2, 9442.0], [79.3, 9452.0], [79.4, 9459.0], [79.5, 9471.0], [79.6, 9492.0], [79.7, 9497.0], [79.8, 9505.0], [79.9, 9514.0], [80.0, 9527.0], [80.1, 9540.0], [80.2, 9545.0], [80.3, 9553.0], [80.4, 9560.0], [80.5, 9574.0], [80.6, 9578.0], [80.7, 9587.0], [80.8, 9605.0], [80.9, 9620.0], [81.0, 9632.0], [81.1, 9644.0], [81.2, 9655.0], [81.3, 9659.0], [81.4, 9666.0], [81.5, 9684.0], [81.6, 9699.0], [81.7, 9718.0], [81.8, 9749.0], [81.9, 9759.0], [82.0, 9766.0], [82.1, 9779.0], [82.2, 9789.0], [82.3, 9803.0], [82.4, 9821.0], [82.5, 9824.0], [82.6, 9855.0], [82.7, 9874.0], [82.8, 9878.0], [82.9, 9885.0], [83.0, 9900.0], [83.1, 9907.0], [83.2, 9941.0], [83.3, 9967.0], [83.4, 9997.0], [83.5, 10081.0], [83.6, 10098.0], [83.7, 10145.0], [83.8, 10281.0], [83.9, 10358.0], [84.0, 10410.0], [84.1, 10502.0], [84.2, 10626.0], [84.3, 10885.0], [84.4, 11019.0], [84.5, 11242.0], [84.6, 11634.0], [84.7, 12060.0], [84.8, 12210.0], [84.9, 12465.0], [85.0, 12553.0], [85.1, 12651.0], [85.2, 12805.0], [85.3, 12982.0], [85.4, 13103.0], [85.5, 13161.0], [85.6, 13252.0], [85.7, 13305.0], [85.8, 13346.0], [85.9, 13519.0], [86.0, 13561.0], [86.1, 13605.0], [86.2, 13725.0], [86.3, 13785.0], [86.4, 13872.0], [86.5, 13946.0], [86.6, 14051.0], [86.7, 14116.0], [86.8, 14195.0], [86.9, 14264.0], [87.0, 14324.0], [87.1, 14417.0], [87.2, 14495.0], [87.3, 14578.0], [87.4, 14643.0], [87.5, 14668.0], [87.6, 14762.0], [87.7, 14817.0], [87.8, 14846.0], [87.9, 14911.0], [88.0, 14956.0], [88.1, 15024.0], [88.2, 15109.0], [88.3, 15164.0], [88.4, 15187.0], [88.5, 15196.0], [88.6, 15252.0], [88.7, 15264.0], [88.8, 15302.0], [88.9, 15347.0], [89.0, 15383.0], [89.1, 15429.0], [89.2, 15456.0], [89.3, 15477.0], [89.4, 15522.0], [89.5, 15536.0], [89.6, 15579.0], [89.7, 15603.0], [89.8, 15648.0], [89.9, 15680.0], [90.0, 15711.0], [90.1, 15747.0], [90.2, 15780.0], [90.3, 15804.0], [90.4, 15843.0], [90.5, 15880.0], [90.6, 15918.0], [90.7, 15951.0], [90.8, 15984.0], [90.9, 16039.0], [91.0, 16067.0], [91.1, 16094.0], [91.2, 16141.0], [91.3, 16189.0], [91.4, 16243.0], [91.5, 16259.0], [91.6, 16302.0], [91.7, 16315.0], [91.8, 16334.0], [91.9, 16354.0], [92.0, 16416.0], [92.1, 16462.0], [92.2, 16473.0], [92.3, 16527.0], [92.4, 16571.0], [92.5, 16616.0], [92.6, 16648.0], [92.7, 16681.0], [92.8, 16701.0], [92.9, 16731.0], [93.0, 16783.0], [93.1, 16807.0], [93.2, 16841.0], [93.3, 16857.0], [93.4, 16897.0], [93.5, 16932.0], [93.6, 16976.0], [93.7, 17050.0], [93.8, 17077.0], [93.9, 17101.0], [94.0, 17124.0], [94.1, 17163.0], [94.2, 17191.0], [94.3, 17237.0], [94.4, 17249.0], [94.5, 17282.0], [94.6, 17315.0], [94.7, 17333.0], [94.8, 17362.0], [94.9, 17398.0], [95.0, 17433.0], [95.1, 17478.0], [95.2, 17514.0], [95.3, 17560.0], [95.4, 17596.0], [95.5, 17626.0], [95.6, 17683.0], [95.7, 17712.0], [95.8, 17754.0], [95.9, 17783.0], [96.0, 17830.0], [96.1, 17869.0], [96.2, 17939.0], [96.3, 17967.0], [96.4, 18026.0], [96.5, 18082.0], [96.6, 18123.0], [96.7, 18235.0], [96.8, 18271.0], [96.9, 18296.0], [97.0, 18390.0], [97.1, 18504.0], [97.2, 18567.0], [97.3, 18757.0], [97.4, 18873.0], [97.5, 19111.0], [97.6, 19416.0], [97.7, 20147.0], [97.8, 20587.0], [97.9, 21263.0], [98.0, 21937.0], [98.1, 22284.0], [98.2, 22920.0], [98.3, 23083.0], [98.4, 23922.0], [98.5, 24893.0], [98.6, 25346.0], [98.7, 25434.0], [98.8, 25610.0], [98.9, 25898.0], [99.0, 26063.0], [99.1, 26522.0], [99.2, 26783.0], [99.3, 27452.0], [99.4, 27791.0], [99.5, 28145.0], [99.6, 29108.0], [99.7, 29788.0], [99.8, 31288.0], [99.9, 31717.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[0.0, 55265.0], [0.1, 55265.0], [0.2, 55265.0], [0.3, 55265.0], [0.4, 55265.0], [0.5, 55265.0], [0.6, 55265.0], [0.7, 55265.0], [0.8, 55265.0], [0.9, 55265.0], [1.0, 55265.0], [1.1, 55265.0], [1.2, 55265.0], [1.3, 55265.0], [1.4, 55265.0], [1.5, 55265.0], [1.6, 55265.0], [1.7, 55265.0], [1.8, 55265.0], [1.9, 55265.0], [2.0, 55265.0], [2.1, 55265.0], [2.2, 55265.0], [2.3, 55265.0], [2.4, 55265.0], [2.5, 55265.0], [2.6, 55265.0], [2.7, 55265.0], [2.8, 55265.0], [2.9, 55265.0], [3.0, 55265.0], [3.1, 55265.0], [3.2, 55265.0], [3.3, 55265.0], [3.4, 55265.0], [3.5, 55265.0], [3.6, 55265.0], [3.7, 55265.0], [3.8, 55265.0], [3.9, 55265.0], [4.0, 55265.0], [4.1, 55265.0], [4.2, 55265.0], [4.3, 55265.0], [4.4, 55265.0], [4.5, 55265.0], [4.6, 55265.0], [4.7, 55265.0], [4.8, 55265.0], [4.9, 55265.0], [5.0, 55265.0], [5.1, 55265.0], [5.2, 55265.0], [5.3, 55265.0], [5.4, 55265.0], [5.5, 55265.0], [5.6, 55265.0], [5.7, 55265.0], [5.8, 55265.0], [5.9, 55265.0], [6.0, 55265.0], [6.1, 55265.0], [6.2, 55265.0], [6.3, 55265.0], [6.4, 55265.0], [6.5, 55265.0], [6.6, 55265.0], [6.7, 55265.0], [6.8, 55265.0], [6.9, 55265.0], [7.0, 55265.0], [7.1, 55265.0], [7.2, 55265.0], [7.3, 55265.0], [7.4, 55265.0], [7.5, 55265.0], [7.6, 55265.0], [7.7, 55265.0], [7.8, 55265.0], [7.9, 55265.0], [8.0, 55265.0], [8.1, 55265.0], [8.2, 55265.0], [8.3, 55265.0], [8.4, 55265.0], [8.5, 55265.0], [8.6, 55265.0], [8.7, 55265.0], [8.8, 55265.0], [8.9, 55265.0], [9.0, 55265.0], [9.1, 55265.0], [9.2, 55265.0], [9.3, 55265.0], [9.4, 55265.0], [9.5, 55265.0], [9.6, 55265.0], [9.7, 55265.0], [9.8, 55265.0], [9.9, 55265.0], [10.0, 55265.0], [10.1, 55265.0], [10.2, 55265.0], [10.3, 55265.0], [10.4, 55265.0], [10.5, 55265.0], [10.6, 55265.0], [10.7, 55265.0], [10.8, 55265.0], [10.9, 55265.0], [11.0, 55265.0], [11.1, 55265.0], [11.2, 55265.0], [11.3, 55265.0], [11.4, 55265.0], [11.5, 55265.0], [11.6, 55265.0], [11.7, 55265.0], [11.8, 55265.0], [11.9, 55265.0], [12.0, 55265.0], [12.1, 55265.0], [12.2, 55265.0], [12.3, 55265.0], [12.4, 55265.0], [12.5, 55265.0], [12.6, 55265.0], [12.7, 55265.0], [12.8, 55265.0], [12.9, 55265.0], [13.0, 55265.0], [13.1, 55265.0], [13.2, 55265.0], [13.3, 55265.0], [13.4, 55265.0], [13.5, 55265.0], [13.6, 55265.0], [13.7, 55265.0], [13.8, 55265.0], [13.9, 55265.0], [14.0, 55265.0], [14.1, 55265.0], [14.2, 55265.0], [14.3, 55265.0], [14.4, 55265.0], [14.5, 55265.0], [14.6, 55265.0], [14.7, 55265.0], [14.8, 55265.0], [14.9, 55265.0], [15.0, 55265.0], [15.1, 55265.0], [15.2, 55265.0], [15.3, 55265.0], [15.4, 55265.0], [15.5, 55265.0], [15.6, 55265.0], [15.7, 55265.0], [15.8, 55265.0], [15.9, 55265.0], [16.0, 55265.0], [16.1, 55265.0], [16.2, 55265.0], [16.3, 55265.0], [16.4, 55265.0], [16.5, 55265.0], [16.6, 55265.0], [16.7, 55265.0], [16.8, 55265.0], [16.9, 55265.0], [17.0, 55265.0], [17.1, 55265.0], [17.2, 55265.0], [17.3, 55265.0], [17.4, 55265.0], [17.5, 55265.0], [17.6, 55265.0], [17.7, 55265.0], [17.8, 55265.0], [17.9, 55265.0], [18.0, 55265.0], [18.1, 55265.0], [18.2, 55265.0], [18.3, 55265.0], [18.4, 55265.0], [18.5, 55265.0], [18.6, 55265.0], [18.7, 55265.0], [18.8, 55265.0], [18.9, 55265.0], [19.0, 55265.0], [19.1, 55265.0], [19.2, 55265.0], [19.3, 55265.0], [19.4, 55265.0], [19.5, 55265.0], [19.6, 55265.0], [19.7, 55265.0], [19.8, 55265.0], [19.9, 55265.0], [20.0, 55265.0], [20.1, 55265.0], [20.2, 55265.0], [20.3, 55265.0], [20.4, 55265.0], [20.5, 55265.0], [20.6, 55265.0], [20.7, 55265.0], [20.8, 55265.0], [20.9, 55265.0], [21.0, 55265.0], [21.1, 55265.0], [21.2, 55265.0], [21.3, 55265.0], [21.4, 55265.0], [21.5, 55265.0], [21.6, 55265.0], [21.7, 55265.0], [21.8, 55265.0], [21.9, 55265.0], [22.0, 55265.0], [22.1, 55265.0], [22.2, 55265.0], [22.3, 55265.0], [22.4, 55265.0], [22.5, 55265.0], [22.6, 55265.0], [22.7, 55265.0], [22.8, 55265.0], [22.9, 55265.0], [23.0, 55265.0], [23.1, 55265.0], [23.2, 55265.0], [23.3, 55265.0], [23.4, 55265.0], [23.5, 55265.0], [23.6, 55265.0], [23.7, 55265.0], [23.8, 55265.0], [23.9, 55265.0], [24.0, 55265.0], [24.1, 55265.0], [24.2, 55265.0], [24.3, 55265.0], [24.4, 55265.0], [24.5, 55265.0], [24.6, 55265.0], [24.7, 55265.0], [24.8, 55265.0], [24.9, 55265.0], [25.0, 55265.0], [25.1, 55265.0], [25.2, 55265.0], [25.3, 55265.0], [25.4, 55265.0], [25.5, 55265.0], [25.6, 55265.0], [25.7, 55265.0], [25.8, 55265.0], [25.9, 55265.0], [26.0, 55265.0], [26.1, 55265.0], [26.2, 55265.0], [26.3, 55265.0], [26.4, 55265.0], [26.5, 55265.0], [26.6, 55265.0], [26.7, 55265.0], [26.8, 55265.0], [26.9, 55265.0], [27.0, 55265.0], [27.1, 55265.0], [27.2, 55265.0], [27.3, 55265.0], [27.4, 55265.0], [27.5, 55265.0], [27.6, 55265.0], [27.7, 55265.0], [27.8, 55265.0], [27.9, 55265.0], [28.0, 55265.0], [28.1, 55265.0], [28.2, 55265.0], [28.3, 55265.0], [28.4, 55265.0], [28.5, 55265.0], [28.6, 55265.0], [28.7, 55265.0], [28.8, 55265.0], [28.9, 55265.0], [29.0, 55265.0], [29.1, 55265.0], [29.2, 55265.0], [29.3, 55265.0], [29.4, 55265.0], [29.5, 55265.0], [29.6, 55265.0], [29.7, 55265.0], [29.8, 55265.0], [29.9, 55265.0], [30.0, 55265.0], [30.1, 55265.0], [30.2, 55265.0], [30.3, 55265.0], [30.4, 55265.0], [30.5, 55265.0], [30.6, 55265.0], [30.7, 55265.0], [30.8, 55265.0], [30.9, 55265.0], [31.0, 55265.0], [31.1, 55265.0], [31.2, 55265.0], [31.3, 55265.0], [31.4, 55265.0], [31.5, 55265.0], [31.6, 55265.0], [31.7, 55265.0], [31.8, 55265.0], [31.9, 55265.0], [32.0, 55265.0], [32.1, 55265.0], [32.2, 55265.0], [32.3, 55265.0], [32.4, 55265.0], [32.5, 55265.0], [32.6, 55265.0], [32.7, 55265.0], [32.8, 55265.0], [32.9, 55265.0], [33.0, 55265.0], [33.1, 55265.0], [33.2, 55265.0], [33.3, 55265.0], [33.4, 55265.0], [33.5, 55265.0], [33.6, 55265.0], [33.7, 55265.0], [33.8, 55265.0], [33.9, 55265.0], [34.0, 55265.0], [34.1, 55265.0], [34.2, 55265.0], [34.3, 55265.0], [34.4, 55265.0], [34.5, 55265.0], [34.6, 55265.0], [34.7, 55265.0], [34.8, 55265.0], [34.9, 55265.0], [35.0, 55265.0], [35.1, 55265.0], [35.2, 55265.0], [35.3, 55265.0], [35.4, 55265.0], [35.5, 55265.0], [35.6, 55265.0], [35.7, 55265.0], [35.8, 55265.0], [35.9, 55265.0], [36.0, 55265.0], [36.1, 55265.0], [36.2, 55265.0], [36.3, 55265.0], [36.4, 55265.0], [36.5, 55265.0], [36.6, 55265.0], [36.7, 55265.0], [36.8, 55265.0], [36.9, 55265.0], [37.0, 55265.0], [37.1, 55265.0], [37.2, 55265.0], [37.3, 55265.0], [37.4, 55265.0], [37.5, 55265.0], [37.6, 55265.0], [37.7, 55265.0], [37.8, 55265.0], [37.9, 55265.0], [38.0, 55265.0], [38.1, 55265.0], [38.2, 55265.0], [38.3, 55265.0], [38.4, 55265.0], [38.5, 55265.0], [38.6, 55265.0], [38.7, 55265.0], [38.8, 55265.0], [38.9, 55265.0], [39.0, 55265.0], [39.1, 55265.0], [39.2, 55265.0], [39.3, 55265.0], [39.4, 55265.0], [39.5, 55265.0], [39.6, 55265.0], [39.7, 55265.0], [39.8, 55265.0], [39.9, 55265.0], [40.0, 55265.0], [40.1, 55265.0], [40.2, 55265.0], [40.3, 55265.0], [40.4, 55265.0], [40.5, 55265.0], [40.6, 55265.0], [40.7, 55265.0], [40.8, 55265.0], [40.9, 55265.0], [41.0, 55265.0], [41.1, 55265.0], [41.2, 55265.0], [41.3, 55265.0], [41.4, 55265.0], [41.5, 55265.0], [41.6, 55265.0], [41.7, 55265.0], [41.8, 55265.0], [41.9, 55265.0], [42.0, 55265.0], [42.1, 55265.0], [42.2, 55265.0], [42.3, 55265.0], [42.4, 55265.0], [42.5, 55265.0], [42.6, 55265.0], [42.7, 55265.0], [42.8, 55265.0], [42.9, 55265.0], [43.0, 55265.0], [43.1, 55265.0], [43.2, 55265.0], [43.3, 55265.0], [43.4, 55265.0], [43.5, 55265.0], [43.6, 55265.0], [43.7, 55265.0], [43.8, 55265.0], [43.9, 55265.0], [44.0, 55265.0], [44.1, 55265.0], [44.2, 55265.0], [44.3, 55265.0], [44.4, 55265.0], [44.5, 55265.0], [44.6, 55265.0], [44.7, 55265.0], [44.8, 55265.0], [44.9, 55265.0], [45.0, 55265.0], [45.1, 55265.0], [45.2, 55265.0], [45.3, 55265.0], [45.4, 55265.0], [45.5, 55265.0], [45.6, 55265.0], [45.7, 55265.0], [45.8, 55265.0], [45.9, 55265.0], [46.0, 55265.0], [46.1, 55265.0], [46.2, 55265.0], [46.3, 55265.0], [46.4, 55265.0], [46.5, 55265.0], [46.6, 55265.0], [46.7, 55265.0], [46.8, 55265.0], [46.9, 55265.0], [47.0, 55265.0], [47.1, 55265.0], [47.2, 55265.0], [47.3, 55265.0], [47.4, 55265.0], [47.5, 55265.0], [47.6, 55265.0], [47.7, 55265.0], [47.8, 55265.0], [47.9, 55265.0], [48.0, 55265.0], [48.1, 55265.0], [48.2, 55265.0], [48.3, 55265.0], [48.4, 55265.0], [48.5, 55265.0], [48.6, 55265.0], [48.7, 55265.0], [48.8, 55265.0], [48.9, 55265.0], [49.0, 55265.0], [49.1, 55265.0], [49.2, 55265.0], [49.3, 55265.0], [49.4, 55265.0], [49.5, 55265.0], [49.6, 55265.0], [49.7, 55265.0], [49.8, 55265.0], [49.9, 55265.0], [50.0, 55265.0], [50.1, 55265.0], [50.2, 55265.0], [50.3, 55265.0], [50.4, 55265.0], [50.5, 55265.0], [50.6, 55265.0], [50.7, 55265.0], [50.8, 55265.0], [50.9, 55265.0], [51.0, 55265.0], [51.1, 55265.0], [51.2, 55265.0], [51.3, 55265.0], [51.4, 55265.0], [51.5, 55265.0], [51.6, 55265.0], [51.7, 55265.0], [51.8, 55265.0], [51.9, 55265.0], [52.0, 55265.0], [52.1, 55265.0], [52.2, 55265.0], [52.3, 55265.0], [52.4, 55265.0], [52.5, 55265.0], [52.6, 55265.0], [52.7, 55265.0], [52.8, 55265.0], [52.9, 55265.0], [53.0, 55265.0], [53.1, 55265.0], [53.2, 55265.0], [53.3, 55265.0], [53.4, 55265.0], [53.5, 55265.0], [53.6, 55265.0], [53.7, 55265.0], [53.8, 55265.0], [53.9, 55265.0], [54.0, 55265.0], [54.1, 55265.0], [54.2, 55265.0], [54.3, 55265.0], [54.4, 55265.0], [54.5, 55265.0], [54.6, 55265.0], [54.7, 55265.0], [54.8, 55265.0], [54.9, 55265.0], [55.0, 55265.0], [55.1, 55265.0], [55.2, 55265.0], [55.3, 55265.0], [55.4, 55265.0], [55.5, 55265.0], [55.6, 55265.0], [55.7, 55265.0], [55.8, 55265.0], [55.9, 55265.0], [56.0, 55265.0], [56.1, 55265.0], [56.2, 55265.0], [56.3, 55265.0], [56.4, 55265.0], [56.5, 55265.0], [56.6, 55265.0], [56.7, 55265.0], [56.8, 55265.0], [56.9, 55265.0], [57.0, 55265.0], [57.1, 55265.0], [57.2, 55265.0], [57.3, 55265.0], [57.4, 55265.0], [57.5, 55265.0], [57.6, 55265.0], [57.7, 55265.0], [57.8, 55265.0], [57.9, 55265.0], [58.0, 55265.0], [58.1, 55265.0], [58.2, 55265.0], [58.3, 55265.0], [58.4, 55265.0], [58.5, 55265.0], [58.6, 55265.0], [58.7, 55265.0], [58.8, 55265.0], [58.9, 55265.0], [59.0, 55265.0], [59.1, 55265.0], [59.2, 55265.0], [59.3, 55265.0], [59.4, 55265.0], [59.5, 55265.0], [59.6, 55265.0], [59.7, 55265.0], [59.8, 55265.0], [59.9, 55265.0], [60.0, 55265.0], [60.1, 55265.0], [60.2, 55265.0], [60.3, 55265.0], [60.4, 55265.0], [60.5, 55265.0], [60.6, 55265.0], [60.7, 55265.0], [60.8, 55265.0], [60.9, 55265.0], [61.0, 55265.0], [61.1, 55265.0], [61.2, 55265.0], [61.3, 55265.0], [61.4, 55265.0], [61.5, 55265.0], [61.6, 55265.0], [61.7, 55265.0], [61.8, 55265.0], [61.9, 55265.0], [62.0, 55265.0], [62.1, 55265.0], [62.2, 55265.0], [62.3, 55265.0], [62.4, 55265.0], [62.5, 55265.0], [62.6, 55265.0], [62.7, 55265.0], [62.8, 55265.0], [62.9, 55265.0], [63.0, 55265.0], [63.1, 55265.0], [63.2, 55265.0], [63.3, 55265.0], [63.4, 55265.0], [63.5, 55265.0], [63.6, 55265.0], [63.7, 55265.0], [63.8, 55265.0], [63.9, 55265.0], [64.0, 55265.0], [64.1, 55265.0], [64.2, 55265.0], [64.3, 55265.0], [64.4, 55265.0], [64.5, 55265.0], [64.6, 55265.0], [64.7, 55265.0], [64.8, 55265.0], [64.9, 55265.0], [65.0, 55265.0], [65.1, 55265.0], [65.2, 55265.0], [65.3, 55265.0], [65.4, 55265.0], [65.5, 55265.0], [65.6, 55265.0], [65.7, 55265.0], [65.8, 55265.0], [65.9, 55265.0], [66.0, 55265.0], [66.1, 55265.0], [66.2, 55265.0], [66.3, 55265.0], [66.4, 55265.0], [66.5, 55265.0], [66.6, 55265.0], [66.7, 55265.0], [66.8, 55265.0], [66.9, 55265.0], [67.0, 55265.0], [67.1, 55265.0], [67.2, 55265.0], [67.3, 55265.0], [67.4, 55265.0], [67.5, 55265.0], [67.6, 55265.0], [67.7, 55265.0], [67.8, 55265.0], [67.9, 55265.0], [68.0, 55265.0], [68.1, 55265.0], [68.2, 55265.0], [68.3, 55265.0], [68.4, 55265.0], [68.5, 55265.0], [68.6, 55265.0], [68.7, 55265.0], [68.8, 55265.0], [68.9, 55265.0], [69.0, 55265.0], [69.1, 55265.0], [69.2, 55265.0], [69.3, 55265.0], [69.4, 55265.0], [69.5, 55265.0], [69.6, 55265.0], [69.7, 55265.0], [69.8, 55265.0], [69.9, 55265.0], [70.0, 55265.0], [70.1, 55265.0], [70.2, 55265.0], [70.3, 55265.0], [70.4, 55265.0], [70.5, 55265.0], [70.6, 55265.0], [70.7, 55265.0], [70.8, 55265.0], [70.9, 55265.0], [71.0, 55265.0], [71.1, 55265.0], [71.2, 55265.0], [71.3, 55265.0], [71.4, 55265.0], [71.5, 55265.0], [71.6, 55265.0], [71.7, 55265.0], [71.8, 55265.0], [71.9, 55265.0], [72.0, 55265.0], [72.1, 55265.0], [72.2, 55265.0], [72.3, 55265.0], [72.4, 55265.0], [72.5, 55265.0], [72.6, 55265.0], [72.7, 55265.0], [72.8, 55265.0], [72.9, 55265.0], [73.0, 55265.0], [73.1, 55265.0], [73.2, 55265.0], [73.3, 55265.0], [73.4, 55265.0], [73.5, 55265.0], [73.6, 55265.0], [73.7, 55265.0], [73.8, 55265.0], [73.9, 55265.0], [74.0, 55265.0], [74.1, 55265.0], [74.2, 55265.0], [74.3, 55265.0], [74.4, 55265.0], [74.5, 55265.0], [74.6, 55265.0], [74.7, 55265.0], [74.8, 55265.0], [74.9, 55265.0], [75.0, 55265.0], [75.1, 55265.0], [75.2, 55265.0], [75.3, 55265.0], [75.4, 55265.0], [75.5, 55265.0], [75.6, 55265.0], [75.7, 55265.0], [75.8, 55265.0], [75.9, 55265.0], [76.0, 55265.0], [76.1, 55265.0], [76.2, 55265.0], [76.3, 55265.0], [76.4, 55265.0], [76.5, 55265.0], [76.6, 55265.0], [76.7, 55265.0], [76.8, 55265.0], [76.9, 55265.0], [77.0, 55265.0], [77.1, 55265.0], [77.2, 55265.0], [77.3, 55265.0], [77.4, 55265.0], [77.5, 55265.0], [77.6, 55265.0], [77.7, 55265.0], [77.8, 55265.0], [77.9, 55265.0], [78.0, 55265.0], [78.1, 55265.0], [78.2, 55265.0], [78.3, 55265.0], [78.4, 55265.0], [78.5, 55265.0], [78.6, 55265.0], [78.7, 55265.0], [78.8, 55265.0], [78.9, 55265.0], [79.0, 55265.0], [79.1, 55265.0], [79.2, 55265.0], [79.3, 55265.0], [79.4, 55265.0], [79.5, 55265.0], [79.6, 55265.0], [79.7, 55265.0], [79.8, 55265.0], [79.9, 55265.0], [80.0, 55265.0], [80.1, 55265.0], [80.2, 55265.0], [80.3, 55265.0], [80.4, 55265.0], [80.5, 55265.0], [80.6, 55265.0], [80.7, 55265.0], [80.8, 55265.0], [80.9, 55265.0], [81.0, 55265.0], [81.1, 55265.0], [81.2, 55265.0], [81.3, 55265.0], [81.4, 55265.0], [81.5, 55265.0], [81.6, 55265.0], [81.7, 55265.0], [81.8, 55265.0], [81.9, 55265.0], [82.0, 55265.0], [82.1, 55265.0], [82.2, 55265.0], [82.3, 55265.0], [82.4, 55265.0], [82.5, 55265.0], [82.6, 55265.0], [82.7, 55265.0], [82.8, 55265.0], [82.9, 55265.0], [83.0, 55265.0], [83.1, 55265.0], [83.2, 55265.0], [83.3, 55265.0], [83.4, 55265.0], [83.5, 55265.0], [83.6, 55265.0], [83.7, 55265.0], [83.8, 55265.0], [83.9, 55265.0], [84.0, 55265.0], [84.1, 55265.0], [84.2, 55265.0], [84.3, 55265.0], [84.4, 55265.0], [84.5, 55265.0], [84.6, 55265.0], [84.7, 55265.0], [84.8, 55265.0], [84.9, 55265.0], [85.0, 55265.0], [85.1, 55265.0], [85.2, 55265.0], [85.3, 55265.0], [85.4, 55265.0], [85.5, 55265.0], [85.6, 55265.0], [85.7, 55265.0], [85.8, 55265.0], [85.9, 55265.0], [86.0, 55265.0], [86.1, 55265.0], [86.2, 55265.0], [86.3, 55265.0], [86.4, 55265.0], [86.5, 55265.0], [86.6, 55265.0], [86.7, 55265.0], [86.8, 55265.0], [86.9, 55265.0], [87.0, 55265.0], [87.1, 55265.0], [87.2, 55265.0], [87.3, 55265.0], [87.4, 55265.0], [87.5, 55265.0], [87.6, 55265.0], [87.7, 55265.0], [87.8, 55265.0], [87.9, 55265.0], [88.0, 55265.0], [88.1, 55265.0], [88.2, 55265.0], [88.3, 55265.0], [88.4, 55265.0], [88.5, 55265.0], [88.6, 55265.0], [88.7, 55265.0], [88.8, 55265.0], [88.9, 55265.0], [89.0, 55265.0], [89.1, 55265.0], [89.2, 55265.0], [89.3, 55265.0], [89.4, 55265.0], [89.5, 55265.0], [89.6, 55265.0], [89.7, 55265.0], [89.8, 55265.0], [89.9, 55265.0], [90.0, 55265.0], [90.1, 55265.0], [90.2, 55265.0], [90.3, 55265.0], [90.4, 55265.0], [90.5, 55265.0], [90.6, 55265.0], [90.7, 55265.0], [90.8, 55265.0], [90.9, 55265.0], [91.0, 55265.0], [91.1, 55265.0], [91.2, 55265.0], [91.3, 55265.0], [91.4, 55265.0], [91.5, 55265.0], [91.6, 55265.0], [91.7, 55265.0], [91.8, 55265.0], [91.9, 55265.0], [92.0, 55265.0], [92.1, 55265.0], [92.2, 55265.0], [92.3, 55265.0], [92.4, 55265.0], [92.5, 55265.0], [92.6, 55265.0], [92.7, 55265.0], [92.8, 55265.0], [92.9, 55265.0], [93.0, 55265.0], [93.1, 55265.0], [93.2, 55265.0], [93.3, 55265.0], [93.4, 55265.0], [93.5, 55265.0], [93.6, 55265.0], [93.7, 55265.0], [93.8, 55265.0], [93.9, 55265.0], [94.0, 55265.0], [94.1, 55265.0], [94.2, 55265.0], [94.3, 55265.0], [94.4, 55265.0], [94.5, 55265.0], [94.6, 55265.0], [94.7, 55265.0], [94.8, 55265.0], [94.9, 55265.0], [95.0, 55265.0], [95.1, 55265.0], [95.2, 55265.0], [95.3, 55265.0], [95.4, 55265.0], [95.5, 55265.0], [95.6, 55265.0], [95.7, 55265.0], [95.8, 55265.0], [95.9, 55265.0], [96.0, 55265.0], [96.1, 55265.0], [96.2, 55265.0], [96.3, 55265.0], [96.4, 55265.0], [96.5, 55265.0], [96.6, 55265.0], [96.7, 55265.0], [96.8, 55265.0], [96.9, 55265.0], [97.0, 55265.0], [97.1, 55265.0], [97.2, 55265.0], [97.3, 55265.0], [97.4, 55265.0], [97.5, 55265.0], [97.6, 55265.0], [97.7, 55265.0], [97.8, 55265.0], [97.9, 55265.0], [98.0, 55265.0], [98.1, 55265.0], [98.2, 55265.0], [98.3, 55265.0], [98.4, 55265.0], [98.5, 55265.0], [98.6, 55265.0], [98.7, 55265.0], [98.8, 55265.0], [98.9, 55265.0], [99.0, 55265.0], [99.1, 55265.0], [99.2, 55265.0], [99.3, 55265.0], [99.4, 55265.0], [99.5, 55265.0], [99.6, 55265.0], [99.7, 55265.0], [99.8, 55265.0], [99.9, 55265.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[0.0, 6264.0], [0.1, 6264.0], [0.2, 6264.0], [0.3, 6264.0], [0.4, 6429.0], [0.5, 6429.0], [0.6, 6429.0], [0.7, 7212.0], [0.8, 7212.0], [0.9, 7212.0], [1.0, 7259.0], [1.1, 7259.0], [1.2, 7259.0], [1.3, 7259.0], [1.4, 7275.0], [1.5, 7275.0], [1.6, 7275.0], [1.7, 7396.0], [1.8, 7396.0], [1.9, 7396.0], [2.0, 7396.0], [2.1, 7396.0], [2.2, 7396.0], [2.3, 7396.0], [2.4, 7467.0], [2.5, 7467.0], [2.6, 7467.0], [2.7, 7482.0], [2.8, 7482.0], [2.9, 7482.0], [3.0, 7538.0], [3.1, 7538.0], [3.2, 7538.0], [3.3, 7538.0], [3.4, 7612.0], [3.5, 7612.0], [3.6, 7612.0], [3.7, 7642.0], [3.8, 7642.0], [3.9, 7642.0], [4.0, 7703.0], [4.1, 7703.0], [4.2, 7703.0], [4.3, 7703.0], [4.4, 7736.0], [4.5, 7736.0], [4.6, 7736.0], [4.7, 7739.0], [4.8, 7739.0], [4.9, 7739.0], [5.0, 7740.0], [5.1, 7740.0], [5.2, 7740.0], [5.3, 7740.0], [5.4, 7792.0], [5.5, 7792.0], [5.6, 7792.0], [5.7, 7813.0], [5.8, 7813.0], [5.9, 7813.0], [6.0, 7948.0], [6.1, 7948.0], [6.2, 7948.0], [6.3, 7948.0], [6.4, 7956.0], [6.5, 7956.0], [6.6, 7956.0], [6.7, 8094.0], [6.8, 8094.0], [6.9, 8094.0], [7.0, 8113.0], [7.1, 8113.0], [7.2, 8113.0], [7.3, 8113.0], [7.4, 8213.0], [7.5, 8213.0], [7.6, 8213.0], [7.7, 8235.0], [7.8, 8235.0], [7.9, 8235.0], [8.0, 8407.0], [8.1, 8407.0], [8.2, 8407.0], [8.3, 8407.0], [8.4, 8575.0], [8.5, 8575.0], [8.6, 8575.0], [8.7, 8651.0], [8.8, 8651.0], [8.9, 8651.0], [9.0, 8734.0], [9.1, 8734.0], [9.2, 8734.0], [9.3, 8734.0], [9.4, 8885.0], [9.5, 8885.0], [9.6, 8885.0], [9.7, 9006.0], [9.8, 9006.0], [9.9, 9006.0], [10.0, 9046.0], [10.1, 9046.0], [10.2, 9046.0], [10.3, 9046.0], [10.4, 9134.0], [10.5, 9134.0], [10.6, 9134.0], [10.7, 9159.0], [10.8, 9159.0], [10.9, 9159.0], [11.0, 9159.0], [11.1, 9204.0], [11.2, 9204.0], [11.3, 9204.0], [11.4, 9278.0], [11.5, 9278.0], [11.6, 9278.0], [11.7, 9544.0], [11.8, 9544.0], [11.9, 9544.0], [12.0, 9544.0], [12.1, 9562.0], [12.2, 9562.0], [12.3, 9562.0], [12.4, 9598.0], [12.5, 9598.0], [12.6, 9598.0], [12.7, 9651.0], [12.8, 9651.0], [12.9, 9651.0], [13.0, 9651.0], [13.1, 9801.0], [13.2, 9801.0], [13.3, 9801.0], [13.4, 9843.0], [13.5, 9843.0], [13.6, 9843.0], [13.7, 9930.0], [13.8, 9930.0], [13.9, 9930.0], [14.0, 9930.0], [14.1, 10118.0], [14.2, 10118.0], [14.3, 10118.0], [14.4, 10175.0], [14.5, 10175.0], [14.6, 10175.0], [14.7, 10188.0], [14.8, 10188.0], [14.9, 10188.0], [15.0, 10188.0], [15.1, 10232.0], [15.2, 10232.0], [15.3, 10232.0], [15.4, 10326.0], [15.5, 10326.0], [15.6, 10326.0], [15.7, 10360.0], [15.8, 10360.0], [15.9, 10360.0], [16.0, 10360.0], [16.1, 10386.0], [16.2, 10386.0], [16.3, 10386.0], [16.4, 10387.0], [16.5, 10387.0], [16.6, 10387.0], [16.7, 10415.0], [16.8, 10415.0], [16.9, 10415.0], [17.0, 10415.0], [17.1, 10615.0], [17.2, 10615.0], [17.3, 10615.0], [17.4, 10627.0], [17.5, 10627.0], [17.6, 10627.0], [17.7, 10744.0], [17.8, 10744.0], [17.9, 10744.0], [18.0, 10744.0], [18.1, 10757.0], [18.2, 10757.0], [18.3, 10757.0], [18.4, 10766.0], [18.5, 10766.0], [18.6, 10766.0], [18.7, 10783.0], [18.8, 10783.0], [18.9, 10783.0], [19.0, 10818.0], [19.1, 10818.0], [19.2, 10818.0], [19.3, 10818.0], [19.4, 10820.0], [19.5, 10820.0], [19.6, 10820.0], [19.7, 10846.0], [19.8, 10846.0], [19.9, 10846.0], [20.0, 10857.0], [20.1, 10857.0], [20.2, 10857.0], [20.3, 10857.0], [20.4, 10883.0], [20.5, 10883.0], [20.6, 10883.0], [20.7, 10946.0], [20.8, 10946.0], [20.9, 10946.0], [21.0, 10954.0], [21.1, 10954.0], [21.2, 10954.0], [21.3, 10954.0], [21.4, 11009.0], [21.5, 11009.0], [21.6, 11009.0], [21.7, 11072.0], [21.8, 11072.0], [21.9, 11072.0], [22.0, 11076.0], [22.1, 11076.0], [22.2, 11076.0], [22.3, 11076.0], [22.4, 11157.0], [22.5, 11157.0], [22.6, 11157.0], [22.7, 11180.0], [22.8, 11180.0], [22.9, 11180.0], [23.0, 11222.0], [23.1, 11222.0], [23.2, 11222.0], [23.3, 11222.0], [23.4, 11260.0], [23.5, 11260.0], [23.6, 11260.0], [23.7, 11262.0], [23.8, 11262.0], [23.9, 11262.0], [24.0, 11276.0], [24.1, 11276.0], [24.2, 11276.0], [24.3, 11276.0], [24.4, 11279.0], [24.5, 11279.0], [24.6, 11279.0], [24.7, 11347.0], [24.8, 11347.0], [24.9, 11347.0], [25.0, 11397.0], [25.1, 11397.0], [25.2, 11397.0], [25.3, 11397.0], [25.4, 11403.0], [25.5, 11403.0], [25.6, 11403.0], [25.7, 11427.0], [25.8, 11427.0], [25.9, 11427.0], [26.0, 11474.0], [26.1, 11474.0], [26.2, 11474.0], [26.3, 11474.0], [26.4, 11507.0], [26.5, 11507.0], [26.6, 11507.0], [26.7, 11697.0], [26.8, 11697.0], [26.9, 11697.0], [27.0, 11834.0], [27.1, 11834.0], [27.2, 11834.0], [27.3, 11834.0], [27.4, 11854.0], [27.5, 11854.0], [27.6, 11854.0], [27.7, 11908.0], [27.8, 11908.0], [27.9, 11908.0], [28.0, 11968.0], [28.1, 11968.0], [28.2, 11968.0], [28.3, 11968.0], [28.4, 11980.0], [28.5, 11980.0], [28.6, 11980.0], [28.7, 12026.0], [28.8, 12026.0], [28.9, 12026.0], [29.0, 12030.0], [29.1, 12030.0], [29.2, 12030.0], [29.3, 12030.0], [29.4, 12126.0], [29.5, 12126.0], [29.6, 12126.0], [29.7, 12214.0], [29.8, 12214.0], [29.9, 12214.0], [30.0, 12331.0], [30.1, 12331.0], [30.2, 12331.0], [30.3, 12331.0], [30.4, 12379.0], [30.5, 12379.0], [30.6, 12379.0], [30.7, 12433.0], [30.8, 12433.0], [30.9, 12433.0], [31.0, 12473.0], [31.1, 12473.0], [31.2, 12473.0], [31.3, 12473.0], [31.4, 12481.0], [31.5, 12481.0], [31.6, 12481.0], [31.7, 12483.0], [31.8, 12483.0], [31.9, 12483.0], [32.0, 12485.0], [32.1, 12485.0], [32.2, 12485.0], [32.3, 12485.0], [32.4, 12516.0], [32.5, 12516.0], [32.6, 12516.0], [32.7, 12541.0], [32.8, 12541.0], [32.9, 12541.0], [33.0, 12541.0], [33.1, 12541.0], [33.2, 12541.0], [33.3, 12541.0], [33.4, 12543.0], [33.5, 12543.0], [33.6, 12543.0], [33.7, 12588.0], [33.8, 12588.0], [33.9, 12588.0], [34.0, 12607.0], [34.1, 12607.0], [34.2, 12607.0], [34.3, 12607.0], [34.4, 12612.0], [34.5, 12612.0], [34.6, 12612.0], [34.7, 12661.0], [34.8, 12661.0], [34.9, 12661.0], [35.0, 12698.0], [35.1, 12698.0], [35.2, 12698.0], [35.3, 12698.0], [35.4, 12712.0], [35.5, 12712.0], [35.6, 12712.0], [35.7, 12733.0], [35.8, 12733.0], [35.9, 12733.0], [36.0, 12772.0], [36.1, 12772.0], [36.2, 12772.0], [36.3, 12772.0], [36.4, 12792.0], [36.5, 12792.0], [36.6, 12792.0], [36.7, 12815.0], [36.8, 12815.0], [36.9, 12815.0], [37.0, 12839.0], [37.1, 12839.0], [37.2, 12839.0], [37.3, 12839.0], [37.4, 12959.0], [37.5, 12959.0], [37.6, 12959.0], [37.7, 12964.0], [37.8, 12964.0], [37.9, 12964.0], [38.0, 12978.0], [38.1, 12978.0], [38.2, 12978.0], [38.3, 12978.0], [38.4, 13044.0], [38.5, 13044.0], [38.6, 13044.0], [38.7, 13047.0], [38.8, 13047.0], [38.9, 13047.0], [39.0, 13067.0], [39.1, 13067.0], [39.2, 13067.0], [39.3, 13067.0], [39.4, 13075.0], [39.5, 13075.0], [39.6, 13075.0], [39.7, 13078.0], [39.8, 13078.0], [39.9, 13078.0], [40.0, 13106.0], [40.1, 13106.0], [40.2, 13106.0], [40.3, 13106.0], [40.4, 13138.0], [40.5, 13138.0], [40.6, 13138.0], [40.7, 13138.0], [40.8, 13138.0], [40.9, 13138.0], [41.0, 13161.0], [41.1, 13161.0], [41.2, 13161.0], [41.3, 13161.0], [41.4, 13226.0], [41.5, 13226.0], [41.6, 13226.0], [41.7, 13294.0], [41.8, 13294.0], [41.9, 13294.0], [42.0, 13294.0], [42.1, 13340.0], [42.2, 13340.0], [42.3, 13340.0], [42.4, 13363.0], [42.5, 13363.0], [42.6, 13363.0], [42.7, 13412.0], [42.8, 13412.0], [42.9, 13412.0], [43.0, 13412.0], [43.1, 13422.0], [43.2, 13422.0], [43.3, 13422.0], [43.4, 13433.0], [43.5, 13433.0], [43.6, 13433.0], [43.7, 13442.0], [43.8, 13442.0], [43.9, 13442.0], [44.0, 13442.0], [44.1, 13450.0], [44.2, 13450.0], [44.3, 13450.0], [44.4, 13500.0], [44.5, 13500.0], [44.6, 13500.0], [44.7, 13504.0], [44.8, 13504.0], [44.9, 13504.0], [45.0, 13504.0], [45.1, 13536.0], [45.2, 13536.0], [45.3, 13536.0], [45.4, 13544.0], [45.5, 13544.0], [45.6, 13544.0], [45.7, 13552.0], [45.8, 13552.0], [45.9, 13552.0], [46.0, 13552.0], [46.1, 13604.0], [46.2, 13604.0], [46.3, 13604.0], [46.4, 13644.0], [46.5, 13644.0], [46.6, 13644.0], [46.7, 13666.0], [46.8, 13666.0], [46.9, 13666.0], [47.0, 13666.0], [47.1, 13677.0], [47.2, 13677.0], [47.3, 13677.0], [47.4, 13718.0], [47.5, 13718.0], [47.6, 13718.0], [47.7, 13722.0], [47.8, 13722.0], [47.9, 13722.0], [48.0, 13722.0], [48.1, 13753.0], [48.2, 13753.0], [48.3, 13753.0], [48.4, 13772.0], [48.5, 13772.0], [48.6, 13772.0], [48.7, 13815.0], [48.8, 13815.0], [48.9, 13815.0], [49.0, 13815.0], [49.1, 13855.0], [49.2, 13855.0], [49.3, 13855.0], [49.4, 13872.0], [49.5, 13872.0], [49.6, 13872.0], [49.7, 13889.0], [49.8, 13889.0], [49.9, 13889.0], [50.0, 13889.0], [50.1, 13917.0], [50.2, 13917.0], [50.3, 13917.0], [50.4, 13917.0], [50.5, 13917.0], [50.6, 13917.0], [50.7, 13951.0], [50.8, 13951.0], [50.9, 13951.0], [51.0, 13951.0], [51.1, 13963.0], [51.2, 13963.0], [51.3, 13963.0], [51.4, 13964.0], [51.5, 13964.0], [51.6, 13964.0], [51.7, 14003.0], [51.8, 14003.0], [51.9, 14003.0], [52.0, 14003.0], [52.1, 14035.0], [52.2, 14035.0], [52.3, 14035.0], [52.4, 14055.0], [52.5, 14055.0], [52.6, 14055.0], [52.7, 14057.0], [52.8, 14057.0], [52.9, 14057.0], [53.0, 14057.0], [53.1, 14126.0], [53.2, 14126.0], [53.3, 14126.0], [53.4, 14135.0], [53.5, 14135.0], [53.6, 14135.0], [53.7, 14169.0], [53.8, 14169.0], [53.9, 14169.0], [54.0, 14169.0], [54.1, 14225.0], [54.2, 14225.0], [54.3, 14225.0], [54.4, 14259.0], [54.5, 14259.0], [54.6, 14259.0], [54.7, 14268.0], [54.8, 14268.0], [54.9, 14268.0], [55.0, 14268.0], [55.1, 14302.0], [55.2, 14302.0], [55.3, 14302.0], [55.4, 14311.0], [55.5, 14311.0], [55.6, 14311.0], [55.7, 14321.0], [55.8, 14321.0], [55.9, 14321.0], [56.0, 14321.0], [56.1, 14374.0], [56.2, 14374.0], [56.3, 14374.0], [56.4, 14497.0], [56.5, 14497.0], [56.6, 14497.0], [56.7, 14538.0], [56.8, 14538.0], [56.9, 14538.0], [57.0, 14538.0], [57.1, 14544.0], [57.2, 14544.0], [57.3, 14544.0], [57.4, 14545.0], [57.5, 14545.0], [57.6, 14545.0], [57.7, 14552.0], [57.8, 14552.0], [57.9, 14552.0], [58.0, 14552.0], [58.1, 14571.0], [58.2, 14571.0], [58.3, 14571.0], [58.4, 14599.0], [58.5, 14599.0], [58.6, 14599.0], [58.7, 14630.0], [58.8, 14630.0], [58.9, 14630.0], [59.0, 14630.0], [59.1, 14654.0], [59.2, 14654.0], [59.3, 14654.0], [59.4, 14661.0], [59.5, 14661.0], [59.6, 14661.0], [59.7, 14690.0], [59.8, 14690.0], [59.9, 14690.0], [60.0, 14690.0], [60.1, 14694.0], [60.2, 14694.0], [60.3, 14694.0], [60.4, 14814.0], [60.5, 14814.0], [60.6, 14814.0], [60.7, 14827.0], [60.8, 14827.0], [60.9, 14827.0], [61.0, 14827.0], [61.1, 14837.0], [61.2, 14837.0], [61.3, 14837.0], [61.4, 14843.0], [61.5, 14843.0], [61.6, 14843.0], [61.7, 14844.0], [61.8, 14844.0], [61.9, 14844.0], [62.0, 14844.0], [62.1, 14895.0], [62.2, 14895.0], [62.3, 14895.0], [62.4, 14915.0], [62.5, 14915.0], [62.6, 14915.0], [62.7, 14931.0], [62.8, 14931.0], [62.9, 14931.0], [63.0, 14931.0], [63.1, 14938.0], [63.2, 14938.0], [63.3, 14938.0], [63.4, 14941.0], [63.5, 14941.0], [63.6, 14941.0], [63.7, 14944.0], [63.8, 14944.0], [63.9, 14944.0], [64.0, 14944.0], [64.1, 15001.0], [64.2, 15001.0], [64.3, 15001.0], [64.4, 15013.0], [64.5, 15013.0], [64.6, 15013.0], [64.7, 15019.0], [64.8, 15019.0], [64.9, 15019.0], [65.0, 15019.0], [65.1, 15025.0], [65.2, 15025.0], [65.3, 15025.0], [65.4, 15033.0], [65.5, 15033.0], [65.6, 15033.0], [65.7, 15046.0], [65.8, 15046.0], [65.9, 15046.0], [66.0, 15046.0], [66.1, 15135.0], [66.2, 15135.0], [66.3, 15135.0], [66.4, 15169.0], [66.5, 15169.0], [66.6, 15169.0], [66.7, 15198.0], [66.8, 15198.0], [66.9, 15198.0], [67.0, 15198.0], [67.1, 15199.0], [67.2, 15199.0], [67.3, 15199.0], [67.4, 15220.0], [67.5, 15220.0], [67.6, 15220.0], [67.7, 15240.0], [67.8, 15240.0], [67.9, 15240.0], [68.0, 15240.0], [68.1, 15248.0], [68.2, 15248.0], [68.3, 15248.0], [68.4, 15266.0], [68.5, 15266.0], [68.6, 15266.0], [68.7, 15300.0], [68.8, 15300.0], [68.9, 15300.0], [69.0, 15300.0], [69.1, 15303.0], [69.2, 15303.0], [69.3, 15303.0], [69.4, 15328.0], [69.5, 15328.0], [69.6, 15328.0], [69.7, 15338.0], [69.8, 15338.0], [69.9, 15338.0], [70.0, 15338.0], [70.1, 15374.0], [70.2, 15374.0], [70.3, 15374.0], [70.4, 15383.0], [70.5, 15383.0], [70.6, 15383.0], [70.7, 15407.0], [70.8, 15407.0], [70.9, 15407.0], [71.0, 15407.0], [71.1, 15460.0], [71.2, 15460.0], [71.3, 15460.0], [71.4, 15465.0], [71.5, 15465.0], [71.6, 15465.0], [71.7, 15502.0], [71.8, 15502.0], [71.9, 15502.0], [72.0, 15502.0], [72.1, 15582.0], [72.2, 15582.0], [72.3, 15582.0], [72.4, 15638.0], [72.5, 15638.0], [72.6, 15638.0], [72.7, 15683.0], [72.8, 15683.0], [72.9, 15683.0], [73.0, 15683.0], [73.1, 15701.0], [73.2, 15701.0], [73.3, 15701.0], [73.4, 15715.0], [73.5, 15715.0], [73.6, 15715.0], [73.7, 15719.0], [73.8, 15719.0], [73.9, 15719.0], [74.0, 15719.0], [74.1, 15734.0], [74.2, 15734.0], [74.3, 15734.0], [74.4, 15740.0], [74.5, 15740.0], [74.6, 15740.0], [74.7, 15748.0], [74.8, 15748.0], [74.9, 15748.0], [75.0, 15753.0], [75.1, 15753.0], [75.2, 15753.0], [75.3, 15753.0], [75.4, 15755.0], [75.5, 15755.0], [75.6, 15755.0], [75.7, 15758.0], [75.8, 15758.0], [75.9, 15758.0], [76.0, 15857.0], [76.1, 15857.0], [76.2, 15857.0], [76.3, 15857.0], [76.4, 15865.0], [76.5, 15865.0], [76.6, 15865.0], [76.7, 15901.0], [76.8, 15901.0], [76.9, 15901.0], [77.0, 15919.0], [77.1, 15919.0], [77.2, 15919.0], [77.3, 15919.0], [77.4, 15948.0], [77.5, 15948.0], [77.6, 15948.0], [77.7, 15989.0], [77.8, 15989.0], [77.9, 15989.0], [78.0, 16066.0], [78.1, 16066.0], [78.2, 16066.0], [78.3, 16066.0], [78.4, 16084.0], [78.5, 16084.0], [78.6, 16084.0], [78.7, 16100.0], [78.8, 16100.0], [78.9, 16100.0], [79.0, 16106.0], [79.1, 16106.0], [79.2, 16106.0], [79.3, 16106.0], [79.4, 16114.0], [79.5, 16114.0], [79.6, 16114.0], [79.7, 16139.0], [79.8, 16139.0], [79.9, 16139.0], [80.0, 16141.0], [80.1, 16141.0], [80.2, 16141.0], [80.3, 16141.0], [80.4, 16157.0], [80.5, 16157.0], [80.6, 16157.0], [80.7, 16192.0], [80.8, 16192.0], [80.9, 16192.0], [81.0, 16252.0], [81.1, 16252.0], [81.2, 16252.0], [81.3, 16252.0], [81.4, 16292.0], [81.5, 16292.0], [81.6, 16292.0], [81.7, 16297.0], [81.8, 16297.0], [81.9, 16297.0], [82.0, 16312.0], [82.1, 16312.0], [82.2, 16312.0], [82.3, 16312.0], [82.4, 16483.0], [82.5, 16483.0], [82.6, 16483.0], [82.7, 16493.0], [82.8, 16493.0], [82.9, 16493.0], [83.0, 16494.0], [83.1, 16494.0], [83.2, 16494.0], [83.3, 16494.0], [83.4, 16558.0], [83.5, 16558.0], [83.6, 16558.0], [83.7, 16583.0], [83.8, 16583.0], [83.9, 16583.0], [84.0, 16651.0], [84.1, 16651.0], [84.2, 16651.0], [84.3, 16651.0], [84.4, 16672.0], [84.5, 16672.0], [84.6, 16672.0], [84.7, 16705.0], [84.8, 16705.0], [84.9, 16705.0], [85.0, 16776.0], [85.1, 16776.0], [85.2, 16776.0], [85.3, 16776.0], [85.4, 16790.0], [85.5, 16790.0], [85.6, 16790.0], [85.7, 16835.0], [85.8, 16835.0], [85.9, 16835.0], [86.0, 16896.0], [86.1, 16896.0], [86.2, 16896.0], [86.3, 16896.0], [86.4, 16989.0], [86.5, 16989.0], [86.6, 16989.0], [86.7, 16997.0], [86.8, 16997.0], [86.9, 16997.0], [87.0, 16999.0], [87.1, 16999.0], [87.2, 16999.0], [87.3, 16999.0], [87.4, 17034.0], [87.5, 17034.0], [87.6, 17034.0], [87.7, 17137.0], [87.8, 17137.0], [87.9, 17137.0], [88.0, 17138.0], [88.1, 17138.0], [88.2, 17138.0], [88.3, 17138.0], [88.4, 17140.0], [88.5, 17140.0], [88.6, 17140.0], [88.7, 17193.0], [88.8, 17193.0], [88.9, 17193.0], [89.0, 17208.0], [89.1, 17208.0], [89.2, 17208.0], [89.3, 17208.0], [89.4, 17212.0], [89.5, 17212.0], [89.6, 17212.0], [89.7, 17229.0], [89.8, 17229.0], [89.9, 17229.0], [90.0, 17280.0], [90.1, 17280.0], [90.2, 17280.0], [90.3, 17280.0], [90.4, 17333.0], [90.5, 17333.0], [90.6, 17333.0], [90.7, 17334.0], [90.8, 17334.0], [90.9, 17334.0], [91.0, 17340.0], [91.1, 17340.0], [91.2, 17340.0], [91.3, 17340.0], [91.4, 17343.0], [91.5, 17343.0], [91.6, 17343.0], [91.7, 17343.0], [91.8, 17343.0], [91.9, 17343.0], [92.0, 17419.0], [92.1, 17419.0], [92.2, 17419.0], [92.3, 17419.0], [92.4, 17499.0], [92.5, 17499.0], [92.6, 17499.0], [92.7, 17601.0], [92.8, 17601.0], [92.9, 17601.0], [93.0, 17715.0], [93.1, 17715.0], [93.2, 17715.0], [93.3, 17715.0], [93.4, 17718.0], [93.5, 17718.0], [93.6, 17718.0], [93.7, 17729.0], [93.8, 17729.0], [93.9, 17729.0], [94.0, 17757.0], [94.1, 17757.0], [94.2, 17757.0], [94.3, 17757.0], [94.4, 17788.0], [94.5, 17788.0], [94.6, 17788.0], [94.7, 17882.0], [94.8, 17882.0], [94.9, 17882.0], [95.0, 17925.0], [95.1, 17925.0], [95.2, 17925.0], [95.3, 17925.0], [95.4, 18006.0], [95.5, 18006.0], [95.6, 18006.0], [95.7, 18018.0], [95.8, 18018.0], [95.9, 18018.0], [96.0, 18052.0], [96.1, 18052.0], [96.2, 18052.0], [96.3, 18052.0], [96.4, 18113.0], [96.5, 18113.0], [96.6, 18113.0], [96.7, 18252.0], [96.8, 18252.0], [96.9, 18252.0], [97.0, 18317.0], [97.1, 18317.0], [97.2, 18317.0], [97.3, 18317.0], [97.4, 18335.0], [97.5, 18335.0], [97.6, 18335.0], [97.7, 18346.0], [97.8, 18346.0], [97.9, 18346.0], [98.0, 18355.0], [98.1, 18355.0], [98.2, 18355.0], [98.3, 18355.0], [98.4, 18723.0], [98.5, 18723.0], [98.6, 18723.0], [98.7, 18887.0], [98.8, 18887.0], [98.9, 18887.0], [99.0, 18952.0], [99.1, 18952.0], [99.2, 18952.0], [99.3, 18952.0], [99.4, 19051.0], [99.5, 19051.0], [99.6, 19051.0], [99.7, 19145.0], [99.8, 19145.0], [99.9, 19145.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[0.0, 3113.0], [0.1, 3113.0], [0.2, 3113.0], [0.3, 3113.0], [0.4, 3113.0], [0.5, 3113.0], [0.6, 3113.0], [0.7, 3113.0], [0.8, 3113.0], [0.9, 3113.0], [1.0, 3113.0], [1.1, 3113.0], [1.2, 3113.0], [1.3, 3113.0], [1.4, 3113.0], [1.5, 3113.0], [1.6, 3113.0], [1.7, 3113.0], [1.8, 3113.0], [1.9, 3113.0], [2.0, 3113.0], [2.1, 3113.0], [2.2, 3113.0], [2.3, 3113.0], [2.4, 3113.0], [2.5, 3113.0], [2.6, 3113.0], [2.7, 3113.0], [2.8, 3113.0], [2.9, 3113.0], [3.0, 3113.0], [3.1, 3113.0], [3.2, 3113.0], [3.3, 3113.0], [3.4, 3113.0], [3.5, 3113.0], [3.6, 3113.0], [3.7, 3113.0], [3.8, 3113.0], [3.9, 3113.0], [4.0, 3113.0], [4.1, 3113.0], [4.2, 3113.0], [4.3, 3113.0], [4.4, 3113.0], [4.5, 3113.0], [4.6, 3113.0], [4.7, 3113.0], [4.8, 3113.0], [4.9, 3113.0], [5.0, 3113.0], [5.1, 3113.0], [5.2, 3113.0], [5.3, 3113.0], [5.4, 3113.0], [5.5, 3113.0], [5.6, 3113.0], [5.7, 3113.0], [5.8, 3113.0], [5.9, 3113.0], [6.0, 3113.0], [6.1, 3113.0], [6.2, 3113.0], [6.3, 3113.0], [6.4, 3113.0], [6.5, 3113.0], [6.6, 3113.0], [6.7, 3113.0], [6.8, 3113.0], [6.9, 3113.0], [7.0, 3113.0], [7.1, 3113.0], [7.2, 3113.0], [7.3, 3113.0], [7.4, 3113.0], [7.5, 3113.0], [7.6, 3113.0], [7.7, 3113.0], [7.8, 3113.0], [7.9, 3113.0], [8.0, 3113.0], [8.1, 3113.0], [8.2, 3113.0], [8.3, 3113.0], [8.4, 3113.0], [8.5, 3113.0], [8.6, 3113.0], [8.7, 3113.0], [8.8, 3113.0], [8.9, 3113.0], [9.0, 3113.0], [9.1, 3113.0], [9.2, 3113.0], [9.3, 3113.0], [9.4, 3113.0], [9.5, 3113.0], [9.6, 3113.0], [9.7, 3113.0], [9.8, 3113.0], [9.9, 3113.0], [10.0, 3113.0], [10.1, 3113.0], [10.2, 3113.0], [10.3, 3113.0], [10.4, 3113.0], [10.5, 3113.0], [10.6, 3113.0], [10.7, 3113.0], [10.8, 3113.0], [10.9, 3113.0], [11.0, 3113.0], [11.1, 3113.0], [11.2, 3113.0], [11.3, 3113.0], [11.4, 3113.0], [11.5, 3113.0], [11.6, 3113.0], [11.7, 3113.0], [11.8, 3113.0], [11.9, 3113.0], [12.0, 3113.0], [12.1, 3113.0], [12.2, 3113.0], [12.3, 3113.0], [12.4, 3113.0], [12.5, 3113.0], [12.6, 3113.0], [12.7, 3113.0], [12.8, 3113.0], [12.9, 3113.0], [13.0, 3113.0], [13.1, 3113.0], [13.2, 3113.0], [13.3, 3113.0], [13.4, 3113.0], [13.5, 3113.0], [13.6, 3113.0], [13.7, 3113.0], [13.8, 3113.0], [13.9, 3113.0], [14.0, 3113.0], [14.1, 3113.0], [14.2, 3113.0], [14.3, 3113.0], [14.4, 3113.0], [14.5, 3113.0], [14.6, 3113.0], [14.7, 3113.0], [14.8, 3113.0], [14.9, 3113.0], [15.0, 3113.0], [15.1, 3113.0], [15.2, 3113.0], [15.3, 3113.0], [15.4, 3113.0], [15.5, 3113.0], [15.6, 3113.0], [15.7, 3113.0], [15.8, 3113.0], [15.9, 3113.0], [16.0, 3113.0], [16.1, 3113.0], [16.2, 3113.0], [16.3, 3113.0], [16.4, 3113.0], [16.5, 3113.0], [16.6, 3113.0], [16.7, 3113.0], [16.8, 3113.0], [16.9, 3113.0], [17.0, 3113.0], [17.1, 3113.0], [17.2, 3113.0], [17.3, 3113.0], [17.4, 3113.0], [17.5, 3113.0], [17.6, 3113.0], [17.7, 3113.0], [17.8, 3113.0], [17.9, 3113.0], [18.0, 3113.0], [18.1, 3113.0], [18.2, 3113.0], [18.3, 3113.0], [18.4, 3113.0], [18.5, 3113.0], [18.6, 3113.0], [18.7, 3113.0], [18.8, 3113.0], [18.9, 3113.0], [19.0, 3113.0], [19.1, 3113.0], [19.2, 3113.0], [19.3, 3113.0], [19.4, 3113.0], [19.5, 3113.0], [19.6, 3113.0], [19.7, 3113.0], [19.8, 3113.0], [19.9, 3113.0], [20.0, 3113.0], [20.1, 3113.0], [20.2, 3113.0], [20.3, 3113.0], [20.4, 3113.0], [20.5, 3113.0], [20.6, 3113.0], [20.7, 3113.0], [20.8, 3113.0], [20.9, 3113.0], [21.0, 3113.0], [21.1, 3113.0], [21.2, 3113.0], [21.3, 3113.0], [21.4, 3113.0], [21.5, 3113.0], [21.6, 3113.0], [21.7, 3113.0], [21.8, 3113.0], [21.9, 3113.0], [22.0, 3113.0], [22.1, 3113.0], [22.2, 3113.0], [22.3, 3113.0], [22.4, 3113.0], [22.5, 3113.0], [22.6, 3113.0], [22.7, 3113.0], [22.8, 3113.0], [22.9, 3113.0], [23.0, 3113.0], [23.1, 3113.0], [23.2, 3113.0], [23.3, 3113.0], [23.4, 3113.0], [23.5, 3113.0], [23.6, 3113.0], [23.7, 3113.0], [23.8, 3113.0], [23.9, 3113.0], [24.0, 3113.0], [24.1, 3113.0], [24.2, 3113.0], [24.3, 3113.0], [24.4, 3113.0], [24.5, 3113.0], [24.6, 3113.0], [24.7, 3113.0], [24.8, 3113.0], [24.9, 3113.0], [25.0, 3113.0], [25.1, 3113.0], [25.2, 3113.0], [25.3, 3113.0], [25.4, 3113.0], [25.5, 3113.0], [25.6, 3113.0], [25.7, 3113.0], [25.8, 3113.0], [25.9, 3113.0], [26.0, 3113.0], [26.1, 3113.0], [26.2, 3113.0], [26.3, 3113.0], [26.4, 3113.0], [26.5, 3113.0], [26.6, 3113.0], [26.7, 3113.0], [26.8, 3113.0], [26.9, 3113.0], [27.0, 3113.0], [27.1, 3113.0], [27.2, 3113.0], [27.3, 3113.0], [27.4, 3113.0], [27.5, 3113.0], [27.6, 3113.0], [27.7, 3113.0], [27.8, 3113.0], [27.9, 3113.0], [28.0, 3113.0], [28.1, 3113.0], [28.2, 3113.0], [28.3, 3113.0], [28.4, 3113.0], [28.5, 3113.0], [28.6, 3113.0], [28.7, 3113.0], [28.8, 3113.0], [28.9, 3113.0], [29.0, 3113.0], [29.1, 3113.0], [29.2, 3113.0], [29.3, 3113.0], [29.4, 3113.0], [29.5, 3113.0], [29.6, 3113.0], [29.7, 3113.0], [29.8, 3113.0], [29.9, 3113.0], [30.0, 3113.0], [30.1, 3113.0], [30.2, 3113.0], [30.3, 3113.0], [30.4, 3113.0], [30.5, 3113.0], [30.6, 3113.0], [30.7, 3113.0], [30.8, 3113.0], [30.9, 3113.0], [31.0, 3113.0], [31.1, 3113.0], [31.2, 3113.0], [31.3, 3113.0], [31.4, 3113.0], [31.5, 3113.0], [31.6, 3113.0], [31.7, 3113.0], [31.8, 3113.0], [31.9, 3113.0], [32.0, 3113.0], [32.1, 3113.0], [32.2, 3113.0], [32.3, 3113.0], [32.4, 3113.0], [32.5, 3113.0], [32.6, 3113.0], [32.7, 3113.0], [32.8, 3113.0], [32.9, 3113.0], [33.0, 3113.0], [33.1, 3113.0], [33.2, 3113.0], [33.3, 3113.0], [33.4, 3113.0], [33.5, 3113.0], [33.6, 3113.0], [33.7, 3113.0], [33.8, 3113.0], [33.9, 3113.0], [34.0, 3113.0], [34.1, 3113.0], [34.2, 3113.0], [34.3, 3113.0], [34.4, 3113.0], [34.5, 3113.0], [34.6, 3113.0], [34.7, 3113.0], [34.8, 3113.0], [34.9, 3113.0], [35.0, 3113.0], [35.1, 3113.0], [35.2, 3113.0], [35.3, 3113.0], [35.4, 3113.0], [35.5, 3113.0], [35.6, 3113.0], [35.7, 3113.0], [35.8, 3113.0], [35.9, 3113.0], [36.0, 3113.0], [36.1, 3113.0], [36.2, 3113.0], [36.3, 3113.0], [36.4, 3113.0], [36.5, 3113.0], [36.6, 3113.0], [36.7, 3113.0], [36.8, 3113.0], [36.9, 3113.0], [37.0, 3113.0], [37.1, 3113.0], [37.2, 3113.0], [37.3, 3113.0], [37.4, 3113.0], [37.5, 3113.0], [37.6, 3113.0], [37.7, 3113.0], [37.8, 3113.0], [37.9, 3113.0], [38.0, 3113.0], [38.1, 3113.0], [38.2, 3113.0], [38.3, 3113.0], [38.4, 3113.0], [38.5, 3113.0], [38.6, 3113.0], [38.7, 3113.0], [38.8, 3113.0], [38.9, 3113.0], [39.0, 3113.0], [39.1, 3113.0], [39.2, 3113.0], [39.3, 3113.0], [39.4, 3113.0], [39.5, 3113.0], [39.6, 3113.0], [39.7, 3113.0], [39.8, 3113.0], [39.9, 3113.0], [40.0, 3113.0], [40.1, 3113.0], [40.2, 3113.0], [40.3, 3113.0], [40.4, 3113.0], [40.5, 3113.0], [40.6, 3113.0], [40.7, 3113.0], [40.8, 3113.0], [40.9, 3113.0], [41.0, 3113.0], [41.1, 3113.0], [41.2, 3113.0], [41.3, 3113.0], [41.4, 3113.0], [41.5, 3113.0], [41.6, 3113.0], [41.7, 3113.0], [41.8, 3113.0], [41.9, 3113.0], [42.0, 3113.0], [42.1, 3113.0], [42.2, 3113.0], [42.3, 3113.0], [42.4, 3113.0], [42.5, 3113.0], [42.6, 3113.0], [42.7, 3113.0], [42.8, 3113.0], [42.9, 3113.0], [43.0, 3113.0], [43.1, 3113.0], [43.2, 3113.0], [43.3, 3113.0], [43.4, 3113.0], [43.5, 3113.0], [43.6, 3113.0], [43.7, 3113.0], [43.8, 3113.0], [43.9, 3113.0], [44.0, 3113.0], [44.1, 3113.0], [44.2, 3113.0], [44.3, 3113.0], [44.4, 3113.0], [44.5, 3113.0], [44.6, 3113.0], [44.7, 3113.0], [44.8, 3113.0], [44.9, 3113.0], [45.0, 3113.0], [45.1, 3113.0], [45.2, 3113.0], [45.3, 3113.0], [45.4, 3113.0], [45.5, 3113.0], [45.6, 3113.0], [45.7, 3113.0], [45.8, 3113.0], [45.9, 3113.0], [46.0, 3113.0], [46.1, 3113.0], [46.2, 3113.0], [46.3, 3113.0], [46.4, 3113.0], [46.5, 3113.0], [46.6, 3113.0], [46.7, 3113.0], [46.8, 3113.0], [46.9, 3113.0], [47.0, 3113.0], [47.1, 3113.0], [47.2, 3113.0], [47.3, 3113.0], [47.4, 3113.0], [47.5, 3113.0], [47.6, 3113.0], [47.7, 3113.0], [47.8, 3113.0], [47.9, 3113.0], [48.0, 3113.0], [48.1, 3113.0], [48.2, 3113.0], [48.3, 3113.0], [48.4, 3113.0], [48.5, 3113.0], [48.6, 3113.0], [48.7, 3113.0], [48.8, 3113.0], [48.9, 3113.0], [49.0, 3113.0], [49.1, 3113.0], [49.2, 3113.0], [49.3, 3113.0], [49.4, 3113.0], [49.5, 3113.0], [49.6, 3113.0], [49.7, 3113.0], [49.8, 3113.0], [49.9, 3113.0], [50.0, 3113.0], [50.1, 3113.0], [50.2, 3113.0], [50.3, 3113.0], [50.4, 3113.0], [50.5, 3113.0], [50.6, 3113.0], [50.7, 3113.0], [50.8, 3113.0], [50.9, 3113.0], [51.0, 3113.0], [51.1, 3113.0], [51.2, 3113.0], [51.3, 3113.0], [51.4, 3113.0], [51.5, 3113.0], [51.6, 3113.0], [51.7, 3113.0], [51.8, 3113.0], [51.9, 3113.0], [52.0, 3113.0], [52.1, 3113.0], [52.2, 3113.0], [52.3, 3113.0], [52.4, 3113.0], [52.5, 3113.0], [52.6, 3113.0], [52.7, 3113.0], [52.8, 3113.0], [52.9, 3113.0], [53.0, 3113.0], [53.1, 3113.0], [53.2, 3113.0], [53.3, 3113.0], [53.4, 3113.0], [53.5, 3113.0], [53.6, 3113.0], [53.7, 3113.0], [53.8, 3113.0], [53.9, 3113.0], [54.0, 3113.0], [54.1, 3113.0], [54.2, 3113.0], [54.3, 3113.0], [54.4, 3113.0], [54.5, 3113.0], [54.6, 3113.0], [54.7, 3113.0], [54.8, 3113.0], [54.9, 3113.0], [55.0, 3113.0], [55.1, 3113.0], [55.2, 3113.0], [55.3, 3113.0], [55.4, 3113.0], [55.5, 3113.0], [55.6, 3113.0], [55.7, 3113.0], [55.8, 3113.0], [55.9, 3113.0], [56.0, 3113.0], [56.1, 3113.0], [56.2, 3113.0], [56.3, 3113.0], [56.4, 3113.0], [56.5, 3113.0], [56.6, 3113.0], [56.7, 3113.0], [56.8, 3113.0], [56.9, 3113.0], [57.0, 3113.0], [57.1, 3113.0], [57.2, 3113.0], [57.3, 3113.0], [57.4, 3113.0], [57.5, 3113.0], [57.6, 3113.0], [57.7, 3113.0], [57.8, 3113.0], [57.9, 3113.0], [58.0, 3113.0], [58.1, 3113.0], [58.2, 3113.0], [58.3, 3113.0], [58.4, 3113.0], [58.5, 3113.0], [58.6, 3113.0], [58.7, 3113.0], [58.8, 3113.0], [58.9, 3113.0], [59.0, 3113.0], [59.1, 3113.0], [59.2, 3113.0], [59.3, 3113.0], [59.4, 3113.0], [59.5, 3113.0], [59.6, 3113.0], [59.7, 3113.0], [59.8, 3113.0], [59.9, 3113.0], [60.0, 3113.0], [60.1, 3113.0], [60.2, 3113.0], [60.3, 3113.0], [60.4, 3113.0], [60.5, 3113.0], [60.6, 3113.0], [60.7, 3113.0], [60.8, 3113.0], [60.9, 3113.0], [61.0, 3113.0], [61.1, 3113.0], [61.2, 3113.0], [61.3, 3113.0], [61.4, 3113.0], [61.5, 3113.0], [61.6, 3113.0], [61.7, 3113.0], [61.8, 3113.0], [61.9, 3113.0], [62.0, 3113.0], [62.1, 3113.0], [62.2, 3113.0], [62.3, 3113.0], [62.4, 3113.0], [62.5, 3113.0], [62.6, 3113.0], [62.7, 3113.0], [62.8, 3113.0], [62.9, 3113.0], [63.0, 3113.0], [63.1, 3113.0], [63.2, 3113.0], [63.3, 3113.0], [63.4, 3113.0], [63.5, 3113.0], [63.6, 3113.0], [63.7, 3113.0], [63.8, 3113.0], [63.9, 3113.0], [64.0, 3113.0], [64.1, 3113.0], [64.2, 3113.0], [64.3, 3113.0], [64.4, 3113.0], [64.5, 3113.0], [64.6, 3113.0], [64.7, 3113.0], [64.8, 3113.0], [64.9, 3113.0], [65.0, 3113.0], [65.1, 3113.0], [65.2, 3113.0], [65.3, 3113.0], [65.4, 3113.0], [65.5, 3113.0], [65.6, 3113.0], [65.7, 3113.0], [65.8, 3113.0], [65.9, 3113.0], [66.0, 3113.0], [66.1, 3113.0], [66.2, 3113.0], [66.3, 3113.0], [66.4, 3113.0], [66.5, 3113.0], [66.6, 3113.0], [66.7, 3113.0], [66.8, 3113.0], [66.9, 3113.0], [67.0, 3113.0], [67.1, 3113.0], [67.2, 3113.0], [67.3, 3113.0], [67.4, 3113.0], [67.5, 3113.0], [67.6, 3113.0], [67.7, 3113.0], [67.8, 3113.0], [67.9, 3113.0], [68.0, 3113.0], [68.1, 3113.0], [68.2, 3113.0], [68.3, 3113.0], [68.4, 3113.0], [68.5, 3113.0], [68.6, 3113.0], [68.7, 3113.0], [68.8, 3113.0], [68.9, 3113.0], [69.0, 3113.0], [69.1, 3113.0], [69.2, 3113.0], [69.3, 3113.0], [69.4, 3113.0], [69.5, 3113.0], [69.6, 3113.0], [69.7, 3113.0], [69.8, 3113.0], [69.9, 3113.0], [70.0, 3113.0], [70.1, 3113.0], [70.2, 3113.0], [70.3, 3113.0], [70.4, 3113.0], [70.5, 3113.0], [70.6, 3113.0], [70.7, 3113.0], [70.8, 3113.0], [70.9, 3113.0], [71.0, 3113.0], [71.1, 3113.0], [71.2, 3113.0], [71.3, 3113.0], [71.4, 3113.0], [71.5, 3113.0], [71.6, 3113.0], [71.7, 3113.0], [71.8, 3113.0], [71.9, 3113.0], [72.0, 3113.0], [72.1, 3113.0], [72.2, 3113.0], [72.3, 3113.0], [72.4, 3113.0], [72.5, 3113.0], [72.6, 3113.0], [72.7, 3113.0], [72.8, 3113.0], [72.9, 3113.0], [73.0, 3113.0], [73.1, 3113.0], [73.2, 3113.0], [73.3, 3113.0], [73.4, 3113.0], [73.5, 3113.0], [73.6, 3113.0], [73.7, 3113.0], [73.8, 3113.0], [73.9, 3113.0], [74.0, 3113.0], [74.1, 3113.0], [74.2, 3113.0], [74.3, 3113.0], [74.4, 3113.0], [74.5, 3113.0], [74.6, 3113.0], [74.7, 3113.0], [74.8, 3113.0], [74.9, 3113.0], [75.0, 3113.0], [75.1, 3113.0], [75.2, 3113.0], [75.3, 3113.0], [75.4, 3113.0], [75.5, 3113.0], [75.6, 3113.0], [75.7, 3113.0], [75.8, 3113.0], [75.9, 3113.0], [76.0, 3113.0], [76.1, 3113.0], [76.2, 3113.0], [76.3, 3113.0], [76.4, 3113.0], [76.5, 3113.0], [76.6, 3113.0], [76.7, 3113.0], [76.8, 3113.0], [76.9, 3113.0], [77.0, 3113.0], [77.1, 3113.0], [77.2, 3113.0], [77.3, 3113.0], [77.4, 3113.0], [77.5, 3113.0], [77.6, 3113.0], [77.7, 3113.0], [77.8, 3113.0], [77.9, 3113.0], [78.0, 3113.0], [78.1, 3113.0], [78.2, 3113.0], [78.3, 3113.0], [78.4, 3113.0], [78.5, 3113.0], [78.6, 3113.0], [78.7, 3113.0], [78.8, 3113.0], [78.9, 3113.0], [79.0, 3113.0], [79.1, 3113.0], [79.2, 3113.0], [79.3, 3113.0], [79.4, 3113.0], [79.5, 3113.0], [79.6, 3113.0], [79.7, 3113.0], [79.8, 3113.0], [79.9, 3113.0], [80.0, 3113.0], [80.1, 3113.0], [80.2, 3113.0], [80.3, 3113.0], [80.4, 3113.0], [80.5, 3113.0], [80.6, 3113.0], [80.7, 3113.0], [80.8, 3113.0], [80.9, 3113.0], [81.0, 3113.0], [81.1, 3113.0], [81.2, 3113.0], [81.3, 3113.0], [81.4, 3113.0], [81.5, 3113.0], [81.6, 3113.0], [81.7, 3113.0], [81.8, 3113.0], [81.9, 3113.0], [82.0, 3113.0], [82.1, 3113.0], [82.2, 3113.0], [82.3, 3113.0], [82.4, 3113.0], [82.5, 3113.0], [82.6, 3113.0], [82.7, 3113.0], [82.8, 3113.0], [82.9, 3113.0], [83.0, 3113.0], [83.1, 3113.0], [83.2, 3113.0], [83.3, 3113.0], [83.4, 3113.0], [83.5, 3113.0], [83.6, 3113.0], [83.7, 3113.0], [83.8, 3113.0], [83.9, 3113.0], [84.0, 3113.0], [84.1, 3113.0], [84.2, 3113.0], [84.3, 3113.0], [84.4, 3113.0], [84.5, 3113.0], [84.6, 3113.0], [84.7, 3113.0], [84.8, 3113.0], [84.9, 3113.0], [85.0, 3113.0], [85.1, 3113.0], [85.2, 3113.0], [85.3, 3113.0], [85.4, 3113.0], [85.5, 3113.0], [85.6, 3113.0], [85.7, 3113.0], [85.8, 3113.0], [85.9, 3113.0], [86.0, 3113.0], [86.1, 3113.0], [86.2, 3113.0], [86.3, 3113.0], [86.4, 3113.0], [86.5, 3113.0], [86.6, 3113.0], [86.7, 3113.0], [86.8, 3113.0], [86.9, 3113.0], [87.0, 3113.0], [87.1, 3113.0], [87.2, 3113.0], [87.3, 3113.0], [87.4, 3113.0], [87.5, 3113.0], [87.6, 3113.0], [87.7, 3113.0], [87.8, 3113.0], [87.9, 3113.0], [88.0, 3113.0], [88.1, 3113.0], [88.2, 3113.0], [88.3, 3113.0], [88.4, 3113.0], [88.5, 3113.0], [88.6, 3113.0], [88.7, 3113.0], [88.8, 3113.0], [88.9, 3113.0], [89.0, 3113.0], [89.1, 3113.0], [89.2, 3113.0], [89.3, 3113.0], [89.4, 3113.0], [89.5, 3113.0], [89.6, 3113.0], [89.7, 3113.0], [89.8, 3113.0], [89.9, 3113.0], [90.0, 3113.0], [90.1, 3113.0], [90.2, 3113.0], [90.3, 3113.0], [90.4, 3113.0], [90.5, 3113.0], [90.6, 3113.0], [90.7, 3113.0], [90.8, 3113.0], [90.9, 3113.0], [91.0, 3113.0], [91.1, 3113.0], [91.2, 3113.0], [91.3, 3113.0], [91.4, 3113.0], [91.5, 3113.0], [91.6, 3113.0], [91.7, 3113.0], [91.8, 3113.0], [91.9, 3113.0], [92.0, 3113.0], [92.1, 3113.0], [92.2, 3113.0], [92.3, 3113.0], [92.4, 3113.0], [92.5, 3113.0], [92.6, 3113.0], [92.7, 3113.0], [92.8, 3113.0], [92.9, 3113.0], [93.0, 3113.0], [93.1, 3113.0], [93.2, 3113.0], [93.3, 3113.0], [93.4, 3113.0], [93.5, 3113.0], [93.6, 3113.0], [93.7, 3113.0], [93.8, 3113.0], [93.9, 3113.0], [94.0, 3113.0], [94.1, 3113.0], [94.2, 3113.0], [94.3, 3113.0], [94.4, 3113.0], [94.5, 3113.0], [94.6, 3113.0], [94.7, 3113.0], [94.8, 3113.0], [94.9, 3113.0], [95.0, 3113.0], [95.1, 3113.0], [95.2, 3113.0], [95.3, 3113.0], [95.4, 3113.0], [95.5, 3113.0], [95.6, 3113.0], [95.7, 3113.0], [95.8, 3113.0], [95.9, 3113.0], [96.0, 3113.0], [96.1, 3113.0], [96.2, 3113.0], [96.3, 3113.0], [96.4, 3113.0], [96.5, 3113.0], [96.6, 3113.0], [96.7, 3113.0], [96.8, 3113.0], [96.9, 3113.0], [97.0, 3113.0], [97.1, 3113.0], [97.2, 3113.0], [97.3, 3113.0], [97.4, 3113.0], [97.5, 3113.0], [97.6, 3113.0], [97.7, 3113.0], [97.8, 3113.0], [97.9, 3113.0], [98.0, 3113.0], [98.1, 3113.0], [98.2, 3113.0], [98.3, 3113.0], [98.4, 3113.0], [98.5, 3113.0], [98.6, 3113.0], [98.7, 3113.0], [98.8, 3113.0], [98.9, 3113.0], [99.0, 3113.0], [99.1, 3113.0], [99.2, 3113.0], [99.3, 3113.0], [99.4, 3113.0], [99.5, 3113.0], [99.6, 3113.0], [99.7, 3113.0], [99.8, 3113.0], [99.9, 3113.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 337.0, "series": [{"data": [[400.0, 1.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[0.0, 8.0], [100.0, 1.0], [900.0, 1.0], [1300.0, 1.0], [1400.0, 1.0], [1700.0, 3.0], [3300.0, 1.0], [3400.0, 1.0], [3700.0, 1.0], [3600.0, 1.0], [4200.0, 3.0], [4100.0, 4.0], [4300.0, 3.0], [4600.0, 6.0], [4400.0, 3.0], [4500.0, 4.0], [4700.0, 9.0], [4800.0, 5.0], [4900.0, 10.0], [5100.0, 5.0], [5000.0, 8.0], [5300.0, 12.0], [5200.0, 10.0], [5600.0, 89.0], [5400.0, 25.0], [5500.0, 38.0], [5700.0, 156.0], [5800.0, 177.0], [5900.0, 275.0], [6100.0, 255.0], [6000.0, 337.0], [6300.0, 265.0], [6200.0, 288.0], [6400.0, 186.0], [6500.0, 172.0], [6600.0, 134.0], [6700.0, 140.0], [6900.0, 77.0], [6800.0, 99.0], [7100.0, 75.0], [7000.0, 83.0], [7200.0, 83.0], [7300.0, 109.0], [7400.0, 83.0], [7600.0, 67.0], [7500.0, 64.0], [7700.0, 60.0], [7800.0, 38.0], [7900.0, 37.0], [8100.0, 41.0], [8000.0, 30.0], [8200.0, 21.0], [8300.0, 25.0], [8400.0, 20.0], [8500.0, 23.0], [8600.0, 22.0], [8700.0, 27.0], [8800.0, 22.0], [8900.0, 41.0], [9000.0, 27.0], [9100.0, 36.0], [9200.0, 43.0], [9300.0, 36.0], [9400.0, 59.0], [9500.0, 54.0], [9600.0, 42.0], [9700.0, 33.0], [9800.0, 34.0], [10100.0, 7.0], [9900.0, 22.0], [10000.0, 10.0], [10200.0, 4.0], [10600.0, 1.0], [10300.0, 7.0], [10500.0, 5.0], [10400.0, 6.0], [10700.0, 2.0], [11200.0, 2.0], [10900.0, 3.0], [11000.0, 4.0], [10800.0, 3.0], [11100.0, 1.0], [11500.0, 2.0], [11600.0, 2.0], [11300.0, 1.0], [11700.0, 1.0], [12100.0, 3.0], [12200.0, 4.0], [11900.0, 2.0], [12000.0, 2.0], [11800.0, 1.0], [12700.0, 2.0], [12600.0, 6.0], [12400.0, 4.0], [12500.0, 3.0], [12300.0, 1.0], [12800.0, 4.0], [12900.0, 2.0], [13100.0, 9.0], [13200.0, 5.0], [13300.0, 7.0], [13000.0, 4.0], [13600.0, 6.0], [13500.0, 8.0], [13400.0, 4.0], [13800.0, 6.0], [13700.0, 8.0], [13900.0, 5.0], [14000.0, 6.0], [14300.0, 7.0], [14200.0, 6.0], [14100.0, 7.0], [14400.0, 8.0], [14600.0, 12.0], [14500.0, 4.0], [14800.0, 13.0], [14700.0, 4.0], [15200.0, 13.0], [14900.0, 10.0], [15300.0, 13.0], [15000.0, 5.0], [15100.0, 16.0], [15500.0, 18.0], [15400.0, 15.0], [15600.0, 14.0], [15800.0, 13.0], [15700.0, 15.0], [16000.0, 17.0], [15900.0, 14.0], [16200.0, 13.0], [16100.0, 8.0], [16300.0, 21.0], [16600.0, 16.0], [16400.0, 14.0], [16800.0, 17.0], [17400.0, 14.0], [17000.0, 14.0], [17200.0, 16.0], [18200.0, 14.0], [17600.0, 10.0], [18000.0, 11.0], [17800.0, 12.0], [18400.0, 3.0], [19000.0, 2.0], [18800.0, 5.0], [18600.0, 2.0], [19400.0, 2.0], [20200.0, 1.0], [19600.0, 1.0], [21200.0, 1.0], [20800.0, 1.0], [20600.0, 1.0], [21600.0, 1.0], [21800.0, 1.0], [22200.0, 1.0], [22000.0, 1.0], [23000.0, 2.0], [22800.0, 1.0], [24800.0, 2.0], [25200.0, 2.0], [25400.0, 2.0], [24600.0, 2.0], [25600.0, 3.0], [26000.0, 1.0], [25800.0, 3.0], [26600.0, 1.0], [27000.0, 1.0], [26800.0, 1.0], [27600.0, 3.0], [27400.0, 1.0], [28000.0, 2.0], [28200.0, 1.0], [29400.0, 2.0], [28800.0, 1.0], [30200.0, 1.0], [29800.0, 1.0], [31200.0, 1.0], [31600.0, 3.0], [30800.0, 1.0], [31400.0, 1.0], [32400.0, 1.0], [16500.0, 10.0], [16700.0, 14.0], [16900.0, 10.0], [17100.0, 17.0], [17300.0, 18.0], [17500.0, 11.0], [17700.0, 15.0], [17900.0, 10.0], [18100.0, 3.0], [18300.0, 6.0], [18500.0, 7.0], [18700.0, 3.0], [18900.0, 1.0], [19100.0, 5.0], [19500.0, 1.0], [19700.0, 1.0], [20100.0, 2.0], [20300.0, 1.0], [20500.0, 2.0], [20700.0, 1.0], [21100.0, 1.0], [21900.0, 5.0], [22500.0, 2.0], [22100.0, 1.0], [22900.0, 4.0], [23100.0, 1.0], [23500.0, 2.0], [22700.0, 1.0], [23700.0, 1.0], [24300.0, 1.0], [23900.0, 1.0], [25100.0, 2.0], [25300.0, 4.0], [25500.0, 4.0], [25900.0, 4.0], [26100.0, 3.0], [26500.0, 3.0], [27300.0, 1.0], [26700.0, 3.0], [27100.0, 1.0], [27900.0, 2.0], [27700.0, 2.0], [28100.0, 1.0], [28500.0, 1.0], [29100.0, 1.0], [28900.0, 1.0], [29300.0, 1.0], [29500.0, 1.0], [30100.0, 1.0], [29700.0, 1.0], [31700.0, 3.0], [32100.0, 1.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[55200.0, 1.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[6200.0, 1.0], [6400.0, 1.0], [7200.0, 3.0], [7400.0, 2.0], [7300.0, 2.0], [7600.0, 2.0], [7500.0, 1.0], [7900.0, 2.0], [7700.0, 5.0], [7800.0, 1.0], [8000.0, 1.0], [8100.0, 1.0], [8500.0, 1.0], [8200.0, 2.0], [8400.0, 1.0], [8600.0, 1.0], [8700.0, 1.0], [9000.0, 2.0], [9100.0, 2.0], [8800.0, 1.0], [9200.0, 2.0], [9500.0, 3.0], [9600.0, 1.0], [9800.0, 2.0], [10100.0, 3.0], [10200.0, 1.0], [9900.0, 1.0], [10300.0, 4.0], [10400.0, 1.0], [10700.0, 4.0], [10600.0, 2.0], [10800.0, 5.0], [11000.0, 3.0], [11100.0, 2.0], [11200.0, 5.0], [10900.0, 2.0], [11300.0, 2.0], [11400.0, 3.0], [11500.0, 1.0], [11600.0, 1.0], [11900.0, 3.0], [12200.0, 1.0], [11800.0, 2.0], [12000.0, 2.0], [12100.0, 1.0], [12700.0, 4.0], [12400.0, 5.0], [12500.0, 5.0], [12300.0, 2.0], [12600.0, 4.0], [12800.0, 2.0], [13000.0, 5.0], [12900.0, 3.0], [13100.0, 4.0], [13300.0, 2.0], [13200.0, 2.0], [13400.0, 5.0], [13800.0, 4.0], [13600.0, 4.0], [13500.0, 5.0], [13700.0, 4.0], [13900.0, 5.0], [14300.0, 4.0], [14000.0, 4.0], [14200.0, 3.0], [14100.0, 3.0], [14400.0, 1.0], [14800.0, 6.0], [14500.0, 6.0], [14600.0, 5.0], [15300.0, 6.0], [14900.0, 5.0], [15000.0, 6.0], [15200.0, 4.0], [15100.0, 4.0], [15800.0, 2.0], [15700.0, 9.0], [15500.0, 2.0], [15400.0, 3.0], [15600.0, 2.0], [15900.0, 4.0], [16300.0, 1.0], [16000.0, 2.0], [16100.0, 7.0], [16200.0, 3.0], [16600.0, 2.0], [16400.0, 3.0], [16700.0, 3.0], [16500.0, 2.0], [16900.0, 3.0], [17400.0, 2.0], [16800.0, 2.0], [17200.0, 4.0], [17300.0, 5.0], [17100.0, 4.0], [17000.0, 1.0], [18300.0, 4.0], [17700.0, 5.0], [18000.0, 3.0], [17800.0, 1.0], [18200.0, 1.0], [17900.0, 1.0], [17600.0, 1.0], [18100.0, 1.0], [18900.0, 1.0], [19000.0, 1.0], [18800.0, 1.0], [18700.0, 1.0], [19100.0, 1.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[3100.0, 1.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 55200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 5290.0, "series": [{"data": [[0.0, 10.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 5290.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68527358E12, "maxY": 500.0, "series": [{"data": [[1.68527376E12, 1.0]], "isOverall": false, "label": "tearDown consumers", "isController": false}, {"data": [[1.6852737E12, 478.2431362196408], [1.68527376E12, 61.751937984496145], [1.68527364E12, 500.0]], "isOverall": false, "label": "Producers", "isController": false}, {"data": [[1.68527364E12, 271.90999999999997]], "isOverall": false, "label": "Consumers", "isController": false}, {"data": [[1.68527358E12, 1.0]], "isOverall": false, "label": "setUp", "isController": false}, {"data": [[1.68527364E12, 1.0]], "isOverall": false, "label": "setUp consumers", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68527376E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 33.0, "minX": 1.0, "maxY": 55265.0, "series": [{"data": [[2.0, 490.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[2.0, 490.0]], "isOverall": false, "label": "create message-Aggregated", "isController": false}, {"data": [[2.0, 26522.0], [3.0, 27912.0], [4.0, 21151.0], [5.0, 26539.0], [6.0, 26746.0], [7.0, 153.0], [8.0, 28848.0], [9.0, 26181.0], [11.0, 26288.5], [12.0, 31752.0], [13.0, 26783.0], [14.0, 27791.0], [15.0, 31134.5], [16.0, 28586.0], [17.0, 28145.0], [18.0, 31632.0], [19.0, 25898.0], [20.0, 36.0], [21.0, 29847.0], [22.0, 25874.0], [23.0, 10078.0], [24.0, 29668.5], [25.0, 31491.0], [26.0, 25910.0], [27.0, 25552.0], [28.0, 29562.0], [29.0, 31646.0], [30.0, 25943.0], [31.0, 27621.0], [33.0, 16546.0], [35.0, 22519.0], [34.0, 29429.0], [36.0, 29427.0], [39.0, 27452.0], [38.0, 24642.5], [41.0, 22256.0], [42.0, 22075.0], [45.0, 31725.0], [44.0, 26564.0], [47.0, 33.0], [46.0, 20642.0], [49.0, 21026.5], [48.0, 25610.0], [51.0, 24634.0], [50.0, 26063.0], [53.0, 17783.0], [52.0, 28094.0], [55.0, 11950.0], [54.0, 23506.0], [56.0, 30235.0], [58.0, 25101.5], [61.0, 28022.0], [60.0, 26044.0], [63.0, 30873.0], [62.0, 25971.0], [67.0, 34.0], [66.0, 23083.0], [65.0, 17679.0], [64.0, 27131.0], [71.0, 22920.0], [70.0, 26729.0], [69.0, 27724.0], [68.0, 28090.0], [74.0, 25347.0], [73.0, 25418.0], [72.0, 26158.0], [79.0, 7084.0], [78.0, 29108.0], [77.0, 28906.0], [76.0, 25497.0], [83.0, 22993.0], [82.0, 25544.0], [81.0, 27983.0], [80.0, 22712.0], [87.0, 901.0], [86.0, 25616.5], [84.0, 27340.0], [91.0, 25346.0], [90.0, 31630.0], [89.0, 17440.5], [95.0, 25667.0], [94.0, 28331.5], [93.0, 27073.0], [92.0, 35.0], [99.0, 27697.5], [98.0, 17407.0], [97.0, 25981.0], [96.0, 23542.0], [103.0, 20361.0], [102.0, 19439.0], [101.0, 6884.0], [100.0, 22284.0], [107.0, 15940.0], [106.0, 23382.333333333332], [104.0, 22801.0], [111.0, 17939.0], [110.0, 16217.0], [109.0, 16783.0], [108.0, 23102.0], [115.0, 20587.0], [114.0, 20191.0], [113.0, 19626.0], [112.0, 23729.0], [119.0, 14116.0], [117.0, 22777.5], [116.0, 17703.0], [123.0, 19416.0], [122.0, 15432.0], [121.0, 10863.0], [120.0, 17952.5], [127.0, 22462.0], [126.0, 16758.0], [125.0, 18390.0], [124.0, 17401.0], [135.0, 15806.0], [134.0, 16464.0], [133.0, 16245.0], [132.0, 14931.0], [131.0, 21816.0], [130.0, 16691.0], [129.0, 17764.0], [128.0, 15407.0], [143.0, 17728.5], [141.0, 15648.0], [140.0, 8835.0], [139.0, 17322.0], [138.0, 17160.5], [136.0, 16976.0], [151.0, 15240.0], [150.0, 17077.0], [149.0, 15745.0], [148.0, 17967.0], [147.0, 16527.0], [146.0, 12225.0], [145.0, 17997.0], [144.0, 19950.666666666668], [159.0, 13483.0], [158.0, 16856.0], [157.0, 11195.0], [156.0, 17701.0], [155.0, 16178.0], [154.0, 15739.0], [153.0, 15984.0], [152.0, 15588.0], [167.0, 16717.0], [166.0, 11019.0], [165.0, 16616.0], [164.0, 15547.0], [163.0, 15951.0], [162.0, 16480.0], [160.0, 13519.0], [175.0, 16331.0], [174.0, 16854.0], [173.0, 15527.0], [172.0, 17935.0], [170.0, 18214.5], [168.0, 52.0], [182.0, 7378.0], [181.0, 6559.0], [180.0, 19396.5], [179.0, 15672.0], [178.0, 16334.0], [177.0, 15400.0], [176.0, 13575.0], [191.0, 17756.0], [190.0, 66.0], [189.0, 15716.0], [188.0, 13254.0], [187.0, 16104.0], [186.0, 16915.0], [185.0, 12060.0], [184.0, 15836.5], [199.0, 13303.0], [198.0, 16534.0], [197.0, 15687.0], [196.0, 17912.0], [195.0, 16306.0], [194.0, 16082.0], [193.0, 66.0], [192.0, 17398.0], [207.0, 7293.0], [206.0, 15335.0], [205.0, 15473.0], [204.0, 14043.0], [203.0, 16651.0], [202.0, 17189.0], [201.0, 16371.0], [200.0, 20849.0], [215.0, 12599.0], [213.0, 16141.0], [212.0, 18624.0], [211.0, 20216.666666666668], [210.0, 20218.0], [209.0, 13112.0], [208.0, 1792.0], [223.0, 18064.0], [222.0, 12285.0], [221.0, 16085.0], [220.0, 15236.5], [218.0, 13198.0], [217.0, 14821.0], [216.0, 42.0], [231.0, 15377.0], [230.0, 15808.0], [229.0, 15915.0], [228.0, 15615.0], [227.0, 13755.0], [226.0, 16570.0], [225.0, 11712.0], [224.0, 13415.0], [239.0, 13879.0], [238.0, 11322.0], [237.0, 13038.0], [236.0, 14557.0], [235.0, 16091.0], [234.0, 17621.0], [233.0, 15913.0], [232.0, 1734.0], [247.0, 10831.0], [246.0, 16462.0], [245.0, 12143.0], [244.0, 10546.0], [242.0, 18591.0], [241.0, 15965.5], [254.0, 12635.5], [252.0, 10908.0], [250.0, 16599.0], [249.0, 14876.0], [248.0, 16521.0], [269.0, 5875.0], [270.0, 7273.0], [268.0, 7463.0], [259.0, 6719.0], [258.0, 6123.0], [257.0, 13752.0], [256.0, 13864.5], [267.0, 8236.0], [266.0, 9389.0], [265.0, 11380.0], [263.0, 7755.0], [261.0, 13777.0], [260.0, 6996.0], [286.0, 12553.0], [287.0, 5621.0], [285.0, 13550.0], [284.0, 3744.0], [283.0, 7452.0], [281.0, 5927.0], [280.0, 7222.0], [279.0, 8458.0], [273.0, 9966.0], [272.0, 8837.666666666666], [275.0, 7617.0], [274.0, 10863.5], [278.0, 7167.0], [277.0, 6099.0], [276.0, 4992.0], [302.0, 11599.0], [303.0, 5049.0], [301.0, 9558.0], [300.0, 8211.0], [299.0, 8968.0], [298.0, 8166.0], [297.0, 8480.0], [296.0, 9061.0], [295.0, 8803.0], [288.0, 4560.0], [291.0, 9210.5], [289.0, 1746.0], [294.0, 6736.0], [292.0, 9653.0], [317.0, 8368.0], [319.0, 5350.5], [316.0, 12651.0], [306.0, 14646.0], [305.0, 7698.0], [304.0, 5061.0], [315.0, 10095.0], [314.0, 6085.0], [313.0, 8630.0], [312.0, 8947.0], [311.0, 9097.0], [310.0, 10496.0], [309.0, 6447.0], [308.0, 9887.333333333334], [334.0, 5241.0], [335.0, 9617.0], [333.0, 7311.0], [332.0, 10810.0], [330.0, 9147.0], [329.0, 6984.0], [328.0, 9851.0], [327.0, 7041.0], [321.0, 4374.0], [320.0, 5758.0], [323.0, 8060.0], [322.0, 4916.0], [326.0, 3487.0], [325.0, 7620.0], [324.0, 7083.0], [350.0, 11331.5], [351.0, 11649.0], [349.0, 11609.0], [348.0, 8736.0], [347.0, 8373.0], [346.0, 6009.0], [345.0, 7498.0], [344.0, 8215.0], [343.0, 7937.0], [337.0, 7653.5], [339.0, 8590.0], [338.0, 9766.0], [342.0, 8469.0], [341.0, 7934.0], [340.0, 7657.0], [355.0, 4269.0], [365.0, 12228.666666666666], [367.0, 8173.0], [364.0, 5778.5], [362.0, 5848.5], [360.0, 6160.0], [358.0, 14066.0], [357.0, 1306.0], [356.0, 4667.0], [354.0, 8380.0], [353.0, 8363.0], [352.0, 8947.0], [381.0, 7529.0], [383.0, 9796.0], [380.0, 9785.0], [371.0, 10373.5], [370.0, 8086.0], [369.0, 7760.0], [368.0, 10274.0], [379.0, 8604.0], [378.0, 12655.0], [377.0, 10024.5], [376.0, 11109.333333333334], [375.0, 6919.0], [374.0, 7646.0], [373.0, 10971.0], [372.0, 10253.0], [398.0, 5645.0], [399.0, 8794.0], [397.0, 7538.0], [396.0, 8157.0], [395.0, 8986.0], [394.0, 7680.0], [392.0, 8636.5], [390.0, 9589.0], [385.0, 10984.0], [384.0, 10759.5], [387.0, 9555.0], [386.0, 8249.0], [389.0, 9838.0], [388.0, 6806.0], [414.0, 7452.0], [415.0, 7510.0], [413.0, 8088.0], [412.0, 9255.5], [411.0, 8630.0], [410.0, 7700.0], [409.0, 8583.0], [408.0, 8092.0], [407.0, 8642.0], [400.0, 8405.0], [403.0, 10563.0], [402.0, 10144.666666666666], [406.0, 8492.0], [405.0, 8245.0], [404.0, 10081.0], [430.0, 10281.0], [431.0, 7611.0], [429.0, 9408.5], [428.0, 9888.0], [427.0, 9547.0], [426.0, 9340.5], [425.0, 8710.5], [424.0, 10239.666666666666], [423.0, 7803.0], [417.0, 7147.0], [416.0, 7767.0], [419.0, 7792.0], [418.0, 8743.0], [422.0, 7505.0], [421.0, 8900.0], [420.0, 10496.0], [446.0, 9115.0], [447.0, 8479.333333333334], [445.0, 8473.0], [444.0, 8817.375], [443.0, 9159.0], [442.0, 9388.0], [441.0, 9423.5], [440.0, 9516.0], [439.0, 7784.0], [433.0, 8901.5], [432.0, 7971.0], [435.0, 10048.0], [434.0, 8716.5], [438.0, 8680.0], [437.0, 9162.333333333334], [436.0, 8298.0], [462.0, 8256.0], [463.0, 8156.0], [461.0, 8536.5], [460.0, 8418.0], [459.0, 8492.0], [458.0, 8234.0], [457.0, 7654.0], [456.0, 8489.0], [455.0, 8241.0], [449.0, 8220.0], [448.0, 8529.0], [451.0, 8179.0], [450.0, 8020.0], [454.0, 8337.5], [453.0, 7919.5], [478.0, 7756.0], [479.0, 7916.0], [477.0, 8338.0], [476.0, 7759.333333333333], [475.0, 7852.25], [474.0, 8264.5], [473.0, 8485.5], [472.0, 8490.0], [471.0, 8033.5], [465.0, 8241.0], [464.0, 8278.666666666668], [467.0, 7908.5], [466.0, 8521.166666666666], [470.0, 8087.0], [469.0, 8242.833333333334], [468.0, 8586.333333333334], [494.0, 7209.026315789476], [495.0, 7129.142857142857], [493.0, 7301.5], [492.0, 7402.8], [491.0, 7384.1], [490.0, 7316.583333333334], [489.0, 7634.5], [488.0, 7559.0], [487.0, 7628.0], [481.0, 7792.25], [480.0, 7901.235294117648], [483.0, 7638.785714285715], [482.0, 7910.0], [486.0, 7127.0], [485.0, 7500.333333333333], [484.0, 7628.0], [510.0, 9424.416666666666], [505.0, 9541.777777777777], [501.0, 9536.480000000001], [500.0, 6733.495153933852], [499.0, 6938.647058823529], [498.0, 7003.0], [497.0, 6812.333333333333], [496.0, 7157.833333333332], [536.0, 9576.5], [522.0, 9655.0], [521.0, 9416.75], [573.0, 9215.0], [567.0, 9250.5], [563.0, 9471.0], [561.0, 9462.0], [554.0, 9500.0], [549.0, 9178.0], [605.0, 9236.5], [593.0, 9290.5], [589.0, 9313.25], [587.0, 9329.0], [580.0, 9414.0], [634.0, 9137.0], [632.0, 9145.0], [625.0, 9155.333333333334], [612.0, 9202.0], [670.0, 8954.0], [652.0, 9052.0], [644.0, 9106.0], [686.0, 8823.0], [677.0, 8903.0], [726.0, 7947.0], [723.0, 8114.5], [722.0, 8166.5], [721.0, 8187.0], [720.0, 8275.5], [719.0, 8391.0], [718.0, 8434.875], [714.0, 8624.0], [766.0, 5007.0], [767.0, 9828.591549295772], [764.0, 5204.0], [763.0, 5555.333333333333], [762.0, 6113.5], [761.0, 6380.0], [749.0, 7289.0], [743.0, 7684.0], [742.0, 7690.666666666667], [740.0, 7849.0], [748.0, 7433.0], [758.0, 6578.0], [756.0, 6760.0], [755.0, 6969.0], [798.0, 13395.079999999998], [799.0, 13129.0], [796.0, 14075.499999999998], [791.0, 14350.0], [787.0, 14278.5], [785.0, 14517.0], [784.0, 14547.2], [782.0, 14720.85], [776.0, 15116.212121212122], [774.0, 15368.0], [773.0, 15755.79824561403], [771.0, 16473.872340425532], [770.0, 16276.67901234568], [768.0, 15643.865671641797], [800.0, 12626.470588235294], [1.0, 23922.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[505.92119999999846, 8504.9112]], "isOverall": false, "label": "Produce Kafka message for user-Aggregated", "isController": false}, {"data": [[1.0, 55265.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.0, 55265.0]], "isOverall": false, "label": "Create + subscribe consumers-Aggregated", "isController": false}, {"data": [[767.0, 16194.683673469388], [765.0, 18157.5], [798.0, 7378.5], [799.0, 6429.0], [797.0, 7412.0], [796.0, 7733.230769230769], [795.0, 7999.0], [794.0, 8140.0], [790.0, 7813.0], [785.0, 9006.0], [784.0, 9097.5], [782.0, 8979.666666666666], [768.0, 14914.826086956522], [769.0, 13804.5], [771.0, 12623.138888888889], [770.0, 13669.612244897959], [774.0, 10149.0], [773.0, 10856.432432432433], [781.0, 8885.0], [778.0, 9418.333333333334], [780.0, 10094.0], [800.0, 6264.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[771.91, 13542.666666666664]], "isOverall": false, "label": "Consume Kafka message for user - receive latency-Aggregated", "isController": false}, {"data": [[1.0, 3113.0]], "isOverall": false, "label": "Close consumers", "isController": false}, {"data": [[1.0, 3113.0]], "isOverall": false, "label": "Close consumers-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 800.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.68527358E12, "maxY": 1073.2666666666667, "series": [{"data": [[1.6852737E12, 1073.2666666666667], [1.68527358E12, 0.0], [1.68527376E12, 36.55], [1.68527364E12, 298.51666666666665]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6852737E12, 0.0], [1.68527358E12, 0.0], [1.68527376E12, 0.0], [1.68527364E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68527376E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 490.0, "minX": 1.68527358E12, "maxY": 55265.0, "series": [{"data": [[1.68527358E12, 490.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.6852737E12, 6974.45274551215], [1.68527376E12, 23129.465116279058], [1.68527364E12, 12115.99999999999]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68527364E12, 55265.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.68527364E12, 13542.666666666664]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68527376E12, 3113.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68527376E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68527358E12, "maxY": 4.9E-324, "series": [{"data": [[1.68527358E12, 0.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.6852737E12, 0.0], [1.68527376E12, 0.0], [1.68527364E12, 0.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68527364E12, 0.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.68527364E12, 0.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68527376E12, 0.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68527376E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68527358E12, "maxY": 4.9E-324, "series": [{"data": [[1.68527358E12, 0.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.6852737E12, 0.0], [1.68527376E12, 0.0], [1.68527364E12, 0.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68527364E12, 0.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.68527364E12, 0.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68527376E12, 0.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68527376E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 33.0, "minX": 1.68527358E12, "maxY": 55265.0, "series": [{"data": [[1.6852737E12, 22948.0], [1.68527358E12, 490.0], [1.68527376E12, 32481.0], [1.68527364E12, 55265.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6852737E12, 8020.1], [1.68527358E12, 490.0], [1.68527376E12, 30146.7], [1.68527364E12, 17388.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6852737E12, 17080.410000000003], [1.68527358E12, 490.0], [1.68527376E12, 32391.41], [1.68527364E12, 18861.100000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6852737E12, 9898.449999999995], [1.68527358E12, 490.0], [1.68527376E12, 31638.3], [1.68527364E12, 18015.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6852737E12, 42.0], [1.68527358E12, 490.0], [1.68527376E12, 33.0], [1.68527364E12, 4101.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6852737E12, 6387.5], [1.68527358E12, 490.0], [1.68527376E12, 25426.0], [1.68527364E12, 12570.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68527376E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 5667.0, "minX": 1.0, "maxY": 22284.0, "series": [{"data": [[2.0, 11184.5], [3.0, 21135.0], [5.0, 13752.0], [6.0, 6394.5], [7.0, 5667.0], [8.0, 7533.5], [10.0, 7733.5], [11.0, 8650.5], [12.0, 6845.0], [15.0, 9488.0], [17.0, 6291.0], [19.0, 7177.5], [20.0, 7478.5], [21.0, 6380.0], [22.0, 10386.5], [23.0, 9369.0], [24.0, 6006.5], [27.0, 11279.0], [28.0, 7649.5], [29.0, 5895.0], [31.0, 8064.0], [37.0, 6281.0], [36.0, 6550.0], [38.0, 6709.0], [41.0, 6808.0], [47.0, 6979.5], [49.0, 5928.0], [52.0, 5912.5], [53.0, 6184.0], [54.0, 8601.5], [56.0, 9641.0], [58.0, 8347.0], [60.0, 7409.0], [62.0, 8321.0], [64.0, 7013.5], [70.0, 9157.5], [75.0, 13677.0], [76.0, 9514.5], [80.0, 5998.0], [84.0, 7381.0], [87.0, 6955.5], [98.0, 6044.5], [96.0, 6225.0], [105.0, 6071.0], [104.0, 7298.0], [110.0, 6309.0], [114.0, 15967.5], [121.0, 6323.0], [126.0, 9409.5], [130.0, 5775.0], [128.0, 6093.5], [140.0, 14869.0], [136.0, 16237.5], [139.0, 5819.0], [138.0, 6266.0], [137.0, 6658.0], [149.0, 7352.0], [144.0, 5993.5], [155.0, 6300.0], [160.0, 16840.5], [163.0, 6298.0], [171.0, 9330.0], [172.0, 7465.5], [1.0, 22284.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 172.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[2.0, 0.0], [3.0, 0.0], [5.0, 0.0], [6.0, 0.0], [7.0, 0.0], [8.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [15.0, 0.0], [17.0, 0.0], [19.0, 0.0], [20.0, 0.0], [21.0, 0.0], [22.0, 0.0], [23.0, 0.0], [24.0, 0.0], [27.0, 0.0], [28.0, 0.0], [29.0, 0.0], [31.0, 0.0], [37.0, 0.0], [36.0, 0.0], [38.0, 0.0], [41.0, 0.0], [47.0, 0.0], [49.0, 0.0], [52.0, 0.0], [53.0, 0.0], [54.0, 0.0], [56.0, 0.0], [58.0, 0.0], [60.0, 0.0], [62.0, 0.0], [64.0, 0.0], [70.0, 0.0], [75.0, 0.0], [76.0, 0.0], [80.0, 0.0], [84.0, 0.0], [87.0, 0.0], [98.0, 0.0], [96.0, 0.0], [105.0, 0.0], [104.0, 0.0], [110.0, 0.0], [114.0, 0.0], [121.0, 0.0], [126.0, 0.0], [130.0, 0.0], [128.0, 0.0], [140.0, 0.0], [136.0, 0.0], [139.0, 0.0], [138.0, 0.0], [137.0, 0.0], [149.0, 0.0], [144.0, 0.0], [155.0, 0.0], [160.0, 0.0], [163.0, 0.0], [171.0, 0.0], [172.0, 0.0], [1.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 172.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68527358E12, "maxY": 56.81666666666667, "series": [{"data": [[1.6852737E12, 56.81666666666667], [1.68527358E12, 0.03333333333333333], [1.68527376E12, 0.15], [1.68527364E12, 31.383333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68527376E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68527358E12, "maxY": 63.13333333333333, "series": [{"data": [[1.6852737E12, 63.13333333333333], [1.68527358E12, 0.016666666666666666], [1.68527376E12, 2.1666666666666665], [1.68527364E12, 23.066666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68527376E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68527358E12, "maxY": 63.13333333333333, "series": [{"data": [[1.68527364E12, 5.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency-success", "isController": false}, {"data": [[1.68527358E12, 0.016666666666666666]], "isOverall": false, "label": "create message-success", "isController": false}, {"data": [[1.68527364E12, 0.016666666666666666]], "isOverall": false, "label": "Create + subscribe consumers-success", "isController": false}, {"data": [[1.6852737E12, 63.13333333333333], [1.68527376E12, 2.15], [1.68527364E12, 18.05]], "isOverall": false, "label": "Produce Kafka message for user-success", "isController": false}, {"data": [[1.68527376E12, 0.016666666666666666]], "isOverall": false, "label": "Close consumers-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68527376E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68527358E12, "maxY": 63.13333333333333, "series": [{"data": [[1.6852737E12, 63.13333333333333], [1.68527358E12, 0.016666666666666666], [1.68527376E12, 2.1666666666666665], [1.68527364E12, 23.066666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68527376E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

