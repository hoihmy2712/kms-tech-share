/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 70.0, "minX": 0.0, "maxY": 77389.0, "series": [{"data": [[0.0, 419.0], [0.1, 419.0], [0.2, 419.0], [0.3, 419.0], [0.4, 419.0], [0.5, 419.0], [0.6, 419.0], [0.7, 419.0], [0.8, 419.0], [0.9, 419.0], [1.0, 419.0], [1.1, 419.0], [1.2, 419.0], [1.3, 419.0], [1.4, 419.0], [1.5, 419.0], [1.6, 419.0], [1.7, 419.0], [1.8, 419.0], [1.9, 419.0], [2.0, 419.0], [2.1, 419.0], [2.2, 419.0], [2.3, 419.0], [2.4, 419.0], [2.5, 419.0], [2.6, 419.0], [2.7, 419.0], [2.8, 419.0], [2.9, 419.0], [3.0, 419.0], [3.1, 419.0], [3.2, 419.0], [3.3, 419.0], [3.4, 419.0], [3.5, 419.0], [3.6, 419.0], [3.7, 419.0], [3.8, 419.0], [3.9, 419.0], [4.0, 419.0], [4.1, 419.0], [4.2, 419.0], [4.3, 419.0], [4.4, 419.0], [4.5, 419.0], [4.6, 419.0], [4.7, 419.0], [4.8, 419.0], [4.9, 419.0], [5.0, 419.0], [5.1, 419.0], [5.2, 419.0], [5.3, 419.0], [5.4, 419.0], [5.5, 419.0], [5.6, 419.0], [5.7, 419.0], [5.8, 419.0], [5.9, 419.0], [6.0, 419.0], [6.1, 419.0], [6.2, 419.0], [6.3, 419.0], [6.4, 419.0], [6.5, 419.0], [6.6, 419.0], [6.7, 419.0], [6.8, 419.0], [6.9, 419.0], [7.0, 419.0], [7.1, 419.0], [7.2, 419.0], [7.3, 419.0], [7.4, 419.0], [7.5, 419.0], [7.6, 419.0], [7.7, 419.0], [7.8, 419.0], [7.9, 419.0], [8.0, 419.0], [8.1, 419.0], [8.2, 419.0], [8.3, 419.0], [8.4, 419.0], [8.5, 419.0], [8.6, 419.0], [8.7, 419.0], [8.8, 419.0], [8.9, 419.0], [9.0, 419.0], [9.1, 419.0], [9.2, 419.0], [9.3, 419.0], [9.4, 419.0], [9.5, 419.0], [9.6, 419.0], [9.7, 419.0], [9.8, 419.0], [9.9, 419.0], [10.0, 419.0], [10.1, 419.0], [10.2, 419.0], [10.3, 419.0], [10.4, 419.0], [10.5, 419.0], [10.6, 419.0], [10.7, 419.0], [10.8, 419.0], [10.9, 419.0], [11.0, 419.0], [11.1, 419.0], [11.2, 419.0], [11.3, 419.0], [11.4, 419.0], [11.5, 419.0], [11.6, 419.0], [11.7, 419.0], [11.8, 419.0], [11.9, 419.0], [12.0, 419.0], [12.1, 419.0], [12.2, 419.0], [12.3, 419.0], [12.4, 419.0], [12.5, 419.0], [12.6, 419.0], [12.7, 419.0], [12.8, 419.0], [12.9, 419.0], [13.0, 419.0], [13.1, 419.0], [13.2, 419.0], [13.3, 419.0], [13.4, 419.0], [13.5, 419.0], [13.6, 419.0], [13.7, 419.0], [13.8, 419.0], [13.9, 419.0], [14.0, 419.0], [14.1, 419.0], [14.2, 419.0], [14.3, 419.0], [14.4, 419.0], [14.5, 419.0], [14.6, 419.0], [14.7, 419.0], [14.8, 419.0], [14.9, 419.0], [15.0, 419.0], [15.1, 419.0], [15.2, 419.0], [15.3, 419.0], [15.4, 419.0], [15.5, 419.0], [15.6, 419.0], [15.7, 419.0], [15.8, 419.0], [15.9, 419.0], [16.0, 419.0], [16.1, 419.0], [16.2, 419.0], [16.3, 419.0], [16.4, 419.0], [16.5, 419.0], [16.6, 419.0], [16.7, 419.0], [16.8, 419.0], [16.9, 419.0], [17.0, 419.0], [17.1, 419.0], [17.2, 419.0], [17.3, 419.0], [17.4, 419.0], [17.5, 419.0], [17.6, 419.0], [17.7, 419.0], [17.8, 419.0], [17.9, 419.0], [18.0, 419.0], [18.1, 419.0], [18.2, 419.0], [18.3, 419.0], [18.4, 419.0], [18.5, 419.0], [18.6, 419.0], [18.7, 419.0], [18.8, 419.0], [18.9, 419.0], [19.0, 419.0], [19.1, 419.0], [19.2, 419.0], [19.3, 419.0], [19.4, 419.0], [19.5, 419.0], [19.6, 419.0], [19.7, 419.0], [19.8, 419.0], [19.9, 419.0], [20.0, 419.0], [20.1, 419.0], [20.2, 419.0], [20.3, 419.0], [20.4, 419.0], [20.5, 419.0], [20.6, 419.0], [20.7, 419.0], [20.8, 419.0], [20.9, 419.0], [21.0, 419.0], [21.1, 419.0], [21.2, 419.0], [21.3, 419.0], [21.4, 419.0], [21.5, 419.0], [21.6, 419.0], [21.7, 419.0], [21.8, 419.0], [21.9, 419.0], [22.0, 419.0], [22.1, 419.0], [22.2, 419.0], [22.3, 419.0], [22.4, 419.0], [22.5, 419.0], [22.6, 419.0], [22.7, 419.0], [22.8, 419.0], [22.9, 419.0], [23.0, 419.0], [23.1, 419.0], [23.2, 419.0], [23.3, 419.0], [23.4, 419.0], [23.5, 419.0], [23.6, 419.0], [23.7, 419.0], [23.8, 419.0], [23.9, 419.0], [24.0, 419.0], [24.1, 419.0], [24.2, 419.0], [24.3, 419.0], [24.4, 419.0], [24.5, 419.0], [24.6, 419.0], [24.7, 419.0], [24.8, 419.0], [24.9, 419.0], [25.0, 419.0], [25.1, 419.0], [25.2, 419.0], [25.3, 419.0], [25.4, 419.0], [25.5, 419.0], [25.6, 419.0], [25.7, 419.0], [25.8, 419.0], [25.9, 419.0], [26.0, 419.0], [26.1, 419.0], [26.2, 419.0], [26.3, 419.0], [26.4, 419.0], [26.5, 419.0], [26.6, 419.0], [26.7, 419.0], [26.8, 419.0], [26.9, 419.0], [27.0, 419.0], [27.1, 419.0], [27.2, 419.0], [27.3, 419.0], [27.4, 419.0], [27.5, 419.0], [27.6, 419.0], [27.7, 419.0], [27.8, 419.0], [27.9, 419.0], [28.0, 419.0], [28.1, 419.0], [28.2, 419.0], [28.3, 419.0], [28.4, 419.0], [28.5, 419.0], [28.6, 419.0], [28.7, 419.0], [28.8, 419.0], [28.9, 419.0], [29.0, 419.0], [29.1, 419.0], [29.2, 419.0], [29.3, 419.0], [29.4, 419.0], [29.5, 419.0], [29.6, 419.0], [29.7, 419.0], [29.8, 419.0], [29.9, 419.0], [30.0, 419.0], [30.1, 419.0], [30.2, 419.0], [30.3, 419.0], [30.4, 419.0], [30.5, 419.0], [30.6, 419.0], [30.7, 419.0], [30.8, 419.0], [30.9, 419.0], [31.0, 419.0], [31.1, 419.0], [31.2, 419.0], [31.3, 419.0], [31.4, 419.0], [31.5, 419.0], [31.6, 419.0], [31.7, 419.0], [31.8, 419.0], [31.9, 419.0], [32.0, 419.0], [32.1, 419.0], [32.2, 419.0], [32.3, 419.0], [32.4, 419.0], [32.5, 419.0], [32.6, 419.0], [32.7, 419.0], [32.8, 419.0], [32.9, 419.0], [33.0, 419.0], [33.1, 419.0], [33.2, 419.0], [33.3, 419.0], [33.4, 419.0], [33.5, 419.0], [33.6, 419.0], [33.7, 419.0], [33.8, 419.0], [33.9, 419.0], [34.0, 419.0], [34.1, 419.0], [34.2, 419.0], [34.3, 419.0], [34.4, 419.0], [34.5, 419.0], [34.6, 419.0], [34.7, 419.0], [34.8, 419.0], [34.9, 419.0], [35.0, 419.0], [35.1, 419.0], [35.2, 419.0], [35.3, 419.0], [35.4, 419.0], [35.5, 419.0], [35.6, 419.0], [35.7, 419.0], [35.8, 419.0], [35.9, 419.0], [36.0, 419.0], [36.1, 419.0], [36.2, 419.0], [36.3, 419.0], [36.4, 419.0], [36.5, 419.0], [36.6, 419.0], [36.7, 419.0], [36.8, 419.0], [36.9, 419.0], [37.0, 419.0], [37.1, 419.0], [37.2, 419.0], [37.3, 419.0], [37.4, 419.0], [37.5, 419.0], [37.6, 419.0], [37.7, 419.0], [37.8, 419.0], [37.9, 419.0], [38.0, 419.0], [38.1, 419.0], [38.2, 419.0], [38.3, 419.0], [38.4, 419.0], [38.5, 419.0], [38.6, 419.0], [38.7, 419.0], [38.8, 419.0], [38.9, 419.0], [39.0, 419.0], [39.1, 419.0], [39.2, 419.0], [39.3, 419.0], [39.4, 419.0], [39.5, 419.0], [39.6, 419.0], [39.7, 419.0], [39.8, 419.0], [39.9, 419.0], [40.0, 419.0], [40.1, 419.0], [40.2, 419.0], [40.3, 419.0], [40.4, 419.0], [40.5, 419.0], [40.6, 419.0], [40.7, 419.0], [40.8, 419.0], [40.9, 419.0], [41.0, 419.0], [41.1, 419.0], [41.2, 419.0], [41.3, 419.0], [41.4, 419.0], [41.5, 419.0], [41.6, 419.0], [41.7, 419.0], [41.8, 419.0], [41.9, 419.0], [42.0, 419.0], [42.1, 419.0], [42.2, 419.0], [42.3, 419.0], [42.4, 419.0], [42.5, 419.0], [42.6, 419.0], [42.7, 419.0], [42.8, 419.0], [42.9, 419.0], [43.0, 419.0], [43.1, 419.0], [43.2, 419.0], [43.3, 419.0], [43.4, 419.0], [43.5, 419.0], [43.6, 419.0], [43.7, 419.0], [43.8, 419.0], [43.9, 419.0], [44.0, 419.0], [44.1, 419.0], [44.2, 419.0], [44.3, 419.0], [44.4, 419.0], [44.5, 419.0], [44.6, 419.0], [44.7, 419.0], [44.8, 419.0], [44.9, 419.0], [45.0, 419.0], [45.1, 419.0], [45.2, 419.0], [45.3, 419.0], [45.4, 419.0], [45.5, 419.0], [45.6, 419.0], [45.7, 419.0], [45.8, 419.0], [45.9, 419.0], [46.0, 419.0], [46.1, 419.0], [46.2, 419.0], [46.3, 419.0], [46.4, 419.0], [46.5, 419.0], [46.6, 419.0], [46.7, 419.0], [46.8, 419.0], [46.9, 419.0], [47.0, 419.0], [47.1, 419.0], [47.2, 419.0], [47.3, 419.0], [47.4, 419.0], [47.5, 419.0], [47.6, 419.0], [47.7, 419.0], [47.8, 419.0], [47.9, 419.0], [48.0, 419.0], [48.1, 419.0], [48.2, 419.0], [48.3, 419.0], [48.4, 419.0], [48.5, 419.0], [48.6, 419.0], [48.7, 419.0], [48.8, 419.0], [48.9, 419.0], [49.0, 419.0], [49.1, 419.0], [49.2, 419.0], [49.3, 419.0], [49.4, 419.0], [49.5, 419.0], [49.6, 419.0], [49.7, 419.0], [49.8, 419.0], [49.9, 419.0], [50.0, 419.0], [50.1, 419.0], [50.2, 419.0], [50.3, 419.0], [50.4, 419.0], [50.5, 419.0], [50.6, 419.0], [50.7, 419.0], [50.8, 419.0], [50.9, 419.0], [51.0, 419.0], [51.1, 419.0], [51.2, 419.0], [51.3, 419.0], [51.4, 419.0], [51.5, 419.0], [51.6, 419.0], [51.7, 419.0], [51.8, 419.0], [51.9, 419.0], [52.0, 419.0], [52.1, 419.0], [52.2, 419.0], [52.3, 419.0], [52.4, 419.0], [52.5, 419.0], [52.6, 419.0], [52.7, 419.0], [52.8, 419.0], [52.9, 419.0], [53.0, 419.0], [53.1, 419.0], [53.2, 419.0], [53.3, 419.0], [53.4, 419.0], [53.5, 419.0], [53.6, 419.0], [53.7, 419.0], [53.8, 419.0], [53.9, 419.0], [54.0, 419.0], [54.1, 419.0], [54.2, 419.0], [54.3, 419.0], [54.4, 419.0], [54.5, 419.0], [54.6, 419.0], [54.7, 419.0], [54.8, 419.0], [54.9, 419.0], [55.0, 419.0], [55.1, 419.0], [55.2, 419.0], [55.3, 419.0], [55.4, 419.0], [55.5, 419.0], [55.6, 419.0], [55.7, 419.0], [55.8, 419.0], [55.9, 419.0], [56.0, 419.0], [56.1, 419.0], [56.2, 419.0], [56.3, 419.0], [56.4, 419.0], [56.5, 419.0], [56.6, 419.0], [56.7, 419.0], [56.8, 419.0], [56.9, 419.0], [57.0, 419.0], [57.1, 419.0], [57.2, 419.0], [57.3, 419.0], [57.4, 419.0], [57.5, 419.0], [57.6, 419.0], [57.7, 419.0], [57.8, 419.0], [57.9, 419.0], [58.0, 419.0], [58.1, 419.0], [58.2, 419.0], [58.3, 419.0], [58.4, 419.0], [58.5, 419.0], [58.6, 419.0], [58.7, 419.0], [58.8, 419.0], [58.9, 419.0], [59.0, 419.0], [59.1, 419.0], [59.2, 419.0], [59.3, 419.0], [59.4, 419.0], [59.5, 419.0], [59.6, 419.0], [59.7, 419.0], [59.8, 419.0], [59.9, 419.0], [60.0, 419.0], [60.1, 419.0], [60.2, 419.0], [60.3, 419.0], [60.4, 419.0], [60.5, 419.0], [60.6, 419.0], [60.7, 419.0], [60.8, 419.0], [60.9, 419.0], [61.0, 419.0], [61.1, 419.0], [61.2, 419.0], [61.3, 419.0], [61.4, 419.0], [61.5, 419.0], [61.6, 419.0], [61.7, 419.0], [61.8, 419.0], [61.9, 419.0], [62.0, 419.0], [62.1, 419.0], [62.2, 419.0], [62.3, 419.0], [62.4, 419.0], [62.5, 419.0], [62.6, 419.0], [62.7, 419.0], [62.8, 419.0], [62.9, 419.0], [63.0, 419.0], [63.1, 419.0], [63.2, 419.0], [63.3, 419.0], [63.4, 419.0], [63.5, 419.0], [63.6, 419.0], [63.7, 419.0], [63.8, 419.0], [63.9, 419.0], [64.0, 419.0], [64.1, 419.0], [64.2, 419.0], [64.3, 419.0], [64.4, 419.0], [64.5, 419.0], [64.6, 419.0], [64.7, 419.0], [64.8, 419.0], [64.9, 419.0], [65.0, 419.0], [65.1, 419.0], [65.2, 419.0], [65.3, 419.0], [65.4, 419.0], [65.5, 419.0], [65.6, 419.0], [65.7, 419.0], [65.8, 419.0], [65.9, 419.0], [66.0, 419.0], [66.1, 419.0], [66.2, 419.0], [66.3, 419.0], [66.4, 419.0], [66.5, 419.0], [66.6, 419.0], [66.7, 419.0], [66.8, 419.0], [66.9, 419.0], [67.0, 419.0], [67.1, 419.0], [67.2, 419.0], [67.3, 419.0], [67.4, 419.0], [67.5, 419.0], [67.6, 419.0], [67.7, 419.0], [67.8, 419.0], [67.9, 419.0], [68.0, 419.0], [68.1, 419.0], [68.2, 419.0], [68.3, 419.0], [68.4, 419.0], [68.5, 419.0], [68.6, 419.0], [68.7, 419.0], [68.8, 419.0], [68.9, 419.0], [69.0, 419.0], [69.1, 419.0], [69.2, 419.0], [69.3, 419.0], [69.4, 419.0], [69.5, 419.0], [69.6, 419.0], [69.7, 419.0], [69.8, 419.0], [69.9, 419.0], [70.0, 419.0], [70.1, 419.0], [70.2, 419.0], [70.3, 419.0], [70.4, 419.0], [70.5, 419.0], [70.6, 419.0], [70.7, 419.0], [70.8, 419.0], [70.9, 419.0], [71.0, 419.0], [71.1, 419.0], [71.2, 419.0], [71.3, 419.0], [71.4, 419.0], [71.5, 419.0], [71.6, 419.0], [71.7, 419.0], [71.8, 419.0], [71.9, 419.0], [72.0, 419.0], [72.1, 419.0], [72.2, 419.0], [72.3, 419.0], [72.4, 419.0], [72.5, 419.0], [72.6, 419.0], [72.7, 419.0], [72.8, 419.0], [72.9, 419.0], [73.0, 419.0], [73.1, 419.0], [73.2, 419.0], [73.3, 419.0], [73.4, 419.0], [73.5, 419.0], [73.6, 419.0], [73.7, 419.0], [73.8, 419.0], [73.9, 419.0], [74.0, 419.0], [74.1, 419.0], [74.2, 419.0], [74.3, 419.0], [74.4, 419.0], [74.5, 419.0], [74.6, 419.0], [74.7, 419.0], [74.8, 419.0], [74.9, 419.0], [75.0, 419.0], [75.1, 419.0], [75.2, 419.0], [75.3, 419.0], [75.4, 419.0], [75.5, 419.0], [75.6, 419.0], [75.7, 419.0], [75.8, 419.0], [75.9, 419.0], [76.0, 419.0], [76.1, 419.0], [76.2, 419.0], [76.3, 419.0], [76.4, 419.0], [76.5, 419.0], [76.6, 419.0], [76.7, 419.0], [76.8, 419.0], [76.9, 419.0], [77.0, 419.0], [77.1, 419.0], [77.2, 419.0], [77.3, 419.0], [77.4, 419.0], [77.5, 419.0], [77.6, 419.0], [77.7, 419.0], [77.8, 419.0], [77.9, 419.0], [78.0, 419.0], [78.1, 419.0], [78.2, 419.0], [78.3, 419.0], [78.4, 419.0], [78.5, 419.0], [78.6, 419.0], [78.7, 419.0], [78.8, 419.0], [78.9, 419.0], [79.0, 419.0], [79.1, 419.0], [79.2, 419.0], [79.3, 419.0], [79.4, 419.0], [79.5, 419.0], [79.6, 419.0], [79.7, 419.0], [79.8, 419.0], [79.9, 419.0], [80.0, 419.0], [80.1, 419.0], [80.2, 419.0], [80.3, 419.0], [80.4, 419.0], [80.5, 419.0], [80.6, 419.0], [80.7, 419.0], [80.8, 419.0], [80.9, 419.0], [81.0, 419.0], [81.1, 419.0], [81.2, 419.0], [81.3, 419.0], [81.4, 419.0], [81.5, 419.0], [81.6, 419.0], [81.7, 419.0], [81.8, 419.0], [81.9, 419.0], [82.0, 419.0], [82.1, 419.0], [82.2, 419.0], [82.3, 419.0], [82.4, 419.0], [82.5, 419.0], [82.6, 419.0], [82.7, 419.0], [82.8, 419.0], [82.9, 419.0], [83.0, 419.0], [83.1, 419.0], [83.2, 419.0], [83.3, 419.0], [83.4, 419.0], [83.5, 419.0], [83.6, 419.0], [83.7, 419.0], [83.8, 419.0], [83.9, 419.0], [84.0, 419.0], [84.1, 419.0], [84.2, 419.0], [84.3, 419.0], [84.4, 419.0], [84.5, 419.0], [84.6, 419.0], [84.7, 419.0], [84.8, 419.0], [84.9, 419.0], [85.0, 419.0], [85.1, 419.0], [85.2, 419.0], [85.3, 419.0], [85.4, 419.0], [85.5, 419.0], [85.6, 419.0], [85.7, 419.0], [85.8, 419.0], [85.9, 419.0], [86.0, 419.0], [86.1, 419.0], [86.2, 419.0], [86.3, 419.0], [86.4, 419.0], [86.5, 419.0], [86.6, 419.0], [86.7, 419.0], [86.8, 419.0], [86.9, 419.0], [87.0, 419.0], [87.1, 419.0], [87.2, 419.0], [87.3, 419.0], [87.4, 419.0], [87.5, 419.0], [87.6, 419.0], [87.7, 419.0], [87.8, 419.0], [87.9, 419.0], [88.0, 419.0], [88.1, 419.0], [88.2, 419.0], [88.3, 419.0], [88.4, 419.0], [88.5, 419.0], [88.6, 419.0], [88.7, 419.0], [88.8, 419.0], [88.9, 419.0], [89.0, 419.0], [89.1, 419.0], [89.2, 419.0], [89.3, 419.0], [89.4, 419.0], [89.5, 419.0], [89.6, 419.0], [89.7, 419.0], [89.8, 419.0], [89.9, 419.0], [90.0, 419.0], [90.1, 419.0], [90.2, 419.0], [90.3, 419.0], [90.4, 419.0], [90.5, 419.0], [90.6, 419.0], [90.7, 419.0], [90.8, 419.0], [90.9, 419.0], [91.0, 419.0], [91.1, 419.0], [91.2, 419.0], [91.3, 419.0], [91.4, 419.0], [91.5, 419.0], [91.6, 419.0], [91.7, 419.0], [91.8, 419.0], [91.9, 419.0], [92.0, 419.0], [92.1, 419.0], [92.2, 419.0], [92.3, 419.0], [92.4, 419.0], [92.5, 419.0], [92.6, 419.0], [92.7, 419.0], [92.8, 419.0], [92.9, 419.0], [93.0, 419.0], [93.1, 419.0], [93.2, 419.0], [93.3, 419.0], [93.4, 419.0], [93.5, 419.0], [93.6, 419.0], [93.7, 419.0], [93.8, 419.0], [93.9, 419.0], [94.0, 419.0], [94.1, 419.0], [94.2, 419.0], [94.3, 419.0], [94.4, 419.0], [94.5, 419.0], [94.6, 419.0], [94.7, 419.0], [94.8, 419.0], [94.9, 419.0], [95.0, 419.0], [95.1, 419.0], [95.2, 419.0], [95.3, 419.0], [95.4, 419.0], [95.5, 419.0], [95.6, 419.0], [95.7, 419.0], [95.8, 419.0], [95.9, 419.0], [96.0, 419.0], [96.1, 419.0], [96.2, 419.0], [96.3, 419.0], [96.4, 419.0], [96.5, 419.0], [96.6, 419.0], [96.7, 419.0], [96.8, 419.0], [96.9, 419.0], [97.0, 419.0], [97.1, 419.0], [97.2, 419.0], [97.3, 419.0], [97.4, 419.0], [97.5, 419.0], [97.6, 419.0], [97.7, 419.0], [97.8, 419.0], [97.9, 419.0], [98.0, 419.0], [98.1, 419.0], [98.2, 419.0], [98.3, 419.0], [98.4, 419.0], [98.5, 419.0], [98.6, 419.0], [98.7, 419.0], [98.8, 419.0], [98.9, 419.0], [99.0, 419.0], [99.1, 419.0], [99.2, 419.0], [99.3, 419.0], [99.4, 419.0], [99.5, 419.0], [99.6, 419.0], [99.7, 419.0], [99.8, 419.0], [99.9, 419.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[0.0, 70.0], [0.1, 2631.0], [0.2, 2717.0], [0.3, 2844.0], [0.4, 2852.0], [0.5, 2858.0], [0.6, 2921.0], [0.7, 2950.0], [0.8, 2996.0], [0.9, 3019.0], [1.0, 3031.0], [1.1, 3060.0], [1.2, 3103.0], [1.3, 3158.0], [1.4, 3277.0], [1.5, 3294.0], [1.6, 3341.0], [1.7, 3406.0], [1.8, 3452.0], [1.9, 3475.0], [2.0, 3530.0], [2.1, 3615.0], [2.2, 3748.0], [2.3, 3783.0], [2.4, 3818.0], [2.5, 3847.0], [2.6, 3926.0], [2.7, 4003.0], [2.8, 4082.0], [2.9, 4154.0], [3.0, 4261.0], [3.1, 4296.0], [3.2, 4381.0], [3.3, 4492.0], [3.4, 4816.0], [3.5, 4855.0], [3.6, 4883.0], [3.7, 4919.0], [3.8, 4999.0], [3.9, 5061.0], [4.0, 5166.0], [4.1, 5323.0], [4.2, 5516.0], [4.3, 5666.0], [4.4, 5736.0], [4.5, 5820.0], [4.6, 5946.0], [4.7, 6121.0], [4.8, 6200.0], [4.9, 6224.0], [5.0, 6268.0], [5.1, 6338.0], [5.2, 6438.0], [5.3, 6452.0], [5.4, 6517.0], [5.5, 6533.0], [5.6, 6534.0], [5.7, 6548.0], [5.8, 6565.0], [5.9, 6617.0], [6.0, 6661.0], [6.1, 6688.0], [6.2, 6713.0], [6.3, 6741.0], [6.4, 6777.0], [6.5, 6809.0], [6.6, 6849.0], [6.7, 6948.0], [6.8, 6967.0], [6.9, 6986.0], [7.0, 7054.0], [7.1, 7074.0], [7.2, 7079.0], [7.3, 7084.0], [7.4, 7130.0], [7.5, 7183.0], [7.6, 7221.0], [7.7, 7276.0], [7.8, 7297.0], [7.9, 7324.0], [8.0, 7348.0], [8.1, 7463.0], [8.2, 7503.0], [8.3, 7506.0], [8.4, 7541.0], [8.5, 7637.0], [8.6, 7686.0], [8.7, 7749.0], [8.8, 7856.0], [8.9, 7871.0], [9.0, 7920.0], [9.1, 7966.0], [9.2, 7976.0], [9.3, 8029.0], [9.4, 8031.0], [9.5, 8063.0], [9.6, 8116.0], [9.7, 8131.0], [9.8, 8278.0], [9.9, 8366.0], [10.0, 8433.0], [10.1, 8446.0], [10.2, 8518.0], [10.3, 8593.0], [10.4, 8673.0], [10.5, 8778.0], [10.6, 8821.0], [10.7, 8874.0], [10.8, 8888.0], [10.9, 8929.0], [11.0, 8972.0], [11.1, 9091.0], [11.2, 9132.0], [11.3, 9168.0], [11.4, 9220.0], [11.5, 9238.0], [11.6, 9385.0], [11.7, 9569.0], [11.8, 9683.0], [11.9, 9838.0], [12.0, 9891.0], [12.1, 9937.0], [12.2, 10011.0], [12.3, 10054.0], [12.4, 10103.0], [12.5, 10134.0], [12.6, 10226.0], [12.7, 10285.0], [12.8, 10412.0], [12.9, 10459.0], [13.0, 10566.0], [13.1, 10648.0], [13.2, 10698.0], [13.3, 10746.0], [13.4, 10776.0], [13.5, 10826.0], [13.6, 10865.0], [13.7, 10893.0], [13.8, 10945.0], [13.9, 10980.0], [14.0, 10995.0], [14.1, 11053.0], [14.2, 11090.0], [14.3, 11105.0], [14.4, 11151.0], [14.5, 11197.0], [14.6, 11217.0], [14.7, 11252.0], [14.8, 11300.0], [14.9, 11359.0], [15.0, 11424.0], [15.1, 11498.0], [15.2, 11540.0], [15.3, 11592.0], [15.4, 11674.0], [15.5, 11776.0], [15.6, 11821.0], [15.7, 11868.0], [15.8, 11929.0], [15.9, 11973.0], [16.0, 12003.0], [16.1, 12076.0], [16.2, 12103.0], [16.3, 12124.0], [16.4, 12163.0], [16.5, 12262.0], [16.6, 12394.0], [16.7, 12513.0], [16.8, 12605.0], [16.9, 12707.0], [17.0, 12767.0], [17.1, 12803.0], [17.2, 12935.0], [17.3, 13013.0], [17.4, 13026.0], [17.5, 13177.0], [17.6, 13297.0], [17.7, 13455.0], [17.8, 13524.0], [17.9, 13557.0], [18.0, 13574.0], [18.1, 13638.0], [18.2, 13765.0], [18.3, 13846.0], [18.4, 13879.0], [18.5, 13925.0], [18.6, 13971.0], [18.7, 14087.0], [18.8, 14130.0], [18.9, 14185.0], [19.0, 14205.0], [19.1, 14238.0], [19.2, 14251.0], [19.3, 14341.0], [19.4, 14409.0], [19.5, 14417.0], [19.6, 14422.0], [19.7, 14426.0], [19.8, 14448.0], [19.9, 14459.0], [20.0, 14463.0], [20.1, 14471.0], [20.2, 14478.0], [20.3, 14516.0], [20.4, 14545.0], [20.5, 14582.0], [20.6, 14615.0], [20.7, 14646.0], [20.8, 14667.0], [20.9, 14685.0], [21.0, 14713.0], [21.1, 14763.0], [21.2, 14785.0], [21.3, 14866.0], [21.4, 14955.0], [21.5, 14976.0], [21.6, 15106.0], [21.7, 15138.0], [21.8, 15160.0], [21.9, 15165.0], [22.0, 15171.0], [22.1, 15178.0], [22.2, 15209.0], [22.3, 15216.0], [22.4, 15227.0], [22.5, 15240.0], [22.6, 15255.0], [22.7, 15260.0], [22.8, 15264.0], [22.9, 15273.0], [23.0, 15275.0], [23.1, 15280.0], [23.2, 15286.0], [23.3, 15292.0], [23.4, 15312.0], [23.5, 15320.0], [23.6, 15326.0], [23.7, 15354.0], [23.8, 15388.0], [23.9, 15447.0], [24.0, 15482.0], [24.1, 15533.0], [24.2, 15559.0], [24.3, 15586.0], [24.4, 15619.0], [24.5, 15643.0], [24.6, 15646.0], [24.7, 15673.0], [24.8, 15690.0], [24.9, 15742.0], [25.0, 15774.0], [25.1, 15783.0], [25.2, 15803.0], [25.3, 15811.0], [25.4, 15847.0], [25.5, 15884.0], [25.6, 15894.0], [25.7, 15896.0], [25.8, 15904.0], [25.9, 15919.0], [26.0, 15925.0], [26.1, 15933.0], [26.2, 15950.0], [26.3, 15960.0], [26.4, 15971.0], [26.5, 16001.0], [26.6, 16006.0], [26.7, 16007.0], [26.8, 16009.0], [26.9, 16011.0], [27.0, 16015.0], [27.1, 16018.0], [27.2, 16020.0], [27.3, 16022.0], [27.4, 16026.0], [27.5, 16027.0], [27.6, 16040.0], [27.7, 16053.0], [27.8, 16078.0], [27.9, 16080.0], [28.0, 16085.0], [28.1, 16090.0], [28.2, 16120.0], [28.3, 16129.0], [28.4, 16138.0], [28.5, 16151.0], [28.6, 16157.0], [28.7, 16172.0], [28.8, 16190.0], [28.9, 16226.0], [29.0, 16236.0], [29.1, 16244.0], [29.2, 16249.0], [29.3, 16253.0], [29.4, 16258.0], [29.5, 16260.0], [29.6, 16271.0], [29.7, 16305.0], [29.8, 16325.0], [29.9, 16344.0], [30.0, 16347.0], [30.1, 16348.0], [30.2, 16353.0], [30.3, 16361.0], [30.4, 16383.0], [30.5, 16398.0], [30.6, 16407.0], [30.7, 16424.0], [30.8, 16435.0], [30.9, 16444.0], [31.0, 16449.0], [31.1, 16459.0], [31.2, 16469.0], [31.3, 16478.0], [31.4, 16487.0], [31.5, 16494.0], [31.6, 16502.0], [31.7, 16508.0], [31.8, 16523.0], [31.9, 16531.0], [32.0, 16537.0], [32.1, 16543.0], [32.2, 16547.0], [32.3, 16552.0], [32.4, 16559.0], [32.5, 16567.0], [32.6, 16578.0], [32.7, 16588.0], [32.8, 16596.0], [32.9, 16599.0], [33.0, 16620.0], [33.1, 16624.0], [33.2, 16629.0], [33.3, 16632.0], [33.4, 16634.0], [33.5, 16636.0], [33.6, 16638.0], [33.7, 16639.0], [33.8, 16640.0], [33.9, 16643.0], [34.0, 16645.0], [34.1, 16646.0], [34.2, 16648.0], [34.3, 16650.0], [34.4, 16653.0], [34.5, 16656.0], [34.6, 16658.0], [34.7, 16660.0], [34.8, 16663.0], [34.9, 16665.0], [35.0, 16669.0], [35.1, 16675.0], [35.2, 16681.0], [35.3, 16686.0], [35.4, 16691.0], [35.5, 16693.0], [35.6, 16698.0], [35.7, 16711.0], [35.8, 16722.0], [35.9, 16752.0], [36.0, 16764.0], [36.1, 16773.0], [36.2, 16787.0], [36.3, 16800.0], [36.4, 16818.0], [36.5, 16824.0], [36.6, 16830.0], [36.7, 16847.0], [36.8, 16853.0], [36.9, 16863.0], [37.0, 16868.0], [37.1, 16877.0], [37.2, 16895.0], [37.3, 16905.0], [37.4, 16910.0], [37.5, 16928.0], [37.6, 16962.0], [37.7, 16977.0], [37.8, 17007.0], [37.9, 17013.0], [38.0, 17017.0], [38.1, 17026.0], [38.2, 17039.0], [38.3, 17058.0], [38.4, 17066.0], [38.5, 17071.0], [38.6, 17076.0], [38.7, 17081.0], [38.8, 17085.0], [38.9, 17090.0], [39.0, 17101.0], [39.1, 17106.0], [39.2, 17116.0], [39.3, 17123.0], [39.4, 17137.0], [39.5, 17140.0], [39.6, 17145.0], [39.7, 17147.0], [39.8, 17149.0], [39.9, 17154.0], [40.0, 17155.0], [40.1, 17157.0], [40.2, 17159.0], [40.3, 17160.0], [40.4, 17163.0], [40.5, 17169.0], [40.6, 17175.0], [40.7, 17182.0], [40.8, 17190.0], [40.9, 17203.0], [41.0, 17217.0], [41.1, 17222.0], [41.2, 17226.0], [41.3, 17240.0], [41.4, 17263.0], [41.5, 17274.0], [41.6, 17316.0], [41.7, 17347.0], [41.8, 17361.0], [41.9, 17368.0], [42.0, 17376.0], [42.1, 17392.0], [42.2, 17421.0], [42.3, 17429.0], [42.4, 17443.0], [42.5, 17456.0], [42.6, 17477.0], [42.7, 17506.0], [42.8, 17517.0], [42.9, 17543.0], [43.0, 17566.0], [43.1, 17584.0], [43.2, 17587.0], [43.3, 17597.0], [43.4, 17622.0], [43.5, 17673.0], [43.6, 17710.0], [43.7, 17714.0], [43.8, 17718.0], [43.9, 17727.0], [44.0, 17736.0], [44.1, 17738.0], [44.2, 17741.0], [44.3, 17742.0], [44.4, 17752.0], [44.5, 17766.0], [44.6, 17816.0], [44.7, 17830.0], [44.8, 17834.0], [44.9, 17843.0], [45.0, 17851.0], [45.1, 17872.0], [45.2, 17887.0], [45.3, 17894.0], [45.4, 17905.0], [45.5, 17917.0], [45.6, 17932.0], [45.7, 17935.0], [45.8, 17937.0], [45.9, 17940.0], [46.0, 17942.0], [46.1, 17944.0], [46.2, 17949.0], [46.3, 17969.0], [46.4, 17985.0], [46.5, 18003.0], [46.6, 18015.0], [46.7, 18023.0], [46.8, 18029.0], [46.9, 18038.0], [47.0, 18055.0], [47.1, 18066.0], [47.2, 18098.0], [47.3, 18127.0], [47.4, 18141.0], [47.5, 18171.0], [47.6, 18176.0], [47.7, 18182.0], [47.8, 18207.0], [47.9, 18229.0], [48.0, 18239.0], [48.1, 18254.0], [48.2, 18263.0], [48.3, 18267.0], [48.4, 18269.0], [48.5, 18271.0], [48.6, 18274.0], [48.7, 18276.0], [48.8, 18278.0], [48.9, 18281.0], [49.0, 18284.0], [49.1, 18286.0], [49.2, 18288.0], [49.3, 18290.0], [49.4, 18292.0], [49.5, 18293.0], [49.6, 18297.0], [49.7, 18301.0], [49.8, 18302.0], [49.9, 18305.0], [50.0, 18334.0], [50.1, 18351.0], [50.2, 18368.0], [50.3, 18378.0], [50.4, 18387.0], [50.5, 18409.0], [50.6, 18431.0], [50.7, 18451.0], [50.8, 18462.0], [50.9, 18467.0], [51.0, 18490.0], [51.1, 18523.0], [51.2, 18536.0], [51.3, 18540.0], [51.4, 18548.0], [51.5, 18551.0], [51.6, 18553.0], [51.7, 18553.0], [51.8, 18554.0], [51.9, 18556.0], [52.0, 18558.0], [52.1, 18558.0], [52.2, 18560.0], [52.3, 18561.0], [52.4, 18562.0], [52.5, 18563.0], [52.6, 18564.0], [52.7, 18565.0], [52.8, 18566.0], [52.9, 18567.0], [53.0, 18568.0], [53.1, 18569.0], [53.2, 18572.0], [53.3, 18574.0], [53.4, 18575.0], [53.5, 18577.0], [53.6, 18578.0], [53.7, 18579.0], [53.8, 18580.0], [53.9, 18581.0], [54.0, 18582.0], [54.1, 18583.0], [54.2, 18584.0], [54.3, 18586.0], [54.4, 18587.0], [54.5, 18590.0], [54.6, 18592.0], [54.7, 18595.0], [54.8, 18599.0], [54.9, 18601.0], [55.0, 18609.0], [55.1, 18617.0], [55.2, 18631.0], [55.3, 18632.0], [55.4, 18651.0], [55.5, 18683.0], [55.6, 18702.0], [55.7, 18721.0], [55.8, 18744.0], [55.9, 18786.0], [56.0, 18808.0], [56.1, 18827.0], [56.2, 18829.0], [56.3, 18830.0], [56.4, 18832.0], [56.5, 18833.0], [56.6, 18834.0], [56.7, 18840.0], [56.8, 18842.0], [56.9, 18845.0], [57.0, 18848.0], [57.1, 18849.0], [57.2, 18850.0], [57.3, 18851.0], [57.4, 18852.0], [57.5, 18854.0], [57.6, 18857.0], [57.7, 18858.0], [57.8, 18860.0], [57.9, 18861.0], [58.0, 18863.0], [58.1, 18864.0], [58.2, 18865.0], [58.3, 18867.0], [58.4, 18869.0], [58.5, 18870.0], [58.6, 18870.0], [58.7, 18871.0], [58.8, 18872.0], [58.9, 18873.0], [59.0, 18874.0], [59.1, 18875.0], [59.2, 18875.0], [59.3, 18876.0], [59.4, 18877.0], [59.5, 18877.0], [59.6, 18878.0], [59.7, 18879.0], [59.8, 18880.0], [59.9, 18880.0], [60.0, 18882.0], [60.1, 18883.0], [60.2, 18883.0], [60.3, 18883.0], [60.4, 18885.0], [60.5, 18885.0], [60.6, 18887.0], [60.7, 18887.0], [60.8, 18888.0], [60.9, 18889.0], [61.0, 18890.0], [61.1, 18890.0], [61.2, 18891.0], [61.3, 18892.0], [61.4, 18892.0], [61.5, 18893.0], [61.6, 18894.0], [61.7, 18895.0], [61.8, 18895.0], [61.9, 18896.0], [62.0, 18897.0], [62.1, 18898.0], [62.2, 18899.0], [62.3, 18899.0], [62.4, 18901.0], [62.5, 18903.0], [62.6, 18905.0], [62.7, 18907.0], [62.8, 18910.0], [62.9, 18912.0], [63.0, 18931.0], [63.1, 18949.0], [63.2, 18962.0], [63.3, 18976.0], [63.4, 18998.0], [63.5, 19010.0], [63.6, 19017.0], [63.7, 19025.0], [63.8, 19034.0], [63.9, 19043.0], [64.0, 19066.0], [64.1, 19069.0], [64.2, 19072.0], [64.3, 19075.0], [64.4, 19078.0], [64.5, 19101.0], [64.6, 19142.0], [64.7, 19149.0], [64.8, 19155.0], [64.9, 19160.0], [65.0, 19162.0], [65.1, 19164.0], [65.2, 19166.0], [65.3, 19168.0], [65.4, 19170.0], [65.5, 19175.0], [65.6, 19186.0], [65.7, 19209.0], [65.8, 19245.0], [65.9, 19265.0], [66.0, 19277.0], [66.1, 19299.0], [66.2, 19346.0], [66.3, 19391.0], [66.4, 19418.0], [66.5, 19427.0], [66.6, 19434.0], [66.7, 19436.0], [66.8, 19438.0], [66.9, 19439.0], [67.0, 19441.0], [67.1, 19466.0], [67.2, 19477.0], [67.3, 19501.0], [67.4, 19507.0], [67.5, 19515.0], [67.6, 19534.0], [67.7, 19549.0], [67.8, 19569.0], [67.9, 19595.0], [68.0, 19599.0], [68.1, 19601.0], [68.2, 19602.0], [68.3, 19608.0], [68.4, 19612.0], [68.5, 19623.0], [68.6, 19633.0], [68.7, 19690.0], [68.8, 19728.0], [68.9, 19741.0], [69.0, 19769.0], [69.1, 19851.0], [69.2, 19878.0], [69.3, 19948.0], [69.4, 19984.0], [69.5, 20010.0], [69.6, 20068.0], [69.7, 20110.0], [69.8, 20113.0], [69.9, 20117.0], [70.0, 20119.0], [70.1, 20120.0], [70.2, 20121.0], [70.3, 20124.0], [70.4, 20125.0], [70.5, 20127.0], [70.6, 20129.0], [70.7, 20132.0], [70.8, 20134.0], [70.9, 20137.0], [71.0, 20141.0], [71.1, 20147.0], [71.2, 20191.0], [71.3, 20202.0], [71.4, 20231.0], [71.5, 20248.0], [71.6, 20251.0], [71.7, 20253.0], [71.8, 20256.0], [71.9, 20257.0], [72.0, 20259.0], [72.1, 20261.0], [72.2, 20262.0], [72.3, 20263.0], [72.4, 20264.0], [72.5, 20265.0], [72.6, 20266.0], [72.7, 20267.0], [72.8, 20267.0], [72.9, 20268.0], [73.0, 20268.0], [73.1, 20269.0], [73.2, 20269.0], [73.3, 20270.0], [73.4, 20270.0], [73.5, 20271.0], [73.6, 20273.0], [73.7, 20274.0], [73.8, 20276.0], [73.9, 20276.0], [74.0, 20277.0], [74.1, 20278.0], [74.2, 20279.0], [74.3, 20280.0], [74.4, 20281.0], [74.5, 20282.0], [74.6, 20283.0], [74.7, 20284.0], [74.8, 20284.0], [74.9, 20285.0], [75.0, 20286.0], [75.1, 20286.0], [75.2, 20287.0], [75.3, 20289.0], [75.4, 20290.0], [75.5, 20291.0], [75.6, 20293.0], [75.7, 20295.0], [75.8, 20299.0], [75.9, 20303.0], [76.0, 20349.0], [76.1, 20356.0], [76.2, 20361.0], [76.3, 20363.0], [76.4, 20364.0], [76.5, 20366.0], [76.6, 20367.0], [76.7, 20368.0], [76.8, 20369.0], [76.9, 20370.0], [77.0, 20371.0], [77.1, 20372.0], [77.2, 20373.0], [77.3, 20374.0], [77.4, 20375.0], [77.5, 20376.0], [77.6, 20378.0], [77.7, 20379.0], [77.8, 20381.0], [77.9, 20384.0], [78.0, 20410.0], [78.1, 20443.0], [78.2, 20514.0], [78.3, 20532.0], [78.4, 20547.0], [78.5, 20611.0], [78.6, 20700.0], [78.7, 20712.0], [78.8, 20723.0], [78.9, 20732.0], [79.0, 20741.0], [79.1, 20804.0], [79.2, 20857.0], [79.3, 20862.0], [79.4, 20866.0], [79.5, 20868.0], [79.6, 20870.0], [79.7, 20874.0], [79.8, 20878.0], [79.9, 20883.0], [80.0, 20893.0], [80.1, 20938.0], [80.2, 21007.0], [80.3, 21025.0], [80.4, 21085.0], [80.5, 21179.0], [80.6, 21244.0], [80.7, 21329.0], [80.8, 21406.0], [80.9, 21418.0], [81.0, 21452.0], [81.1, 21461.0], [81.2, 21464.0], [81.3, 21465.0], [81.4, 21468.0], [81.5, 21471.0], [81.6, 21478.0], [81.7, 21484.0], [81.8, 21486.0], [81.9, 21489.0], [82.0, 21492.0], [82.1, 21495.0], [82.2, 21547.0], [82.3, 21682.0], [82.4, 21732.0], [82.5, 21756.0], [82.6, 21777.0], [82.7, 21790.0], [82.8, 21804.0], [82.9, 21832.0], [83.0, 21841.0], [83.1, 21855.0], [83.2, 21871.0], [83.3, 21908.0], [83.4, 21921.0], [83.5, 21926.0], [83.6, 21942.0], [83.7, 21948.0], [83.8, 21967.0], [83.9, 21982.0], [84.0, 22006.0], [84.1, 22050.0], [84.2, 22052.0], [84.3, 22057.0], [84.4, 22062.0], [84.5, 22070.0], [84.6, 22087.0], [84.7, 22108.0], [84.8, 22123.0], [84.9, 22132.0], [85.0, 22157.0], [85.1, 22170.0], [85.2, 22186.0], [85.3, 22221.0], [85.4, 22248.0], [85.5, 22260.0], [85.6, 22289.0], [85.7, 22312.0], [85.8, 22344.0], [85.9, 22412.0], [86.0, 22450.0], [86.1, 22487.0], [86.2, 22514.0], [86.3, 22527.0], [86.4, 22539.0], [86.5, 22552.0], [86.6, 22566.0], [86.7, 22573.0], [86.8, 22584.0], [86.9, 22608.0], [87.0, 22613.0], [87.1, 22622.0], [87.2, 22627.0], [87.3, 22644.0], [87.4, 22657.0], [87.5, 22661.0], [87.6, 22666.0], [87.7, 22682.0], [87.8, 22713.0], [87.9, 22738.0], [88.0, 22762.0], [88.1, 22788.0], [88.2, 22814.0], [88.3, 22825.0], [88.4, 22871.0], [88.5, 22912.0], [88.6, 22934.0], [88.7, 22963.0], [88.8, 22971.0], [88.9, 22995.0], [89.0, 23021.0], [89.1, 23032.0], [89.2, 23042.0], [89.3, 23046.0], [89.4, 23048.0], [89.5, 23050.0], [89.6, 23054.0], [89.7, 23070.0], [89.8, 23092.0], [89.9, 23108.0], [90.0, 23127.0], [90.1, 23132.0], [90.2, 23154.0], [90.3, 23208.0], [90.4, 23216.0], [90.5, 23258.0], [90.6, 23284.0], [90.7, 23290.0], [90.8, 23357.0], [90.9, 23407.0], [91.0, 23433.0], [91.1, 23460.0], [91.2, 23480.0], [91.3, 23524.0], [91.4, 23560.0], [91.5, 23604.0], [91.6, 23619.0], [91.7, 23629.0], [91.8, 23640.0], [91.9, 23654.0], [92.0, 23667.0], [92.1, 23677.0], [92.2, 23684.0], [92.3, 23703.0], [92.4, 23717.0], [92.5, 23741.0], [92.6, 23767.0], [92.7, 23852.0], [92.8, 23946.0], [92.9, 23984.0], [93.0, 24005.0], [93.1, 24147.0], [93.2, 24152.0], [93.3, 24155.0], [93.4, 24157.0], [93.5, 24158.0], [93.6, 24161.0], [93.7, 24163.0], [93.8, 24164.0], [93.9, 24166.0], [94.0, 24168.0], [94.1, 24172.0], [94.2, 24211.0], [94.3, 24239.0], [94.4, 24241.0], [94.5, 24243.0], [94.6, 24244.0], [94.7, 24246.0], [94.8, 24247.0], [94.9, 24249.0], [95.0, 24250.0], [95.1, 24251.0], [95.2, 24253.0], [95.3, 24254.0], [95.4, 24256.0], [95.5, 24258.0], [95.6, 24260.0], [95.7, 24262.0], [95.8, 24267.0], [95.9, 24323.0], [96.0, 24330.0], [96.1, 24340.0], [96.2, 24427.0], [96.3, 24750.0], [96.4, 24807.0], [96.5, 24885.0], [96.6, 24895.0], [96.7, 25194.0], [96.8, 25594.0], [96.9, 25716.0], [97.0, 25734.0], [97.1, 25847.0], [97.2, 25976.0], [97.3, 25992.0], [97.4, 26038.0], [97.5, 26049.0], [97.6, 26054.0], [97.7, 26062.0], [97.8, 26213.0], [97.9, 26533.0], [98.0, 26547.0], [98.1, 26761.0], [98.2, 26904.0], [98.3, 27006.0], [98.4, 27103.0], [98.5, 27419.0], [98.6, 27500.0], [98.7, 27581.0], [98.8, 27803.0], [98.9, 27840.0], [99.0, 27873.0], [99.1, 29211.0], [99.2, 30400.0], [99.3, 32471.0], [99.4, 36031.0], [99.5, 37227.0], [99.6, 37241.0], [99.7, 39398.0], [99.8, 39414.0], [99.9, 41257.0], [100.0, 47053.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[0.0, 77389.0], [0.1, 77389.0], [0.2, 77389.0], [0.3, 77389.0], [0.4, 77389.0], [0.5, 77389.0], [0.6, 77389.0], [0.7, 77389.0], [0.8, 77389.0], [0.9, 77389.0], [1.0, 77389.0], [1.1, 77389.0], [1.2, 77389.0], [1.3, 77389.0], [1.4, 77389.0], [1.5, 77389.0], [1.6, 77389.0], [1.7, 77389.0], [1.8, 77389.0], [1.9, 77389.0], [2.0, 77389.0], [2.1, 77389.0], [2.2, 77389.0], [2.3, 77389.0], [2.4, 77389.0], [2.5, 77389.0], [2.6, 77389.0], [2.7, 77389.0], [2.8, 77389.0], [2.9, 77389.0], [3.0, 77389.0], [3.1, 77389.0], [3.2, 77389.0], [3.3, 77389.0], [3.4, 77389.0], [3.5, 77389.0], [3.6, 77389.0], [3.7, 77389.0], [3.8, 77389.0], [3.9, 77389.0], [4.0, 77389.0], [4.1, 77389.0], [4.2, 77389.0], [4.3, 77389.0], [4.4, 77389.0], [4.5, 77389.0], [4.6, 77389.0], [4.7, 77389.0], [4.8, 77389.0], [4.9, 77389.0], [5.0, 77389.0], [5.1, 77389.0], [5.2, 77389.0], [5.3, 77389.0], [5.4, 77389.0], [5.5, 77389.0], [5.6, 77389.0], [5.7, 77389.0], [5.8, 77389.0], [5.9, 77389.0], [6.0, 77389.0], [6.1, 77389.0], [6.2, 77389.0], [6.3, 77389.0], [6.4, 77389.0], [6.5, 77389.0], [6.6, 77389.0], [6.7, 77389.0], [6.8, 77389.0], [6.9, 77389.0], [7.0, 77389.0], [7.1, 77389.0], [7.2, 77389.0], [7.3, 77389.0], [7.4, 77389.0], [7.5, 77389.0], [7.6, 77389.0], [7.7, 77389.0], [7.8, 77389.0], [7.9, 77389.0], [8.0, 77389.0], [8.1, 77389.0], [8.2, 77389.0], [8.3, 77389.0], [8.4, 77389.0], [8.5, 77389.0], [8.6, 77389.0], [8.7, 77389.0], [8.8, 77389.0], [8.9, 77389.0], [9.0, 77389.0], [9.1, 77389.0], [9.2, 77389.0], [9.3, 77389.0], [9.4, 77389.0], [9.5, 77389.0], [9.6, 77389.0], [9.7, 77389.0], [9.8, 77389.0], [9.9, 77389.0], [10.0, 77389.0], [10.1, 77389.0], [10.2, 77389.0], [10.3, 77389.0], [10.4, 77389.0], [10.5, 77389.0], [10.6, 77389.0], [10.7, 77389.0], [10.8, 77389.0], [10.9, 77389.0], [11.0, 77389.0], [11.1, 77389.0], [11.2, 77389.0], [11.3, 77389.0], [11.4, 77389.0], [11.5, 77389.0], [11.6, 77389.0], [11.7, 77389.0], [11.8, 77389.0], [11.9, 77389.0], [12.0, 77389.0], [12.1, 77389.0], [12.2, 77389.0], [12.3, 77389.0], [12.4, 77389.0], [12.5, 77389.0], [12.6, 77389.0], [12.7, 77389.0], [12.8, 77389.0], [12.9, 77389.0], [13.0, 77389.0], [13.1, 77389.0], [13.2, 77389.0], [13.3, 77389.0], [13.4, 77389.0], [13.5, 77389.0], [13.6, 77389.0], [13.7, 77389.0], [13.8, 77389.0], [13.9, 77389.0], [14.0, 77389.0], [14.1, 77389.0], [14.2, 77389.0], [14.3, 77389.0], [14.4, 77389.0], [14.5, 77389.0], [14.6, 77389.0], [14.7, 77389.0], [14.8, 77389.0], [14.9, 77389.0], [15.0, 77389.0], [15.1, 77389.0], [15.2, 77389.0], [15.3, 77389.0], [15.4, 77389.0], [15.5, 77389.0], [15.6, 77389.0], [15.7, 77389.0], [15.8, 77389.0], [15.9, 77389.0], [16.0, 77389.0], [16.1, 77389.0], [16.2, 77389.0], [16.3, 77389.0], [16.4, 77389.0], [16.5, 77389.0], [16.6, 77389.0], [16.7, 77389.0], [16.8, 77389.0], [16.9, 77389.0], [17.0, 77389.0], [17.1, 77389.0], [17.2, 77389.0], [17.3, 77389.0], [17.4, 77389.0], [17.5, 77389.0], [17.6, 77389.0], [17.7, 77389.0], [17.8, 77389.0], [17.9, 77389.0], [18.0, 77389.0], [18.1, 77389.0], [18.2, 77389.0], [18.3, 77389.0], [18.4, 77389.0], [18.5, 77389.0], [18.6, 77389.0], [18.7, 77389.0], [18.8, 77389.0], [18.9, 77389.0], [19.0, 77389.0], [19.1, 77389.0], [19.2, 77389.0], [19.3, 77389.0], [19.4, 77389.0], [19.5, 77389.0], [19.6, 77389.0], [19.7, 77389.0], [19.8, 77389.0], [19.9, 77389.0], [20.0, 77389.0], [20.1, 77389.0], [20.2, 77389.0], [20.3, 77389.0], [20.4, 77389.0], [20.5, 77389.0], [20.6, 77389.0], [20.7, 77389.0], [20.8, 77389.0], [20.9, 77389.0], [21.0, 77389.0], [21.1, 77389.0], [21.2, 77389.0], [21.3, 77389.0], [21.4, 77389.0], [21.5, 77389.0], [21.6, 77389.0], [21.7, 77389.0], [21.8, 77389.0], [21.9, 77389.0], [22.0, 77389.0], [22.1, 77389.0], [22.2, 77389.0], [22.3, 77389.0], [22.4, 77389.0], [22.5, 77389.0], [22.6, 77389.0], [22.7, 77389.0], [22.8, 77389.0], [22.9, 77389.0], [23.0, 77389.0], [23.1, 77389.0], [23.2, 77389.0], [23.3, 77389.0], [23.4, 77389.0], [23.5, 77389.0], [23.6, 77389.0], [23.7, 77389.0], [23.8, 77389.0], [23.9, 77389.0], [24.0, 77389.0], [24.1, 77389.0], [24.2, 77389.0], [24.3, 77389.0], [24.4, 77389.0], [24.5, 77389.0], [24.6, 77389.0], [24.7, 77389.0], [24.8, 77389.0], [24.9, 77389.0], [25.0, 77389.0], [25.1, 77389.0], [25.2, 77389.0], [25.3, 77389.0], [25.4, 77389.0], [25.5, 77389.0], [25.6, 77389.0], [25.7, 77389.0], [25.8, 77389.0], [25.9, 77389.0], [26.0, 77389.0], [26.1, 77389.0], [26.2, 77389.0], [26.3, 77389.0], [26.4, 77389.0], [26.5, 77389.0], [26.6, 77389.0], [26.7, 77389.0], [26.8, 77389.0], [26.9, 77389.0], [27.0, 77389.0], [27.1, 77389.0], [27.2, 77389.0], [27.3, 77389.0], [27.4, 77389.0], [27.5, 77389.0], [27.6, 77389.0], [27.7, 77389.0], [27.8, 77389.0], [27.9, 77389.0], [28.0, 77389.0], [28.1, 77389.0], [28.2, 77389.0], [28.3, 77389.0], [28.4, 77389.0], [28.5, 77389.0], [28.6, 77389.0], [28.7, 77389.0], [28.8, 77389.0], [28.9, 77389.0], [29.0, 77389.0], [29.1, 77389.0], [29.2, 77389.0], [29.3, 77389.0], [29.4, 77389.0], [29.5, 77389.0], [29.6, 77389.0], [29.7, 77389.0], [29.8, 77389.0], [29.9, 77389.0], [30.0, 77389.0], [30.1, 77389.0], [30.2, 77389.0], [30.3, 77389.0], [30.4, 77389.0], [30.5, 77389.0], [30.6, 77389.0], [30.7, 77389.0], [30.8, 77389.0], [30.9, 77389.0], [31.0, 77389.0], [31.1, 77389.0], [31.2, 77389.0], [31.3, 77389.0], [31.4, 77389.0], [31.5, 77389.0], [31.6, 77389.0], [31.7, 77389.0], [31.8, 77389.0], [31.9, 77389.0], [32.0, 77389.0], [32.1, 77389.0], [32.2, 77389.0], [32.3, 77389.0], [32.4, 77389.0], [32.5, 77389.0], [32.6, 77389.0], [32.7, 77389.0], [32.8, 77389.0], [32.9, 77389.0], [33.0, 77389.0], [33.1, 77389.0], [33.2, 77389.0], [33.3, 77389.0], [33.4, 77389.0], [33.5, 77389.0], [33.6, 77389.0], [33.7, 77389.0], [33.8, 77389.0], [33.9, 77389.0], [34.0, 77389.0], [34.1, 77389.0], [34.2, 77389.0], [34.3, 77389.0], [34.4, 77389.0], [34.5, 77389.0], [34.6, 77389.0], [34.7, 77389.0], [34.8, 77389.0], [34.9, 77389.0], [35.0, 77389.0], [35.1, 77389.0], [35.2, 77389.0], [35.3, 77389.0], [35.4, 77389.0], [35.5, 77389.0], [35.6, 77389.0], [35.7, 77389.0], [35.8, 77389.0], [35.9, 77389.0], [36.0, 77389.0], [36.1, 77389.0], [36.2, 77389.0], [36.3, 77389.0], [36.4, 77389.0], [36.5, 77389.0], [36.6, 77389.0], [36.7, 77389.0], [36.8, 77389.0], [36.9, 77389.0], [37.0, 77389.0], [37.1, 77389.0], [37.2, 77389.0], [37.3, 77389.0], [37.4, 77389.0], [37.5, 77389.0], [37.6, 77389.0], [37.7, 77389.0], [37.8, 77389.0], [37.9, 77389.0], [38.0, 77389.0], [38.1, 77389.0], [38.2, 77389.0], [38.3, 77389.0], [38.4, 77389.0], [38.5, 77389.0], [38.6, 77389.0], [38.7, 77389.0], [38.8, 77389.0], [38.9, 77389.0], [39.0, 77389.0], [39.1, 77389.0], [39.2, 77389.0], [39.3, 77389.0], [39.4, 77389.0], [39.5, 77389.0], [39.6, 77389.0], [39.7, 77389.0], [39.8, 77389.0], [39.9, 77389.0], [40.0, 77389.0], [40.1, 77389.0], [40.2, 77389.0], [40.3, 77389.0], [40.4, 77389.0], [40.5, 77389.0], [40.6, 77389.0], [40.7, 77389.0], [40.8, 77389.0], [40.9, 77389.0], [41.0, 77389.0], [41.1, 77389.0], [41.2, 77389.0], [41.3, 77389.0], [41.4, 77389.0], [41.5, 77389.0], [41.6, 77389.0], [41.7, 77389.0], [41.8, 77389.0], [41.9, 77389.0], [42.0, 77389.0], [42.1, 77389.0], [42.2, 77389.0], [42.3, 77389.0], [42.4, 77389.0], [42.5, 77389.0], [42.6, 77389.0], [42.7, 77389.0], [42.8, 77389.0], [42.9, 77389.0], [43.0, 77389.0], [43.1, 77389.0], [43.2, 77389.0], [43.3, 77389.0], [43.4, 77389.0], [43.5, 77389.0], [43.6, 77389.0], [43.7, 77389.0], [43.8, 77389.0], [43.9, 77389.0], [44.0, 77389.0], [44.1, 77389.0], [44.2, 77389.0], [44.3, 77389.0], [44.4, 77389.0], [44.5, 77389.0], [44.6, 77389.0], [44.7, 77389.0], [44.8, 77389.0], [44.9, 77389.0], [45.0, 77389.0], [45.1, 77389.0], [45.2, 77389.0], [45.3, 77389.0], [45.4, 77389.0], [45.5, 77389.0], [45.6, 77389.0], [45.7, 77389.0], [45.8, 77389.0], [45.9, 77389.0], [46.0, 77389.0], [46.1, 77389.0], [46.2, 77389.0], [46.3, 77389.0], [46.4, 77389.0], [46.5, 77389.0], [46.6, 77389.0], [46.7, 77389.0], [46.8, 77389.0], [46.9, 77389.0], [47.0, 77389.0], [47.1, 77389.0], [47.2, 77389.0], [47.3, 77389.0], [47.4, 77389.0], [47.5, 77389.0], [47.6, 77389.0], [47.7, 77389.0], [47.8, 77389.0], [47.9, 77389.0], [48.0, 77389.0], [48.1, 77389.0], [48.2, 77389.0], [48.3, 77389.0], [48.4, 77389.0], [48.5, 77389.0], [48.6, 77389.0], [48.7, 77389.0], [48.8, 77389.0], [48.9, 77389.0], [49.0, 77389.0], [49.1, 77389.0], [49.2, 77389.0], [49.3, 77389.0], [49.4, 77389.0], [49.5, 77389.0], [49.6, 77389.0], [49.7, 77389.0], [49.8, 77389.0], [49.9, 77389.0], [50.0, 77389.0], [50.1, 77389.0], [50.2, 77389.0], [50.3, 77389.0], [50.4, 77389.0], [50.5, 77389.0], [50.6, 77389.0], [50.7, 77389.0], [50.8, 77389.0], [50.9, 77389.0], [51.0, 77389.0], [51.1, 77389.0], [51.2, 77389.0], [51.3, 77389.0], [51.4, 77389.0], [51.5, 77389.0], [51.6, 77389.0], [51.7, 77389.0], [51.8, 77389.0], [51.9, 77389.0], [52.0, 77389.0], [52.1, 77389.0], [52.2, 77389.0], [52.3, 77389.0], [52.4, 77389.0], [52.5, 77389.0], [52.6, 77389.0], [52.7, 77389.0], [52.8, 77389.0], [52.9, 77389.0], [53.0, 77389.0], [53.1, 77389.0], [53.2, 77389.0], [53.3, 77389.0], [53.4, 77389.0], [53.5, 77389.0], [53.6, 77389.0], [53.7, 77389.0], [53.8, 77389.0], [53.9, 77389.0], [54.0, 77389.0], [54.1, 77389.0], [54.2, 77389.0], [54.3, 77389.0], [54.4, 77389.0], [54.5, 77389.0], [54.6, 77389.0], [54.7, 77389.0], [54.8, 77389.0], [54.9, 77389.0], [55.0, 77389.0], [55.1, 77389.0], [55.2, 77389.0], [55.3, 77389.0], [55.4, 77389.0], [55.5, 77389.0], [55.6, 77389.0], [55.7, 77389.0], [55.8, 77389.0], [55.9, 77389.0], [56.0, 77389.0], [56.1, 77389.0], [56.2, 77389.0], [56.3, 77389.0], [56.4, 77389.0], [56.5, 77389.0], [56.6, 77389.0], [56.7, 77389.0], [56.8, 77389.0], [56.9, 77389.0], [57.0, 77389.0], [57.1, 77389.0], [57.2, 77389.0], [57.3, 77389.0], [57.4, 77389.0], [57.5, 77389.0], [57.6, 77389.0], [57.7, 77389.0], [57.8, 77389.0], [57.9, 77389.0], [58.0, 77389.0], [58.1, 77389.0], [58.2, 77389.0], [58.3, 77389.0], [58.4, 77389.0], [58.5, 77389.0], [58.6, 77389.0], [58.7, 77389.0], [58.8, 77389.0], [58.9, 77389.0], [59.0, 77389.0], [59.1, 77389.0], [59.2, 77389.0], [59.3, 77389.0], [59.4, 77389.0], [59.5, 77389.0], [59.6, 77389.0], [59.7, 77389.0], [59.8, 77389.0], [59.9, 77389.0], [60.0, 77389.0], [60.1, 77389.0], [60.2, 77389.0], [60.3, 77389.0], [60.4, 77389.0], [60.5, 77389.0], [60.6, 77389.0], [60.7, 77389.0], [60.8, 77389.0], [60.9, 77389.0], [61.0, 77389.0], [61.1, 77389.0], [61.2, 77389.0], [61.3, 77389.0], [61.4, 77389.0], [61.5, 77389.0], [61.6, 77389.0], [61.7, 77389.0], [61.8, 77389.0], [61.9, 77389.0], [62.0, 77389.0], [62.1, 77389.0], [62.2, 77389.0], [62.3, 77389.0], [62.4, 77389.0], [62.5, 77389.0], [62.6, 77389.0], [62.7, 77389.0], [62.8, 77389.0], [62.9, 77389.0], [63.0, 77389.0], [63.1, 77389.0], [63.2, 77389.0], [63.3, 77389.0], [63.4, 77389.0], [63.5, 77389.0], [63.6, 77389.0], [63.7, 77389.0], [63.8, 77389.0], [63.9, 77389.0], [64.0, 77389.0], [64.1, 77389.0], [64.2, 77389.0], [64.3, 77389.0], [64.4, 77389.0], [64.5, 77389.0], [64.6, 77389.0], [64.7, 77389.0], [64.8, 77389.0], [64.9, 77389.0], [65.0, 77389.0], [65.1, 77389.0], [65.2, 77389.0], [65.3, 77389.0], [65.4, 77389.0], [65.5, 77389.0], [65.6, 77389.0], [65.7, 77389.0], [65.8, 77389.0], [65.9, 77389.0], [66.0, 77389.0], [66.1, 77389.0], [66.2, 77389.0], [66.3, 77389.0], [66.4, 77389.0], [66.5, 77389.0], [66.6, 77389.0], [66.7, 77389.0], [66.8, 77389.0], [66.9, 77389.0], [67.0, 77389.0], [67.1, 77389.0], [67.2, 77389.0], [67.3, 77389.0], [67.4, 77389.0], [67.5, 77389.0], [67.6, 77389.0], [67.7, 77389.0], [67.8, 77389.0], [67.9, 77389.0], [68.0, 77389.0], [68.1, 77389.0], [68.2, 77389.0], [68.3, 77389.0], [68.4, 77389.0], [68.5, 77389.0], [68.6, 77389.0], [68.7, 77389.0], [68.8, 77389.0], [68.9, 77389.0], [69.0, 77389.0], [69.1, 77389.0], [69.2, 77389.0], [69.3, 77389.0], [69.4, 77389.0], [69.5, 77389.0], [69.6, 77389.0], [69.7, 77389.0], [69.8, 77389.0], [69.9, 77389.0], [70.0, 77389.0], [70.1, 77389.0], [70.2, 77389.0], [70.3, 77389.0], [70.4, 77389.0], [70.5, 77389.0], [70.6, 77389.0], [70.7, 77389.0], [70.8, 77389.0], [70.9, 77389.0], [71.0, 77389.0], [71.1, 77389.0], [71.2, 77389.0], [71.3, 77389.0], [71.4, 77389.0], [71.5, 77389.0], [71.6, 77389.0], [71.7, 77389.0], [71.8, 77389.0], [71.9, 77389.0], [72.0, 77389.0], [72.1, 77389.0], [72.2, 77389.0], [72.3, 77389.0], [72.4, 77389.0], [72.5, 77389.0], [72.6, 77389.0], [72.7, 77389.0], [72.8, 77389.0], [72.9, 77389.0], [73.0, 77389.0], [73.1, 77389.0], [73.2, 77389.0], [73.3, 77389.0], [73.4, 77389.0], [73.5, 77389.0], [73.6, 77389.0], [73.7, 77389.0], [73.8, 77389.0], [73.9, 77389.0], [74.0, 77389.0], [74.1, 77389.0], [74.2, 77389.0], [74.3, 77389.0], [74.4, 77389.0], [74.5, 77389.0], [74.6, 77389.0], [74.7, 77389.0], [74.8, 77389.0], [74.9, 77389.0], [75.0, 77389.0], [75.1, 77389.0], [75.2, 77389.0], [75.3, 77389.0], [75.4, 77389.0], [75.5, 77389.0], [75.6, 77389.0], [75.7, 77389.0], [75.8, 77389.0], [75.9, 77389.0], [76.0, 77389.0], [76.1, 77389.0], [76.2, 77389.0], [76.3, 77389.0], [76.4, 77389.0], [76.5, 77389.0], [76.6, 77389.0], [76.7, 77389.0], [76.8, 77389.0], [76.9, 77389.0], [77.0, 77389.0], [77.1, 77389.0], [77.2, 77389.0], [77.3, 77389.0], [77.4, 77389.0], [77.5, 77389.0], [77.6, 77389.0], [77.7, 77389.0], [77.8, 77389.0], [77.9, 77389.0], [78.0, 77389.0], [78.1, 77389.0], [78.2, 77389.0], [78.3, 77389.0], [78.4, 77389.0], [78.5, 77389.0], [78.6, 77389.0], [78.7, 77389.0], [78.8, 77389.0], [78.9, 77389.0], [79.0, 77389.0], [79.1, 77389.0], [79.2, 77389.0], [79.3, 77389.0], [79.4, 77389.0], [79.5, 77389.0], [79.6, 77389.0], [79.7, 77389.0], [79.8, 77389.0], [79.9, 77389.0], [80.0, 77389.0], [80.1, 77389.0], [80.2, 77389.0], [80.3, 77389.0], [80.4, 77389.0], [80.5, 77389.0], [80.6, 77389.0], [80.7, 77389.0], [80.8, 77389.0], [80.9, 77389.0], [81.0, 77389.0], [81.1, 77389.0], [81.2, 77389.0], [81.3, 77389.0], [81.4, 77389.0], [81.5, 77389.0], [81.6, 77389.0], [81.7, 77389.0], [81.8, 77389.0], [81.9, 77389.0], [82.0, 77389.0], [82.1, 77389.0], [82.2, 77389.0], [82.3, 77389.0], [82.4, 77389.0], [82.5, 77389.0], [82.6, 77389.0], [82.7, 77389.0], [82.8, 77389.0], [82.9, 77389.0], [83.0, 77389.0], [83.1, 77389.0], [83.2, 77389.0], [83.3, 77389.0], [83.4, 77389.0], [83.5, 77389.0], [83.6, 77389.0], [83.7, 77389.0], [83.8, 77389.0], [83.9, 77389.0], [84.0, 77389.0], [84.1, 77389.0], [84.2, 77389.0], [84.3, 77389.0], [84.4, 77389.0], [84.5, 77389.0], [84.6, 77389.0], [84.7, 77389.0], [84.8, 77389.0], [84.9, 77389.0], [85.0, 77389.0], [85.1, 77389.0], [85.2, 77389.0], [85.3, 77389.0], [85.4, 77389.0], [85.5, 77389.0], [85.6, 77389.0], [85.7, 77389.0], [85.8, 77389.0], [85.9, 77389.0], [86.0, 77389.0], [86.1, 77389.0], [86.2, 77389.0], [86.3, 77389.0], [86.4, 77389.0], [86.5, 77389.0], [86.6, 77389.0], [86.7, 77389.0], [86.8, 77389.0], [86.9, 77389.0], [87.0, 77389.0], [87.1, 77389.0], [87.2, 77389.0], [87.3, 77389.0], [87.4, 77389.0], [87.5, 77389.0], [87.6, 77389.0], [87.7, 77389.0], [87.8, 77389.0], [87.9, 77389.0], [88.0, 77389.0], [88.1, 77389.0], [88.2, 77389.0], [88.3, 77389.0], [88.4, 77389.0], [88.5, 77389.0], [88.6, 77389.0], [88.7, 77389.0], [88.8, 77389.0], [88.9, 77389.0], [89.0, 77389.0], [89.1, 77389.0], [89.2, 77389.0], [89.3, 77389.0], [89.4, 77389.0], [89.5, 77389.0], [89.6, 77389.0], [89.7, 77389.0], [89.8, 77389.0], [89.9, 77389.0], [90.0, 77389.0], [90.1, 77389.0], [90.2, 77389.0], [90.3, 77389.0], [90.4, 77389.0], [90.5, 77389.0], [90.6, 77389.0], [90.7, 77389.0], [90.8, 77389.0], [90.9, 77389.0], [91.0, 77389.0], [91.1, 77389.0], [91.2, 77389.0], [91.3, 77389.0], [91.4, 77389.0], [91.5, 77389.0], [91.6, 77389.0], [91.7, 77389.0], [91.8, 77389.0], [91.9, 77389.0], [92.0, 77389.0], [92.1, 77389.0], [92.2, 77389.0], [92.3, 77389.0], [92.4, 77389.0], [92.5, 77389.0], [92.6, 77389.0], [92.7, 77389.0], [92.8, 77389.0], [92.9, 77389.0], [93.0, 77389.0], [93.1, 77389.0], [93.2, 77389.0], [93.3, 77389.0], [93.4, 77389.0], [93.5, 77389.0], [93.6, 77389.0], [93.7, 77389.0], [93.8, 77389.0], [93.9, 77389.0], [94.0, 77389.0], [94.1, 77389.0], [94.2, 77389.0], [94.3, 77389.0], [94.4, 77389.0], [94.5, 77389.0], [94.6, 77389.0], [94.7, 77389.0], [94.8, 77389.0], [94.9, 77389.0], [95.0, 77389.0], [95.1, 77389.0], [95.2, 77389.0], [95.3, 77389.0], [95.4, 77389.0], [95.5, 77389.0], [95.6, 77389.0], [95.7, 77389.0], [95.8, 77389.0], [95.9, 77389.0], [96.0, 77389.0], [96.1, 77389.0], [96.2, 77389.0], [96.3, 77389.0], [96.4, 77389.0], [96.5, 77389.0], [96.6, 77389.0], [96.7, 77389.0], [96.8, 77389.0], [96.9, 77389.0], [97.0, 77389.0], [97.1, 77389.0], [97.2, 77389.0], [97.3, 77389.0], [97.4, 77389.0], [97.5, 77389.0], [97.6, 77389.0], [97.7, 77389.0], [97.8, 77389.0], [97.9, 77389.0], [98.0, 77389.0], [98.1, 77389.0], [98.2, 77389.0], [98.3, 77389.0], [98.4, 77389.0], [98.5, 77389.0], [98.6, 77389.0], [98.7, 77389.0], [98.8, 77389.0], [98.9, 77389.0], [99.0, 77389.0], [99.1, 77389.0], [99.2, 77389.0], [99.3, 77389.0], [99.4, 77389.0], [99.5, 77389.0], [99.6, 77389.0], [99.7, 77389.0], [99.8, 77389.0], [99.9, 77389.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[0.0, 6922.0], [0.1, 6922.0], [0.2, 6922.0], [0.3, 6922.0], [0.4, 10520.0], [0.5, 10520.0], [0.6, 10520.0], [0.7, 10650.0], [0.8, 10650.0], [0.9, 10650.0], [1.0, 10796.0], [1.1, 10796.0], [1.2, 10796.0], [1.3, 10796.0], [1.4, 11051.0], [1.5, 11051.0], [1.6, 11051.0], [1.7, 11061.0], [1.8, 11061.0], [1.9, 11061.0], [2.0, 11062.0], [2.1, 11062.0], [2.2, 11062.0], [2.3, 11062.0], [2.4, 11115.0], [2.5, 11115.0], [2.6, 11115.0], [2.7, 11148.0], [2.8, 11148.0], [2.9, 11148.0], [3.0, 11203.0], [3.1, 11203.0], [3.2, 11203.0], [3.3, 11203.0], [3.4, 11203.0], [3.5, 11203.0], [3.6, 11203.0], [3.7, 11221.0], [3.8, 11221.0], [3.9, 11221.0], [4.0, 11223.0], [4.1, 11223.0], [4.2, 11223.0], [4.3, 11223.0], [4.4, 11239.0], [4.5, 11239.0], [4.6, 11239.0], [4.7, 11250.0], [4.8, 11250.0], [4.9, 11250.0], [5.0, 11259.0], [5.1, 11259.0], [5.2, 11259.0], [5.3, 11259.0], [5.4, 11268.0], [5.5, 11268.0], [5.6, 11268.0], [5.7, 11282.0], [5.8, 11282.0], [5.9, 11282.0], [6.0, 11317.0], [6.1, 11317.0], [6.2, 11317.0], [6.3, 11317.0], [6.4, 11338.0], [6.5, 11338.0], [6.6, 11338.0], [6.7, 11385.0], [6.8, 11385.0], [6.9, 11385.0], [7.0, 11426.0], [7.1, 11426.0], [7.2, 11426.0], [7.3, 11426.0], [7.4, 11467.0], [7.5, 11467.0], [7.6, 11467.0], [7.7, 11471.0], [7.8, 11471.0], [7.9, 11471.0], [8.0, 11479.0], [8.1, 11479.0], [8.2, 11479.0], [8.3, 11479.0], [8.4, 11494.0], [8.5, 11494.0], [8.6, 11494.0], [8.7, 11578.0], [8.8, 11578.0], [8.9, 11578.0], [9.0, 11579.0], [9.1, 11579.0], [9.2, 11579.0], [9.3, 11579.0], [9.4, 11596.0], [9.5, 11596.0], [9.6, 11596.0], [9.7, 11628.0], [9.8, 11628.0], [9.9, 11628.0], [10.0, 11639.0], [10.1, 11639.0], [10.2, 11639.0], [10.3, 11639.0], [10.4, 11654.0], [10.5, 11654.0], [10.6, 11654.0], [10.7, 11661.0], [10.8, 11661.0], [10.9, 11661.0], [11.0, 11661.0], [11.1, 11669.0], [11.2, 11669.0], [11.3, 11669.0], [11.4, 11700.0], [11.5, 11700.0], [11.6, 11700.0], [11.7, 11767.0], [11.8, 11767.0], [11.9, 11767.0], [12.0, 11767.0], [12.1, 11777.0], [12.2, 11777.0], [12.3, 11777.0], [12.4, 11799.0], [12.5, 11799.0], [12.6, 11799.0], [12.7, 11820.0], [12.8, 11820.0], [12.9, 11820.0], [13.0, 11820.0], [13.1, 11826.0], [13.2, 11826.0], [13.3, 11826.0], [13.4, 11830.0], [13.5, 11830.0], [13.6, 11830.0], [13.7, 11844.0], [13.8, 11844.0], [13.9, 11844.0], [14.0, 11844.0], [14.1, 11894.0], [14.2, 11894.0], [14.3, 11894.0], [14.4, 11908.0], [14.5, 11908.0], [14.6, 11908.0], [14.7, 11915.0], [14.8, 11915.0], [14.9, 11915.0], [15.0, 11915.0], [15.1, 11925.0], [15.2, 11925.0], [15.3, 11925.0], [15.4, 12005.0], [15.5, 12005.0], [15.6, 12005.0], [15.7, 12023.0], [15.8, 12023.0], [15.9, 12023.0], [16.0, 12023.0], [16.1, 12026.0], [16.2, 12026.0], [16.3, 12026.0], [16.4, 12038.0], [16.5, 12038.0], [16.6, 12038.0], [16.7, 12052.0], [16.8, 12052.0], [16.9, 12052.0], [17.0, 12052.0], [17.1, 12080.0], [17.2, 12080.0], [17.3, 12080.0], [17.4, 12153.0], [17.5, 12153.0], [17.6, 12153.0], [17.7, 12156.0], [17.8, 12156.0], [17.9, 12156.0], [18.0, 12156.0], [18.1, 12164.0], [18.2, 12164.0], [18.3, 12164.0], [18.4, 12194.0], [18.5, 12194.0], [18.6, 12194.0], [18.7, 12203.0], [18.8, 12203.0], [18.9, 12203.0], [19.0, 12282.0], [19.1, 12282.0], [19.2, 12282.0], [19.3, 12282.0], [19.4, 12379.0], [19.5, 12379.0], [19.6, 12379.0], [19.7, 12448.0], [19.8, 12448.0], [19.9, 12448.0], [20.0, 12452.0], [20.1, 12452.0], [20.2, 12452.0], [20.3, 12452.0], [20.4, 12545.0], [20.5, 12545.0], [20.6, 12545.0], [20.7, 12673.0], [20.8, 12673.0], [20.9, 12673.0], [21.0, 12750.0], [21.1, 12750.0], [21.2, 12750.0], [21.3, 12750.0], [21.4, 12888.0], [21.5, 12888.0], [21.6, 12888.0], [21.7, 13216.0], [21.8, 13216.0], [21.9, 13216.0], [22.0, 13244.0], [22.1, 13244.0], [22.2, 13244.0], [22.3, 13244.0], [22.4, 13378.0], [22.5, 13378.0], [22.6, 13378.0], [22.7, 13387.0], [22.8, 13387.0], [22.9, 13387.0], [23.0, 15569.0], [23.1, 15569.0], [23.2, 15569.0], [23.3, 15569.0], [23.4, 15676.0], [23.5, 15676.0], [23.6, 15676.0], [23.7, 15764.0], [23.8, 15764.0], [23.9, 15764.0], [24.0, 15769.0], [24.1, 15769.0], [24.2, 15769.0], [24.3, 15769.0], [24.4, 15826.0], [24.5, 15826.0], [24.6, 15826.0], [24.7, 16433.0], [24.8, 16433.0], [24.9, 16433.0], [25.0, 16934.0], [25.1, 16934.0], [25.2, 16934.0], [25.3, 16934.0], [25.4, 17473.0], [25.5, 17473.0], [25.6, 17473.0], [25.7, 17704.0], [25.8, 17704.0], [25.9, 17704.0], [26.0, 17838.0], [26.1, 17838.0], [26.2, 17838.0], [26.3, 17838.0], [26.4, 18058.0], [26.5, 18058.0], [26.6, 18058.0], [26.7, 18236.0], [26.8, 18236.0], [26.9, 18236.0], [27.0, 18262.0], [27.1, 18262.0], [27.2, 18262.0], [27.3, 18262.0], [27.4, 18395.0], [27.5, 18395.0], [27.6, 18395.0], [27.7, 18500.0], [27.8, 18500.0], [27.9, 18500.0], [28.0, 18547.0], [28.1, 18547.0], [28.2, 18547.0], [28.3, 18547.0], [28.4, 18551.0], [28.5, 18551.0], [28.6, 18551.0], [28.7, 18660.0], [28.8, 18660.0], [28.9, 18660.0], [29.0, 18673.0], [29.1, 18673.0], [29.2, 18673.0], [29.3, 18673.0], [29.4, 18762.0], [29.5, 18762.0], [29.6, 18762.0], [29.7, 18788.0], [29.8, 18788.0], [29.9, 18788.0], [30.0, 18790.0], [30.1, 18790.0], [30.2, 18790.0], [30.3, 18790.0], [30.4, 18815.0], [30.5, 18815.0], [30.6, 18815.0], [30.7, 18833.0], [30.8, 18833.0], [30.9, 18833.0], [31.0, 18847.0], [31.1, 18847.0], [31.2, 18847.0], [31.3, 18847.0], [31.4, 18856.0], [31.5, 18856.0], [31.6, 18856.0], [31.7, 18866.0], [31.8, 18866.0], [31.9, 18866.0], [32.0, 18883.0], [32.1, 18883.0], [32.2, 18883.0], [32.3, 18883.0], [32.4, 18887.0], [32.5, 18887.0], [32.6, 18887.0], [32.7, 18914.0], [32.8, 18914.0], [32.9, 18914.0], [33.0, 18920.0], [33.1, 18920.0], [33.2, 18920.0], [33.3, 18920.0], [33.4, 18927.0], [33.5, 18927.0], [33.6, 18927.0], [33.7, 18933.0], [33.8, 18933.0], [33.9, 18933.0], [34.0, 18946.0], [34.1, 18946.0], [34.2, 18946.0], [34.3, 18946.0], [34.4, 19010.0], [34.5, 19010.0], [34.6, 19010.0], [34.7, 19139.0], [34.8, 19139.0], [34.9, 19139.0], [35.0, 19158.0], [35.1, 19158.0], [35.2, 19158.0], [35.3, 19158.0], [35.4, 19175.0], [35.5, 19175.0], [35.6, 19175.0], [35.7, 19247.0], [35.8, 19247.0], [35.9, 19247.0], [36.0, 19262.0], [36.1, 19262.0], [36.2, 19262.0], [36.3, 19262.0], [36.4, 19314.0], [36.5, 19314.0], [36.6, 19314.0], [36.7, 19338.0], [36.8, 19338.0], [36.9, 19338.0], [37.0, 19396.0], [37.1, 19396.0], [37.2, 19396.0], [37.3, 19396.0], [37.4, 19411.0], [37.5, 19411.0], [37.6, 19411.0], [37.7, 19453.0], [37.8, 19453.0], [37.9, 19453.0], [38.0, 19568.0], [38.1, 19568.0], [38.2, 19568.0], [38.3, 19568.0], [38.4, 19629.0], [38.5, 19629.0], [38.6, 19629.0], [38.7, 19634.0], [38.8, 19634.0], [38.9, 19634.0], [39.0, 19737.0], [39.1, 19737.0], [39.2, 19737.0], [39.3, 19737.0], [39.4, 19802.0], [39.5, 19802.0], [39.6, 19802.0], [39.7, 19835.0], [39.8, 19835.0], [39.9, 19835.0], [40.0, 19835.0], [40.1, 19836.0], [40.2, 19836.0], [40.3, 19836.0], [40.4, 19891.0], [40.5, 19891.0], [40.6, 19891.0], [40.7, 19895.0], [40.8, 19895.0], [40.9, 19895.0], [41.0, 19895.0], [41.1, 19898.0], [41.2, 19898.0], [41.3, 19898.0], [41.4, 19919.0], [41.5, 19919.0], [41.6, 19919.0], [41.7, 19920.0], [41.8, 19920.0], [41.9, 19920.0], [42.0, 19920.0], [42.1, 19933.0], [42.2, 19933.0], [42.3, 19933.0], [42.4, 19946.0], [42.5, 19946.0], [42.6, 19946.0], [42.7, 19963.0], [42.8, 19963.0], [42.9, 19963.0], [43.0, 19963.0], [43.1, 19985.0], [43.2, 19985.0], [43.3, 19985.0], [43.4, 20049.0], [43.5, 20049.0], [43.6, 20049.0], [43.7, 20054.0], [43.8, 20054.0], [43.9, 20054.0], [44.0, 20054.0], [44.1, 20086.0], [44.2, 20086.0], [44.3, 20086.0], [44.4, 20105.0], [44.5, 20105.0], [44.6, 20105.0], [44.7, 20126.0], [44.8, 20126.0], [44.9, 20126.0], [45.0, 20126.0], [45.1, 20180.0], [45.2, 20180.0], [45.3, 20180.0], [45.4, 20219.0], [45.5, 20219.0], [45.6, 20219.0], [45.7, 20269.0], [45.8, 20269.0], [45.9, 20269.0], [46.0, 20269.0], [46.1, 20319.0], [46.2, 20319.0], [46.3, 20319.0], [46.4, 20432.0], [46.5, 20432.0], [46.6, 20432.0], [46.7, 20453.0], [46.8, 20453.0], [46.9, 20453.0], [47.0, 20453.0], [47.1, 20461.0], [47.2, 20461.0], [47.3, 20461.0], [47.4, 20494.0], [47.5, 20494.0], [47.6, 20494.0], [47.7, 20510.0], [47.8, 20510.0], [47.9, 20510.0], [48.0, 20510.0], [48.1, 20614.0], [48.2, 20614.0], [48.3, 20614.0], [48.4, 20618.0], [48.5, 20618.0], [48.6, 20618.0], [48.7, 20758.0], [48.8, 20758.0], [48.9, 20758.0], [49.0, 20758.0], [49.1, 20811.0], [49.2, 20811.0], [49.3, 20811.0], [49.4, 20848.0], [49.5, 20848.0], [49.6, 20848.0], [49.7, 21063.0], [49.8, 21063.0], [49.9, 21063.0], [50.0, 21063.0], [50.1, 21102.0], [50.2, 21102.0], [50.3, 21102.0], [50.4, 21214.0], [50.5, 21214.0], [50.6, 21214.0], [50.7, 21241.0], [50.8, 21241.0], [50.9, 21241.0], [51.0, 21241.0], [51.1, 21350.0], [51.2, 21350.0], [51.3, 21350.0], [51.4, 21428.0], [51.5, 21428.0], [51.6, 21428.0], [51.7, 21476.0], [51.8, 21476.0], [51.9, 21476.0], [52.0, 21476.0], [52.1, 21488.0], [52.2, 21488.0], [52.3, 21488.0], [52.4, 21507.0], [52.5, 21507.0], [52.6, 21507.0], [52.7, 21523.0], [52.8, 21523.0], [52.9, 21523.0], [53.0, 21523.0], [53.1, 21526.0], [53.2, 21526.0], [53.3, 21526.0], [53.4, 21560.0], [53.5, 21560.0], [53.6, 21560.0], [53.7, 21602.0], [53.8, 21602.0], [53.9, 21602.0], [54.0, 21602.0], [54.1, 21678.0], [54.2, 21678.0], [54.3, 21678.0], [54.4, 21716.0], [54.5, 21716.0], [54.6, 21716.0], [54.7, 21747.0], [54.8, 21747.0], [54.9, 21747.0], [55.0, 21747.0], [55.1, 21749.0], [55.2, 21749.0], [55.3, 21749.0], [55.4, 21759.0], [55.5, 21759.0], [55.6, 21759.0], [55.7, 21794.0], [55.8, 21794.0], [55.9, 21794.0], [56.0, 21794.0], [56.1, 21803.0], [56.2, 21803.0], [56.3, 21803.0], [56.4, 21838.0], [56.5, 21838.0], [56.6, 21838.0], [56.7, 21894.0], [56.8, 21894.0], [56.9, 21894.0], [57.0, 21894.0], [57.1, 21942.0], [57.2, 21942.0], [57.3, 21942.0], [57.4, 21965.0], [57.5, 21965.0], [57.6, 21965.0], [57.7, 21977.0], [57.8, 21977.0], [57.9, 21977.0], [58.0, 21977.0], [58.1, 22030.0], [58.2, 22030.0], [58.3, 22030.0], [58.4, 22032.0], [58.5, 22032.0], [58.6, 22032.0], [58.7, 22039.0], [58.8, 22039.0], [58.9, 22039.0], [59.0, 22039.0], [59.1, 22075.0], [59.2, 22075.0], [59.3, 22075.0], [59.4, 22080.0], [59.5, 22080.0], [59.6, 22080.0], [59.7, 22103.0], [59.8, 22103.0], [59.9, 22103.0], [60.0, 22103.0], [60.1, 22188.0], [60.2, 22188.0], [60.3, 22188.0], [60.4, 22329.0], [60.5, 22329.0], [60.6, 22329.0], [60.7, 22406.0], [60.8, 22406.0], [60.9, 22406.0], [61.0, 22406.0], [61.1, 22412.0], [61.2, 22412.0], [61.3, 22412.0], [61.4, 22417.0], [61.5, 22417.0], [61.6, 22417.0], [61.7, 22429.0], [61.8, 22429.0], [61.9, 22429.0], [62.0, 22429.0], [62.1, 22542.0], [62.2, 22542.0], [62.3, 22542.0], [62.4, 22847.0], [62.5, 22847.0], [62.6, 22847.0], [62.7, 23814.0], [62.8, 23814.0], [62.9, 23814.0], [63.0, 23814.0], [63.1, 23818.0], [63.2, 23818.0], [63.3, 23818.0], [63.4, 23868.0], [63.5, 23868.0], [63.6, 23868.0], [63.7, 23878.0], [63.8, 23878.0], [63.9, 23878.0], [64.0, 23878.0], [64.1, 23882.0], [64.2, 23882.0], [64.3, 23882.0], [64.4, 24002.0], [64.5, 24002.0], [64.6, 24002.0], [64.7, 24072.0], [64.8, 24072.0], [64.9, 24072.0], [65.0, 24072.0], [65.1, 24087.0], [65.2, 24087.0], [65.3, 24087.0], [65.4, 24104.0], [65.5, 24104.0], [65.6, 24104.0], [65.7, 24126.0], [65.8, 24126.0], [65.9, 24126.0], [66.0, 24126.0], [66.1, 24165.0], [66.2, 24165.0], [66.3, 24165.0], [66.4, 24165.0], [66.5, 24165.0], [66.6, 24165.0], [66.7, 24268.0], [66.8, 24268.0], [66.9, 24268.0], [67.0, 24268.0], [67.1, 24270.0], [67.2, 24270.0], [67.3, 24270.0], [67.4, 24272.0], [67.5, 24272.0], [67.6, 24272.0], [67.7, 24273.0], [67.8, 24273.0], [67.9, 24273.0], [68.0, 24273.0], [68.1, 24276.0], [68.2, 24276.0], [68.3, 24276.0], [68.4, 24282.0], [68.5, 24282.0], [68.6, 24282.0], [68.7, 24285.0], [68.8, 24285.0], [68.9, 24285.0], [69.0, 24285.0], [69.1, 24301.0], [69.2, 24301.0], [69.3, 24301.0], [69.4, 24304.0], [69.5, 24304.0], [69.6, 24304.0], [69.7, 24317.0], [69.8, 24317.0], [69.9, 24317.0], [70.0, 24317.0], [70.1, 24333.0], [70.2, 24333.0], [70.3, 24333.0], [70.4, 24355.0], [70.5, 24355.0], [70.6, 24355.0], [70.7, 24359.0], [70.8, 24359.0], [70.9, 24359.0], [71.0, 24359.0], [71.1, 24363.0], [71.2, 24363.0], [71.3, 24363.0], [71.4, 24367.0], [71.5, 24367.0], [71.6, 24367.0], [71.7, 24372.0], [71.8, 24372.0], [71.9, 24372.0], [72.0, 24372.0], [72.1, 24387.0], [72.2, 24387.0], [72.3, 24387.0], [72.4, 24397.0], [72.5, 24397.0], [72.6, 24397.0], [72.7, 24412.0], [72.8, 24412.0], [72.9, 24412.0], [73.0, 24412.0], [73.1, 24430.0], [73.2, 24430.0], [73.3, 24430.0], [73.4, 24437.0], [73.5, 24437.0], [73.6, 24437.0], [73.7, 24442.0], [73.8, 24442.0], [73.9, 24442.0], [74.0, 24442.0], [74.1, 24460.0], [74.2, 24460.0], [74.3, 24460.0], [74.4, 24461.0], [74.5, 24461.0], [74.6, 24461.0], [74.7, 24467.0], [74.8, 24467.0], [74.9, 24467.0], [75.0, 24467.0], [75.1, 24468.0], [75.2, 24468.0], [75.3, 24468.0], [75.4, 24473.0], [75.5, 24473.0], [75.6, 24473.0], [75.7, 24484.0], [75.8, 24484.0], [75.9, 24484.0], [76.0, 24484.0], [76.1, 24495.0], [76.2, 24495.0], [76.3, 24495.0], [76.4, 24497.0], [76.5, 24497.0], [76.6, 24497.0], [76.7, 24499.0], [76.8, 24499.0], [76.9, 24499.0], [77.0, 24512.0], [77.1, 24512.0], [77.2, 24512.0], [77.3, 24512.0], [77.4, 24514.0], [77.5, 24514.0], [77.6, 24514.0], [77.7, 24519.0], [77.8, 24519.0], [77.9, 24519.0], [78.0, 24519.0], [78.1, 24519.0], [78.2, 24519.0], [78.3, 24519.0], [78.4, 24525.0], [78.5, 24525.0], [78.6, 24525.0], [78.7, 24537.0], [78.8, 24537.0], [78.9, 24537.0], [79.0, 24586.0], [79.1, 24586.0], [79.2, 24586.0], [79.3, 24586.0], [79.4, 24602.0], [79.5, 24602.0], [79.6, 24602.0], [79.7, 24604.0], [79.8, 24604.0], [79.9, 24604.0], [80.0, 24612.0], [80.1, 24612.0], [80.2, 24612.0], [80.3, 24612.0], [80.4, 24617.0], [80.5, 24617.0], [80.6, 24617.0], [80.7, 24630.0], [80.8, 24630.0], [80.9, 24630.0], [81.0, 24641.0], [81.1, 24641.0], [81.2, 24641.0], [81.3, 24641.0], [81.4, 24667.0], [81.5, 24667.0], [81.6, 24667.0], [81.7, 24673.0], [81.8, 24673.0], [81.9, 24673.0], [82.0, 24725.0], [82.1, 24725.0], [82.2, 24725.0], [82.3, 24725.0], [82.4, 24750.0], [82.5, 24750.0], [82.6, 24750.0], [82.7, 24783.0], [82.8, 24783.0], [82.9, 24783.0], [83.0, 24785.0], [83.1, 24785.0], [83.2, 24785.0], [83.3, 24785.0], [83.4, 24817.0], [83.5, 24817.0], [83.6, 24817.0], [83.7, 24832.0], [83.8, 24832.0], [83.9, 24832.0], [84.0, 24833.0], [84.1, 24833.0], [84.2, 24833.0], [84.3, 24833.0], [84.4, 24885.0], [84.5, 24885.0], [84.6, 24885.0], [84.7, 24899.0], [84.8, 24899.0], [84.9, 24899.0], [85.0, 24916.0], [85.1, 24916.0], [85.2, 24916.0], [85.3, 24916.0], [85.4, 24916.0], [85.5, 24916.0], [85.6, 24916.0], [85.7, 24928.0], [85.8, 24928.0], [85.9, 24928.0], [86.0, 24937.0], [86.1, 24937.0], [86.2, 24937.0], [86.3, 24937.0], [86.4, 24941.0], [86.5, 24941.0], [86.6, 24941.0], [86.7, 24942.0], [86.8, 24942.0], [86.9, 24942.0], [87.0, 24944.0], [87.1, 24944.0], [87.2, 24944.0], [87.3, 24944.0], [87.4, 24976.0], [87.5, 24976.0], [87.6, 24976.0], [87.7, 24978.0], [87.8, 24978.0], [87.9, 24978.0], [88.0, 24983.0], [88.1, 24983.0], [88.2, 24983.0], [88.3, 24983.0], [88.4, 24984.0], [88.5, 24984.0], [88.6, 24984.0], [88.7, 24985.0], [88.8, 24985.0], [88.9, 24985.0], [89.0, 24985.0], [89.1, 24985.0], [89.2, 24985.0], [89.3, 24985.0], [89.4, 24992.0], [89.5, 24992.0], [89.6, 24992.0], [89.7, 24997.0], [89.8, 24997.0], [89.9, 24997.0], [90.0, 25016.0], [90.1, 25016.0], [90.2, 25016.0], [90.3, 25016.0], [90.4, 25022.0], [90.5, 25022.0], [90.6, 25022.0], [90.7, 25023.0], [90.8, 25023.0], [90.9, 25023.0], [91.0, 25026.0], [91.1, 25026.0], [91.2, 25026.0], [91.3, 25026.0], [91.4, 25038.0], [91.5, 25038.0], [91.6, 25038.0], [91.7, 25042.0], [91.8, 25042.0], [91.9, 25042.0], [92.0, 25056.0], [92.1, 25056.0], [92.2, 25056.0], [92.3, 25056.0], [92.4, 25068.0], [92.5, 25068.0], [92.6, 25068.0], [92.7, 25078.0], [92.8, 25078.0], [92.9, 25078.0], [93.0, 25090.0], [93.1, 25090.0], [93.2, 25090.0], [93.3, 25090.0], [93.4, 25097.0], [93.5, 25097.0], [93.6, 25097.0], [93.7, 25111.0], [93.8, 25111.0], [93.9, 25111.0], [94.0, 25113.0], [94.1, 25113.0], [94.2, 25113.0], [94.3, 25113.0], [94.4, 25113.0], [94.5, 25113.0], [94.6, 25113.0], [94.7, 25115.0], [94.8, 25115.0], [94.9, 25115.0], [95.0, 25122.0], [95.1, 25122.0], [95.2, 25122.0], [95.3, 25122.0], [95.4, 25141.0], [95.5, 25141.0], [95.6, 25141.0], [95.7, 25145.0], [95.8, 25145.0], [95.9, 25145.0], [96.0, 25164.0], [96.1, 25164.0], [96.2, 25164.0], [96.3, 25164.0], [96.4, 25188.0], [96.5, 25188.0], [96.6, 25188.0], [96.7, 25202.0], [96.8, 25202.0], [96.9, 25202.0], [97.0, 25213.0], [97.1, 25213.0], [97.2, 25213.0], [97.3, 25213.0], [97.4, 25219.0], [97.5, 25219.0], [97.6, 25219.0], [97.7, 25245.0], [97.8, 25245.0], [97.9, 25245.0], [98.0, 25331.0], [98.1, 25331.0], [98.2, 25331.0], [98.3, 25331.0], [98.4, 25334.0], [98.5, 25334.0], [98.6, 25334.0], [98.7, 32256.0], [98.8, 32256.0], [98.9, 32256.0], [99.0, 33268.0], [99.1, 33268.0], [99.2, 33268.0], [99.3, 33268.0], [99.4, 34267.0], [99.5, 34267.0], [99.6, 34267.0], [99.7, 34807.0], [99.8, 34807.0], [99.9, 34807.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[0.0, 4071.0], [0.1, 4071.0], [0.2, 4071.0], [0.3, 4071.0], [0.4, 4071.0], [0.5, 4071.0], [0.6, 4071.0], [0.7, 4071.0], [0.8, 4071.0], [0.9, 4071.0], [1.0, 4071.0], [1.1, 4071.0], [1.2, 4071.0], [1.3, 4071.0], [1.4, 4071.0], [1.5, 4071.0], [1.6, 4071.0], [1.7, 4071.0], [1.8, 4071.0], [1.9, 4071.0], [2.0, 4071.0], [2.1, 4071.0], [2.2, 4071.0], [2.3, 4071.0], [2.4, 4071.0], [2.5, 4071.0], [2.6, 4071.0], [2.7, 4071.0], [2.8, 4071.0], [2.9, 4071.0], [3.0, 4071.0], [3.1, 4071.0], [3.2, 4071.0], [3.3, 4071.0], [3.4, 4071.0], [3.5, 4071.0], [3.6, 4071.0], [3.7, 4071.0], [3.8, 4071.0], [3.9, 4071.0], [4.0, 4071.0], [4.1, 4071.0], [4.2, 4071.0], [4.3, 4071.0], [4.4, 4071.0], [4.5, 4071.0], [4.6, 4071.0], [4.7, 4071.0], [4.8, 4071.0], [4.9, 4071.0], [5.0, 4071.0], [5.1, 4071.0], [5.2, 4071.0], [5.3, 4071.0], [5.4, 4071.0], [5.5, 4071.0], [5.6, 4071.0], [5.7, 4071.0], [5.8, 4071.0], [5.9, 4071.0], [6.0, 4071.0], [6.1, 4071.0], [6.2, 4071.0], [6.3, 4071.0], [6.4, 4071.0], [6.5, 4071.0], [6.6, 4071.0], [6.7, 4071.0], [6.8, 4071.0], [6.9, 4071.0], [7.0, 4071.0], [7.1, 4071.0], [7.2, 4071.0], [7.3, 4071.0], [7.4, 4071.0], [7.5, 4071.0], [7.6, 4071.0], [7.7, 4071.0], [7.8, 4071.0], [7.9, 4071.0], [8.0, 4071.0], [8.1, 4071.0], [8.2, 4071.0], [8.3, 4071.0], [8.4, 4071.0], [8.5, 4071.0], [8.6, 4071.0], [8.7, 4071.0], [8.8, 4071.0], [8.9, 4071.0], [9.0, 4071.0], [9.1, 4071.0], [9.2, 4071.0], [9.3, 4071.0], [9.4, 4071.0], [9.5, 4071.0], [9.6, 4071.0], [9.7, 4071.0], [9.8, 4071.0], [9.9, 4071.0], [10.0, 4071.0], [10.1, 4071.0], [10.2, 4071.0], [10.3, 4071.0], [10.4, 4071.0], [10.5, 4071.0], [10.6, 4071.0], [10.7, 4071.0], [10.8, 4071.0], [10.9, 4071.0], [11.0, 4071.0], [11.1, 4071.0], [11.2, 4071.0], [11.3, 4071.0], [11.4, 4071.0], [11.5, 4071.0], [11.6, 4071.0], [11.7, 4071.0], [11.8, 4071.0], [11.9, 4071.0], [12.0, 4071.0], [12.1, 4071.0], [12.2, 4071.0], [12.3, 4071.0], [12.4, 4071.0], [12.5, 4071.0], [12.6, 4071.0], [12.7, 4071.0], [12.8, 4071.0], [12.9, 4071.0], [13.0, 4071.0], [13.1, 4071.0], [13.2, 4071.0], [13.3, 4071.0], [13.4, 4071.0], [13.5, 4071.0], [13.6, 4071.0], [13.7, 4071.0], [13.8, 4071.0], [13.9, 4071.0], [14.0, 4071.0], [14.1, 4071.0], [14.2, 4071.0], [14.3, 4071.0], [14.4, 4071.0], [14.5, 4071.0], [14.6, 4071.0], [14.7, 4071.0], [14.8, 4071.0], [14.9, 4071.0], [15.0, 4071.0], [15.1, 4071.0], [15.2, 4071.0], [15.3, 4071.0], [15.4, 4071.0], [15.5, 4071.0], [15.6, 4071.0], [15.7, 4071.0], [15.8, 4071.0], [15.9, 4071.0], [16.0, 4071.0], [16.1, 4071.0], [16.2, 4071.0], [16.3, 4071.0], [16.4, 4071.0], [16.5, 4071.0], [16.6, 4071.0], [16.7, 4071.0], [16.8, 4071.0], [16.9, 4071.0], [17.0, 4071.0], [17.1, 4071.0], [17.2, 4071.0], [17.3, 4071.0], [17.4, 4071.0], [17.5, 4071.0], [17.6, 4071.0], [17.7, 4071.0], [17.8, 4071.0], [17.9, 4071.0], [18.0, 4071.0], [18.1, 4071.0], [18.2, 4071.0], [18.3, 4071.0], [18.4, 4071.0], [18.5, 4071.0], [18.6, 4071.0], [18.7, 4071.0], [18.8, 4071.0], [18.9, 4071.0], [19.0, 4071.0], [19.1, 4071.0], [19.2, 4071.0], [19.3, 4071.0], [19.4, 4071.0], [19.5, 4071.0], [19.6, 4071.0], [19.7, 4071.0], [19.8, 4071.0], [19.9, 4071.0], [20.0, 4071.0], [20.1, 4071.0], [20.2, 4071.0], [20.3, 4071.0], [20.4, 4071.0], [20.5, 4071.0], [20.6, 4071.0], [20.7, 4071.0], [20.8, 4071.0], [20.9, 4071.0], [21.0, 4071.0], [21.1, 4071.0], [21.2, 4071.0], [21.3, 4071.0], [21.4, 4071.0], [21.5, 4071.0], [21.6, 4071.0], [21.7, 4071.0], [21.8, 4071.0], [21.9, 4071.0], [22.0, 4071.0], [22.1, 4071.0], [22.2, 4071.0], [22.3, 4071.0], [22.4, 4071.0], [22.5, 4071.0], [22.6, 4071.0], [22.7, 4071.0], [22.8, 4071.0], [22.9, 4071.0], [23.0, 4071.0], [23.1, 4071.0], [23.2, 4071.0], [23.3, 4071.0], [23.4, 4071.0], [23.5, 4071.0], [23.6, 4071.0], [23.7, 4071.0], [23.8, 4071.0], [23.9, 4071.0], [24.0, 4071.0], [24.1, 4071.0], [24.2, 4071.0], [24.3, 4071.0], [24.4, 4071.0], [24.5, 4071.0], [24.6, 4071.0], [24.7, 4071.0], [24.8, 4071.0], [24.9, 4071.0], [25.0, 4071.0], [25.1, 4071.0], [25.2, 4071.0], [25.3, 4071.0], [25.4, 4071.0], [25.5, 4071.0], [25.6, 4071.0], [25.7, 4071.0], [25.8, 4071.0], [25.9, 4071.0], [26.0, 4071.0], [26.1, 4071.0], [26.2, 4071.0], [26.3, 4071.0], [26.4, 4071.0], [26.5, 4071.0], [26.6, 4071.0], [26.7, 4071.0], [26.8, 4071.0], [26.9, 4071.0], [27.0, 4071.0], [27.1, 4071.0], [27.2, 4071.0], [27.3, 4071.0], [27.4, 4071.0], [27.5, 4071.0], [27.6, 4071.0], [27.7, 4071.0], [27.8, 4071.0], [27.9, 4071.0], [28.0, 4071.0], [28.1, 4071.0], [28.2, 4071.0], [28.3, 4071.0], [28.4, 4071.0], [28.5, 4071.0], [28.6, 4071.0], [28.7, 4071.0], [28.8, 4071.0], [28.9, 4071.0], [29.0, 4071.0], [29.1, 4071.0], [29.2, 4071.0], [29.3, 4071.0], [29.4, 4071.0], [29.5, 4071.0], [29.6, 4071.0], [29.7, 4071.0], [29.8, 4071.0], [29.9, 4071.0], [30.0, 4071.0], [30.1, 4071.0], [30.2, 4071.0], [30.3, 4071.0], [30.4, 4071.0], [30.5, 4071.0], [30.6, 4071.0], [30.7, 4071.0], [30.8, 4071.0], [30.9, 4071.0], [31.0, 4071.0], [31.1, 4071.0], [31.2, 4071.0], [31.3, 4071.0], [31.4, 4071.0], [31.5, 4071.0], [31.6, 4071.0], [31.7, 4071.0], [31.8, 4071.0], [31.9, 4071.0], [32.0, 4071.0], [32.1, 4071.0], [32.2, 4071.0], [32.3, 4071.0], [32.4, 4071.0], [32.5, 4071.0], [32.6, 4071.0], [32.7, 4071.0], [32.8, 4071.0], [32.9, 4071.0], [33.0, 4071.0], [33.1, 4071.0], [33.2, 4071.0], [33.3, 4071.0], [33.4, 4071.0], [33.5, 4071.0], [33.6, 4071.0], [33.7, 4071.0], [33.8, 4071.0], [33.9, 4071.0], [34.0, 4071.0], [34.1, 4071.0], [34.2, 4071.0], [34.3, 4071.0], [34.4, 4071.0], [34.5, 4071.0], [34.6, 4071.0], [34.7, 4071.0], [34.8, 4071.0], [34.9, 4071.0], [35.0, 4071.0], [35.1, 4071.0], [35.2, 4071.0], [35.3, 4071.0], [35.4, 4071.0], [35.5, 4071.0], [35.6, 4071.0], [35.7, 4071.0], [35.8, 4071.0], [35.9, 4071.0], [36.0, 4071.0], [36.1, 4071.0], [36.2, 4071.0], [36.3, 4071.0], [36.4, 4071.0], [36.5, 4071.0], [36.6, 4071.0], [36.7, 4071.0], [36.8, 4071.0], [36.9, 4071.0], [37.0, 4071.0], [37.1, 4071.0], [37.2, 4071.0], [37.3, 4071.0], [37.4, 4071.0], [37.5, 4071.0], [37.6, 4071.0], [37.7, 4071.0], [37.8, 4071.0], [37.9, 4071.0], [38.0, 4071.0], [38.1, 4071.0], [38.2, 4071.0], [38.3, 4071.0], [38.4, 4071.0], [38.5, 4071.0], [38.6, 4071.0], [38.7, 4071.0], [38.8, 4071.0], [38.9, 4071.0], [39.0, 4071.0], [39.1, 4071.0], [39.2, 4071.0], [39.3, 4071.0], [39.4, 4071.0], [39.5, 4071.0], [39.6, 4071.0], [39.7, 4071.0], [39.8, 4071.0], [39.9, 4071.0], [40.0, 4071.0], [40.1, 4071.0], [40.2, 4071.0], [40.3, 4071.0], [40.4, 4071.0], [40.5, 4071.0], [40.6, 4071.0], [40.7, 4071.0], [40.8, 4071.0], [40.9, 4071.0], [41.0, 4071.0], [41.1, 4071.0], [41.2, 4071.0], [41.3, 4071.0], [41.4, 4071.0], [41.5, 4071.0], [41.6, 4071.0], [41.7, 4071.0], [41.8, 4071.0], [41.9, 4071.0], [42.0, 4071.0], [42.1, 4071.0], [42.2, 4071.0], [42.3, 4071.0], [42.4, 4071.0], [42.5, 4071.0], [42.6, 4071.0], [42.7, 4071.0], [42.8, 4071.0], [42.9, 4071.0], [43.0, 4071.0], [43.1, 4071.0], [43.2, 4071.0], [43.3, 4071.0], [43.4, 4071.0], [43.5, 4071.0], [43.6, 4071.0], [43.7, 4071.0], [43.8, 4071.0], [43.9, 4071.0], [44.0, 4071.0], [44.1, 4071.0], [44.2, 4071.0], [44.3, 4071.0], [44.4, 4071.0], [44.5, 4071.0], [44.6, 4071.0], [44.7, 4071.0], [44.8, 4071.0], [44.9, 4071.0], [45.0, 4071.0], [45.1, 4071.0], [45.2, 4071.0], [45.3, 4071.0], [45.4, 4071.0], [45.5, 4071.0], [45.6, 4071.0], [45.7, 4071.0], [45.8, 4071.0], [45.9, 4071.0], [46.0, 4071.0], [46.1, 4071.0], [46.2, 4071.0], [46.3, 4071.0], [46.4, 4071.0], [46.5, 4071.0], [46.6, 4071.0], [46.7, 4071.0], [46.8, 4071.0], [46.9, 4071.0], [47.0, 4071.0], [47.1, 4071.0], [47.2, 4071.0], [47.3, 4071.0], [47.4, 4071.0], [47.5, 4071.0], [47.6, 4071.0], [47.7, 4071.0], [47.8, 4071.0], [47.9, 4071.0], [48.0, 4071.0], [48.1, 4071.0], [48.2, 4071.0], [48.3, 4071.0], [48.4, 4071.0], [48.5, 4071.0], [48.6, 4071.0], [48.7, 4071.0], [48.8, 4071.0], [48.9, 4071.0], [49.0, 4071.0], [49.1, 4071.0], [49.2, 4071.0], [49.3, 4071.0], [49.4, 4071.0], [49.5, 4071.0], [49.6, 4071.0], [49.7, 4071.0], [49.8, 4071.0], [49.9, 4071.0], [50.0, 4071.0], [50.1, 4071.0], [50.2, 4071.0], [50.3, 4071.0], [50.4, 4071.0], [50.5, 4071.0], [50.6, 4071.0], [50.7, 4071.0], [50.8, 4071.0], [50.9, 4071.0], [51.0, 4071.0], [51.1, 4071.0], [51.2, 4071.0], [51.3, 4071.0], [51.4, 4071.0], [51.5, 4071.0], [51.6, 4071.0], [51.7, 4071.0], [51.8, 4071.0], [51.9, 4071.0], [52.0, 4071.0], [52.1, 4071.0], [52.2, 4071.0], [52.3, 4071.0], [52.4, 4071.0], [52.5, 4071.0], [52.6, 4071.0], [52.7, 4071.0], [52.8, 4071.0], [52.9, 4071.0], [53.0, 4071.0], [53.1, 4071.0], [53.2, 4071.0], [53.3, 4071.0], [53.4, 4071.0], [53.5, 4071.0], [53.6, 4071.0], [53.7, 4071.0], [53.8, 4071.0], [53.9, 4071.0], [54.0, 4071.0], [54.1, 4071.0], [54.2, 4071.0], [54.3, 4071.0], [54.4, 4071.0], [54.5, 4071.0], [54.6, 4071.0], [54.7, 4071.0], [54.8, 4071.0], [54.9, 4071.0], [55.0, 4071.0], [55.1, 4071.0], [55.2, 4071.0], [55.3, 4071.0], [55.4, 4071.0], [55.5, 4071.0], [55.6, 4071.0], [55.7, 4071.0], [55.8, 4071.0], [55.9, 4071.0], [56.0, 4071.0], [56.1, 4071.0], [56.2, 4071.0], [56.3, 4071.0], [56.4, 4071.0], [56.5, 4071.0], [56.6, 4071.0], [56.7, 4071.0], [56.8, 4071.0], [56.9, 4071.0], [57.0, 4071.0], [57.1, 4071.0], [57.2, 4071.0], [57.3, 4071.0], [57.4, 4071.0], [57.5, 4071.0], [57.6, 4071.0], [57.7, 4071.0], [57.8, 4071.0], [57.9, 4071.0], [58.0, 4071.0], [58.1, 4071.0], [58.2, 4071.0], [58.3, 4071.0], [58.4, 4071.0], [58.5, 4071.0], [58.6, 4071.0], [58.7, 4071.0], [58.8, 4071.0], [58.9, 4071.0], [59.0, 4071.0], [59.1, 4071.0], [59.2, 4071.0], [59.3, 4071.0], [59.4, 4071.0], [59.5, 4071.0], [59.6, 4071.0], [59.7, 4071.0], [59.8, 4071.0], [59.9, 4071.0], [60.0, 4071.0], [60.1, 4071.0], [60.2, 4071.0], [60.3, 4071.0], [60.4, 4071.0], [60.5, 4071.0], [60.6, 4071.0], [60.7, 4071.0], [60.8, 4071.0], [60.9, 4071.0], [61.0, 4071.0], [61.1, 4071.0], [61.2, 4071.0], [61.3, 4071.0], [61.4, 4071.0], [61.5, 4071.0], [61.6, 4071.0], [61.7, 4071.0], [61.8, 4071.0], [61.9, 4071.0], [62.0, 4071.0], [62.1, 4071.0], [62.2, 4071.0], [62.3, 4071.0], [62.4, 4071.0], [62.5, 4071.0], [62.6, 4071.0], [62.7, 4071.0], [62.8, 4071.0], [62.9, 4071.0], [63.0, 4071.0], [63.1, 4071.0], [63.2, 4071.0], [63.3, 4071.0], [63.4, 4071.0], [63.5, 4071.0], [63.6, 4071.0], [63.7, 4071.0], [63.8, 4071.0], [63.9, 4071.0], [64.0, 4071.0], [64.1, 4071.0], [64.2, 4071.0], [64.3, 4071.0], [64.4, 4071.0], [64.5, 4071.0], [64.6, 4071.0], [64.7, 4071.0], [64.8, 4071.0], [64.9, 4071.0], [65.0, 4071.0], [65.1, 4071.0], [65.2, 4071.0], [65.3, 4071.0], [65.4, 4071.0], [65.5, 4071.0], [65.6, 4071.0], [65.7, 4071.0], [65.8, 4071.0], [65.9, 4071.0], [66.0, 4071.0], [66.1, 4071.0], [66.2, 4071.0], [66.3, 4071.0], [66.4, 4071.0], [66.5, 4071.0], [66.6, 4071.0], [66.7, 4071.0], [66.8, 4071.0], [66.9, 4071.0], [67.0, 4071.0], [67.1, 4071.0], [67.2, 4071.0], [67.3, 4071.0], [67.4, 4071.0], [67.5, 4071.0], [67.6, 4071.0], [67.7, 4071.0], [67.8, 4071.0], [67.9, 4071.0], [68.0, 4071.0], [68.1, 4071.0], [68.2, 4071.0], [68.3, 4071.0], [68.4, 4071.0], [68.5, 4071.0], [68.6, 4071.0], [68.7, 4071.0], [68.8, 4071.0], [68.9, 4071.0], [69.0, 4071.0], [69.1, 4071.0], [69.2, 4071.0], [69.3, 4071.0], [69.4, 4071.0], [69.5, 4071.0], [69.6, 4071.0], [69.7, 4071.0], [69.8, 4071.0], [69.9, 4071.0], [70.0, 4071.0], [70.1, 4071.0], [70.2, 4071.0], [70.3, 4071.0], [70.4, 4071.0], [70.5, 4071.0], [70.6, 4071.0], [70.7, 4071.0], [70.8, 4071.0], [70.9, 4071.0], [71.0, 4071.0], [71.1, 4071.0], [71.2, 4071.0], [71.3, 4071.0], [71.4, 4071.0], [71.5, 4071.0], [71.6, 4071.0], [71.7, 4071.0], [71.8, 4071.0], [71.9, 4071.0], [72.0, 4071.0], [72.1, 4071.0], [72.2, 4071.0], [72.3, 4071.0], [72.4, 4071.0], [72.5, 4071.0], [72.6, 4071.0], [72.7, 4071.0], [72.8, 4071.0], [72.9, 4071.0], [73.0, 4071.0], [73.1, 4071.0], [73.2, 4071.0], [73.3, 4071.0], [73.4, 4071.0], [73.5, 4071.0], [73.6, 4071.0], [73.7, 4071.0], [73.8, 4071.0], [73.9, 4071.0], [74.0, 4071.0], [74.1, 4071.0], [74.2, 4071.0], [74.3, 4071.0], [74.4, 4071.0], [74.5, 4071.0], [74.6, 4071.0], [74.7, 4071.0], [74.8, 4071.0], [74.9, 4071.0], [75.0, 4071.0], [75.1, 4071.0], [75.2, 4071.0], [75.3, 4071.0], [75.4, 4071.0], [75.5, 4071.0], [75.6, 4071.0], [75.7, 4071.0], [75.8, 4071.0], [75.9, 4071.0], [76.0, 4071.0], [76.1, 4071.0], [76.2, 4071.0], [76.3, 4071.0], [76.4, 4071.0], [76.5, 4071.0], [76.6, 4071.0], [76.7, 4071.0], [76.8, 4071.0], [76.9, 4071.0], [77.0, 4071.0], [77.1, 4071.0], [77.2, 4071.0], [77.3, 4071.0], [77.4, 4071.0], [77.5, 4071.0], [77.6, 4071.0], [77.7, 4071.0], [77.8, 4071.0], [77.9, 4071.0], [78.0, 4071.0], [78.1, 4071.0], [78.2, 4071.0], [78.3, 4071.0], [78.4, 4071.0], [78.5, 4071.0], [78.6, 4071.0], [78.7, 4071.0], [78.8, 4071.0], [78.9, 4071.0], [79.0, 4071.0], [79.1, 4071.0], [79.2, 4071.0], [79.3, 4071.0], [79.4, 4071.0], [79.5, 4071.0], [79.6, 4071.0], [79.7, 4071.0], [79.8, 4071.0], [79.9, 4071.0], [80.0, 4071.0], [80.1, 4071.0], [80.2, 4071.0], [80.3, 4071.0], [80.4, 4071.0], [80.5, 4071.0], [80.6, 4071.0], [80.7, 4071.0], [80.8, 4071.0], [80.9, 4071.0], [81.0, 4071.0], [81.1, 4071.0], [81.2, 4071.0], [81.3, 4071.0], [81.4, 4071.0], [81.5, 4071.0], [81.6, 4071.0], [81.7, 4071.0], [81.8, 4071.0], [81.9, 4071.0], [82.0, 4071.0], [82.1, 4071.0], [82.2, 4071.0], [82.3, 4071.0], [82.4, 4071.0], [82.5, 4071.0], [82.6, 4071.0], [82.7, 4071.0], [82.8, 4071.0], [82.9, 4071.0], [83.0, 4071.0], [83.1, 4071.0], [83.2, 4071.0], [83.3, 4071.0], [83.4, 4071.0], [83.5, 4071.0], [83.6, 4071.0], [83.7, 4071.0], [83.8, 4071.0], [83.9, 4071.0], [84.0, 4071.0], [84.1, 4071.0], [84.2, 4071.0], [84.3, 4071.0], [84.4, 4071.0], [84.5, 4071.0], [84.6, 4071.0], [84.7, 4071.0], [84.8, 4071.0], [84.9, 4071.0], [85.0, 4071.0], [85.1, 4071.0], [85.2, 4071.0], [85.3, 4071.0], [85.4, 4071.0], [85.5, 4071.0], [85.6, 4071.0], [85.7, 4071.0], [85.8, 4071.0], [85.9, 4071.0], [86.0, 4071.0], [86.1, 4071.0], [86.2, 4071.0], [86.3, 4071.0], [86.4, 4071.0], [86.5, 4071.0], [86.6, 4071.0], [86.7, 4071.0], [86.8, 4071.0], [86.9, 4071.0], [87.0, 4071.0], [87.1, 4071.0], [87.2, 4071.0], [87.3, 4071.0], [87.4, 4071.0], [87.5, 4071.0], [87.6, 4071.0], [87.7, 4071.0], [87.8, 4071.0], [87.9, 4071.0], [88.0, 4071.0], [88.1, 4071.0], [88.2, 4071.0], [88.3, 4071.0], [88.4, 4071.0], [88.5, 4071.0], [88.6, 4071.0], [88.7, 4071.0], [88.8, 4071.0], [88.9, 4071.0], [89.0, 4071.0], [89.1, 4071.0], [89.2, 4071.0], [89.3, 4071.0], [89.4, 4071.0], [89.5, 4071.0], [89.6, 4071.0], [89.7, 4071.0], [89.8, 4071.0], [89.9, 4071.0], [90.0, 4071.0], [90.1, 4071.0], [90.2, 4071.0], [90.3, 4071.0], [90.4, 4071.0], [90.5, 4071.0], [90.6, 4071.0], [90.7, 4071.0], [90.8, 4071.0], [90.9, 4071.0], [91.0, 4071.0], [91.1, 4071.0], [91.2, 4071.0], [91.3, 4071.0], [91.4, 4071.0], [91.5, 4071.0], [91.6, 4071.0], [91.7, 4071.0], [91.8, 4071.0], [91.9, 4071.0], [92.0, 4071.0], [92.1, 4071.0], [92.2, 4071.0], [92.3, 4071.0], [92.4, 4071.0], [92.5, 4071.0], [92.6, 4071.0], [92.7, 4071.0], [92.8, 4071.0], [92.9, 4071.0], [93.0, 4071.0], [93.1, 4071.0], [93.2, 4071.0], [93.3, 4071.0], [93.4, 4071.0], [93.5, 4071.0], [93.6, 4071.0], [93.7, 4071.0], [93.8, 4071.0], [93.9, 4071.0], [94.0, 4071.0], [94.1, 4071.0], [94.2, 4071.0], [94.3, 4071.0], [94.4, 4071.0], [94.5, 4071.0], [94.6, 4071.0], [94.7, 4071.0], [94.8, 4071.0], [94.9, 4071.0], [95.0, 4071.0], [95.1, 4071.0], [95.2, 4071.0], [95.3, 4071.0], [95.4, 4071.0], [95.5, 4071.0], [95.6, 4071.0], [95.7, 4071.0], [95.8, 4071.0], [95.9, 4071.0], [96.0, 4071.0], [96.1, 4071.0], [96.2, 4071.0], [96.3, 4071.0], [96.4, 4071.0], [96.5, 4071.0], [96.6, 4071.0], [96.7, 4071.0], [96.8, 4071.0], [96.9, 4071.0], [97.0, 4071.0], [97.1, 4071.0], [97.2, 4071.0], [97.3, 4071.0], [97.4, 4071.0], [97.5, 4071.0], [97.6, 4071.0], [97.7, 4071.0], [97.8, 4071.0], [97.9, 4071.0], [98.0, 4071.0], [98.1, 4071.0], [98.2, 4071.0], [98.3, 4071.0], [98.4, 4071.0], [98.5, 4071.0], [98.6, 4071.0], [98.7, 4071.0], [98.8, 4071.0], [98.9, 4071.0], [99.0, 4071.0], [99.1, 4071.0], [99.2, 4071.0], [99.3, 4071.0], [99.4, 4071.0], [99.5, 4071.0], [99.6, 4071.0], [99.7, 4071.0], [99.8, 4071.0], [99.9, 4071.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 444.0, "series": [{"data": [[400.0, 1.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[0.0, 1.0], [38900.0, 1.0], [39300.0, 1.0], [40900.0, 1.0], [44500.0, 1.0], [43300.0, 1.0], [46900.0, 2.0], [2000.0, 1.0], [2400.0, 3.0], [2500.0, 2.0], [2600.0, 5.0], [2800.0, 25.0], [2700.0, 5.0], [2900.0, 15.0], [3000.0, 26.0], [3100.0, 13.0], [3200.0, 11.0], [3300.0, 9.0], [3400.0, 18.0], [3500.0, 11.0], [3700.0, 13.0], [3600.0, 7.0], [3800.0, 15.0], [3900.0, 9.0], [4000.0, 10.0], [4300.0, 7.0], [4100.0, 7.0], [4200.0, 12.0], [4400.0, 7.0], [4600.0, 2.0], [4500.0, 1.0], [4800.0, 20.0], [4700.0, 3.0], [4900.0, 9.0], [5100.0, 8.0], [5000.0, 10.0], [5200.0, 2.0], [5300.0, 2.0], [5600.0, 8.0], [5400.0, 2.0], [5500.0, 6.0], [5700.0, 7.0], [5800.0, 9.0], [6100.0, 9.0], [5900.0, 4.0], [6000.0, 2.0], [6300.0, 9.0], [6200.0, 19.0], [6600.0, 20.0], [6400.0, 13.0], [6500.0, 35.0], [6700.0, 22.0], [6900.0, 17.0], [6800.0, 13.0], [7100.0, 12.0], [7000.0, 32.0], [7300.0, 15.0], [7400.0, 6.0], [7200.0, 20.0], [7500.0, 22.0], [7600.0, 16.0], [7900.0, 22.0], [7800.0, 15.0], [7700.0, 5.0], [8000.0, 21.0], [8100.0, 15.0], [8300.0, 7.0], [8500.0, 13.0], [8400.0, 16.0], [8600.0, 4.0], [8700.0, 10.0], [8200.0, 5.0], [8900.0, 12.0], [8800.0, 20.0], [9100.0, 19.0], [9200.0, 10.0], [9000.0, 6.0], [9700.0, 3.0], [9600.0, 9.0], [9500.0, 4.0], [9300.0, 6.0], [9400.0, 3.0], [9900.0, 9.0], [9800.0, 13.0], [10100.0, 13.0], [10000.0, 13.0], [10200.0, 12.0], [10400.0, 12.0], [10600.0, 12.0], [10300.0, 4.0], [10700.0, 17.0], [10500.0, 5.0], [10900.0, 18.0], [10800.0, 21.0], [11100.0, 17.0], [11000.0, 18.0], [11200.0, 20.0], [11500.0, 16.0], [11600.0, 6.0], [11400.0, 12.0], [11300.0, 10.0], [11700.0, 9.0], [12100.0, 18.0], [12200.0, 5.0], [11800.0, 13.0], [11900.0, 18.0], [12000.0, 14.0], [12700.0, 13.0], [12300.0, 5.0], [12500.0, 7.0], [12400.0, 6.0], [12600.0, 7.0], [13200.0, 6.0], [13100.0, 5.0], [12800.0, 7.0], [12900.0, 7.0], [13000.0, 12.0], [13300.0, 1.0], [13400.0, 8.0], [13800.0, 17.0], [13500.0, 25.0], [13600.0, 4.0], [13700.0, 5.0], [13900.0, 10.0], [14000.0, 11.0], [14300.0, 6.0], [14100.0, 12.0], [14200.0, 23.0], [14500.0, 21.0], [14600.0, 26.0], [14800.0, 7.0], [14400.0, 63.0], [14700.0, 22.0], [15300.0, 32.0], [15200.0, 84.0], [15100.0, 40.0], [14900.0, 13.0], [15000.0, 4.0], [15400.0, 17.0], [15600.0, 34.0], [15800.0, 43.0], [15700.0, 23.0], [15500.0, 20.0], [16300.0, 62.0], [15900.0, 49.0], [16000.0, 117.0], [16200.0, 55.0], [16100.0, 51.0], [17200.0, 48.0], [16600.0, 190.0], [17000.0, 86.0], [17400.0, 39.0], [16800.0, 66.0], [16400.0, 72.0], [17600.0, 15.0], [17800.0, 58.0], [18200.0, 132.0], [18400.0, 42.0], [18000.0, 52.0], [19200.0, 31.0], [18800.0, 444.0], [19400.0, 66.0], [19000.0, 74.0], [18600.0, 53.0], [19600.0, 46.0], [19800.0, 13.0], [20200.0, 320.0], [20400.0, 13.0], [20000.0, 14.0], [21000.0, 20.0], [21400.0, 95.0], [21200.0, 9.0], [20600.0, 7.0], [20800.0, 67.0], [22200.0, 29.0], [22400.0, 20.0], [21600.0, 6.0], [22000.0, 53.0], [21800.0, 32.0], [22600.0, 63.0], [22800.0, 22.0], [23000.0, 64.0], [23200.0, 31.0], [23400.0, 28.0], [23600.0, 54.0], [24000.0, 6.0], [24200.0, 117.0], [23800.0, 7.0], [24400.0, 2.0], [24600.0, 5.0], [24800.0, 18.0], [25400.0, 2.0], [25000.0, 1.0], [25600.0, 5.0], [25800.0, 5.0], [26000.0, 28.0], [26600.0, 3.0], [26400.0, 1.0], [26200.0, 4.0], [27000.0, 6.0], [26800.0, 5.0], [27200.0, 1.0], [27400.0, 7.0], [27600.0, 2.0], [27800.0, 21.0], [29200.0, 3.0], [30200.0, 1.0], [30400.0, 3.0], [32200.0, 1.0], [32400.0, 1.0], [32600.0, 1.0], [36000.0, 5.0], [35200.0, 1.0], [36400.0, 1.0], [37200.0, 12.0], [39200.0, 1.0], [40000.0, 1.0], [41200.0, 3.0], [45200.0, 1.0], [33900.0, 1.0], [40700.0, 1.0], [17300.0, 40.0], [16700.0, 47.0], [16500.0, 94.0], [17100.0, 131.0], [16900.0, 37.0], [17700.0, 71.0], [18100.0, 40.0], [17500.0, 44.0], [18300.0, 56.0], [17900.0, 77.0], [18700.0, 27.0], [18900.0, 78.0], [19300.0, 17.0], [19100.0, 83.0], [18500.0, 263.0], [20300.0, 150.0], [19500.0, 54.0], [19700.0, 22.0], [19900.0, 15.0], [20100.0, 113.0], [21300.0, 10.0], [21100.0, 6.0], [21500.0, 7.0], [20700.0, 34.0], [20500.0, 24.0], [20900.0, 8.0], [21700.0, 31.0], [21900.0, 48.0], [22100.0, 39.0], [22500.0, 49.0], [22300.0, 14.0], [23300.0, 9.0], [22700.0, 30.0], [23100.0, 31.0], [22900.0, 31.0], [23500.0, 17.0], [23700.0, 26.0], [23900.0, 18.0], [24100.0, 78.0], [24300.0, 23.0], [24700.0, 5.0], [25300.0, 3.0], [24900.0, 2.0], [25100.0, 3.0], [25500.0, 2.0], [25900.0, 12.0], [26100.0, 4.0], [26300.0, 1.0], [25700.0, 15.0], [26500.0, 11.0], [27100.0, 5.0], [26700.0, 2.0], [27300.0, 2.0], [27500.0, 12.0], [26900.0, 8.0], [29500.0, 1.0], [29900.0, 2.0], [30500.0, 1.0], [31100.0, 2.0], [36600.0, 1.0], [38600.0, 1.0], [38200.0, 1.0], [37800.0, 1.0], [39400.0, 8.0], [40600.0, 1.0], [47000.0, 1.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[77300.0, 1.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[6900.0, 1.0], [10700.0, 1.0], [10600.0, 1.0], [10500.0, 1.0], [11200.0, 9.0], [11000.0, 3.0], [11100.0, 2.0], [11700.0, 4.0], [11300.0, 3.0], [11600.0, 5.0], [11400.0, 5.0], [11500.0, 3.0], [12000.0, 6.0], [11900.0, 3.0], [12100.0, 4.0], [11800.0, 5.0], [12200.0, 2.0], [12700.0, 1.0], [12600.0, 1.0], [12300.0, 1.0], [12400.0, 2.0], [12500.0, 1.0], [13300.0, 2.0], [13200.0, 2.0], [12800.0, 1.0], [15600.0, 1.0], [15800.0, 1.0], [15700.0, 2.0], [15500.0, 1.0], [16400.0, 1.0], [16900.0, 1.0], [17400.0, 1.0], [18000.0, 1.0], [18200.0, 2.0], [18300.0, 1.0], [17800.0, 1.0], [17700.0, 1.0], [19400.0, 2.0], [19000.0, 1.0], [18800.0, 7.0], [18500.0, 3.0], [18600.0, 2.0], [19300.0, 3.0], [19200.0, 2.0], [18700.0, 3.0], [18900.0, 5.0], [19100.0, 3.0], [19600.0, 2.0], [19800.0, 6.0], [20400.0, 4.0], [20100.0, 3.0], [19900.0, 6.0], [20000.0, 3.0], [19700.0, 1.0], [20300.0, 1.0], [19500.0, 1.0], [20200.0, 2.0], [21500.0, 4.0], [21200.0, 2.0], [21400.0, 3.0], [20800.0, 2.0], [20600.0, 2.0], [20700.0, 1.0], [21300.0, 1.0], [21100.0, 1.0], [21000.0, 1.0], [20500.0, 1.0], [21700.0, 5.0], [22000.0, 5.0], [22400.0, 4.0], [22500.0, 1.0], [21600.0, 2.0], [21800.0, 3.0], [21900.0, 3.0], [22100.0, 2.0], [22300.0, 1.0], [22800.0, 1.0], [24500.0, 7.0], [24400.0, 13.0], [24300.0, 11.0], [24200.0, 7.0], [24000.0, 3.0], [24100.0, 4.0], [23800.0, 5.0], [25000.0, 11.0], [25100.0, 9.0], [24800.0, 5.0], [24900.0, 15.0], [24700.0, 4.0], [24600.0, 8.0], [25300.0, 2.0], [25200.0, 4.0], [32200.0, 1.0], [34200.0, 1.0], [33200.0, 1.0], [34800.0, 1.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[4000.0, 1.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 77300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7301.0, "series": [{"data": [[0.0, 2.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 7301.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68537648E12, "maxY": 700.0, "series": [{"data": [[1.68537678E12, 1.0]], "isOverall": false, "label": "tearDown consumers", "isController": false}, {"data": [[1.6853766E12, 700.0], [1.68537672E12, 551.0974907445482], [1.68537666E12, 700.0]], "isOverall": false, "label": "Producers", "isController": false}, {"data": [[1.6853766E12, 295.05000000000007]], "isOverall": false, "label": "Consumers", "isController": false}, {"data": [[1.68537648E12, 1.0]], "isOverall": false, "label": "setUp", "isController": false}, {"data": [[1.68537654E12, 1.0]], "isOverall": false, "label": "setUp consumers", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68537678E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 70.0, "minX": 1.0, "maxY": 77389.0, "series": [{"data": [[2.0, 419.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[2.0, 419.0]], "isOverall": false, "label": "create message-Aggregated", "isController": false}, {"data": [[2.0, 3031.0], [3.0, 2849.0], [4.0, 3032.0], [5.0, 2858.0], [6.0, 2839.0], [7.0, 2858.0], [8.0, 2869.0], [9.0, 2857.0], [10.0, 2859.0], [11.0, 2859.0], [12.0, 3341.0], [14.0, 3319.0], [16.0, 3099.0], [17.0, 2857.0], [18.0, 3519.0], [19.0, 3613.0], [20.0, 3019.0], [21.0, 3422.0], [22.0, 3848.0], [23.0, 2861.0], [24.0, 3341.0], [25.0, 3430.0], [26.0, 3254.5], [27.0, 3422.0], [28.0, 2858.0], [29.0, 3847.0], [30.0, 3845.0], [31.0, 3845.0], [33.0, 3845.0], [32.0, 2856.0], [35.0, 2854.0], [34.0, 2855.0], [37.0, 3615.0], [36.0, 3530.0], [39.0, 3165.0], [38.0, 3100.0], [41.0, 3609.0], [40.0, 3337.0], [43.0, 3418.0], [42.0, 3432.0], [45.0, 3336.0], [44.0, 3515.0], [47.0, 2946.5], [49.0, 2844.0], [48.0, 3012.0], [51.0, 3405.0], [50.0, 2844.0], [53.0, 3373.0], [52.0, 3000.0], [55.0, 3040.0], [54.0, 3912.0], [57.0, 3279.0], [56.0, 2795.0], [59.0, 3280.0], [58.0, 2795.0], [61.0, 3785.0], [60.0, 3784.0], [63.0, 3469.0], [62.0, 3795.0], [67.0, 3782.0], [66.0, 3783.0], [65.0, 3469.0], [64.0, 3366.0], [71.0, 3551.0], [70.0, 3781.0], [69.0, 3103.0], [68.0, 3475.0], [75.0, 3773.0], [74.0, 3778.0], [73.0, 3779.0], [72.0, 3553.0], [79.0, 2703.0], [78.0, 3525.0], [77.0, 3020.0], [76.0, 3298.0], [83.0, 3719.0], [81.0, 3091.0], [80.0, 3017.0], [87.0, 3388.5], [85.0, 3278.0], [84.0, 2532.0], [91.0, 2569.0], [90.0, 2633.0], [89.0, 2717.0], [88.0, 2791.0], [95.0, 3459.0], [94.0, 2470.0], [93.0, 3780.0], [92.0, 3463.0], [99.0, 3452.0], [98.0, 2466.0], [97.0, 3454.0], [103.0, 3060.0], [102.0, 3456.5], [100.0, 3294.0], [107.0, 2981.0], [105.0, 3406.0], [111.0, 3030.0], [110.0, 2928.0], [109.0, 3403.0], [108.0, 3288.0], [115.0, 3277.0], [114.0, 3282.0], [113.0, 3320.0], [112.0, 3341.0], [119.0, 3233.0], [118.0, 2926.0], [117.0, 3029.0], [116.0, 3097.0], [123.0, 3190.0], [122.0, 3000.0], [121.0, 2408.0], [120.0, 3044.0], [127.0, 3152.0], [126.0, 3131.0], [124.0, 3158.0], [135.0, 3036.0], [134.0, 3049.0], [133.0, 3060.0], [132.0, 3062.5], [130.0, 2921.0], [129.0, 3110.0], [128.0, 3108.0], [143.0, 2934.0], [141.0, 2962.0], [140.0, 2963.0], [139.0, 2963.0], [138.0, 2996.0], [136.0, 3027.0], [151.0, 2852.0], [150.0, 2850.0], [149.0, 2633.0], [148.0, 2849.0], [147.0, 2670.0], [146.0, 2026.0], [145.0, 2859.0], [144.0, 2927.0], [158.0, 17097.0], [157.0, 2808.0], [156.0, 2847.0], [155.0, 2631.0], [154.0, 2632.0], [153.0, 2850.0], [152.0, 2850.0], [167.0, 18596.0], [165.0, 2981.0], [164.0, 18595.0], [163.0, 16980.0], [162.0, 17466.0], [161.0, 17596.0], [160.0, 8434.5], [175.0, 17605.0], [174.0, 17007.0], [173.0, 13513.0], [172.0, 4084.0], [171.0, 18208.0], [170.0, 17092.0], [169.0, 10578.5], [168.0, 10099.0], [183.0, 17071.0], [182.0, 17272.333333333336], [181.0, 17069.0], [180.0, 17268.5], [179.0, 17072.333333333332], [178.0, 17346.5], [177.0, 17477.0], [176.0, 17094.0], [191.0, 17506.5], [190.0, 10943.0], [189.0, 17073.0], [188.0, 10565.0], [186.0, 17071.0], [185.0, 17361.0], [184.0, 17449.0], [199.0, 17067.0], [198.0, 17318.5], [197.0, 17063.0], [196.0, 17060.0], [195.0, 17585.0], [194.0, 17311.0], [193.0, 17581.666666666668], [192.0, 17194.333333333332], [207.0, 17585.5], [206.0, 4154.0], [205.0, 16907.0], [204.0, 16913.0], [203.0, 16796.0], [202.0, 10678.0], [201.0, 17235.5], [200.0, 16893.0], [215.0, 14216.0], [214.0, 16905.0], [213.0, 16910.0], [212.0, 16910.0], [211.0, 17433.0], [210.0, 14783.6], [209.0, 17469.5], [208.0, 16905.0], [223.0, 13725.5], [222.0, 15090.0], [221.0, 14048.5], [220.0, 16487.0], [219.0, 17918.0], [218.0, 13052.0], [217.0, 17266.0], [216.0, 17283.0], [231.0, 17342.0], [230.0, 16741.0], [229.0, 17328.0], [228.0, 10092.5], [227.0, 3818.0], [226.0, 16410.0], [225.0, 17006.5], [224.0, 15722.0], [239.0, 13265.666666666668], [238.0, 17875.0], [237.0, 17872.0], [236.0, 16755.0], [235.0, 17274.0], [234.0, 16962.0], [233.0, 17273.0], [232.0, 17338.0], [247.0, 17263.0], [246.0, 10780.0], [245.0, 10506.0], [244.0, 4251.0], [243.0, 17113.0], [242.0, 16762.0], [241.0, 4261.0], [240.0, 13026.0], [255.0, 16473.0], [254.0, 16929.0], [253.0, 17297.0], [251.0, 17035.5], [250.0, 16847.0], [249.0, 17700.0], [248.0, 17151.0], [270.0, 17316.0], [271.0, 17594.0], [269.0, 8119.0], [268.0, 5782.0], [267.0, 16505.0], [266.0, 8174.0], [265.0, 10279.0], [263.0, 17052.0], [257.0, 17035.0], [256.0, 17147.0], [259.0, 17106.0], [258.0, 4129.0], [262.0, 17366.0], [261.0, 17435.0], [260.0, 17101.0], [286.0, 16952.0], [287.0, 8075.0], [285.0, 16382.0], [284.0, 16499.666666666668], [283.0, 13903.0], [282.0, 16506.0], [281.0, 16499.0], [280.0, 16506.0], [279.0, 17444.5], [273.0, 14209.333333333334], [272.0, 16911.0], [275.0, 4999.0], [274.0, 8118.0], [278.0, 4919.0], [277.0, 8116.0], [276.0, 12312.5], [302.0, 7997.0], [303.0, 17461.0], [301.0, 12982.333333333332], [300.0, 16886.0], [299.0, 17509.0], [298.0, 4154.0], [297.0, 17507.0], [296.0, 17508.0], [295.0, 13778.5], [289.0, 16407.0], [288.0, 7625.0], [291.0, 16732.0], [290.0, 16400.0], [294.0, 17465.0], [293.0, 16674.0], [318.0, 16509.5], [319.0, 16827.0], [317.0, 17809.0], [316.0, 16979.5], [315.0, 16527.0], [314.0, 12372.0], [313.0, 16226.0], [312.0, 9438.0], [311.0, 16805.0], [305.0, 17626.5], [304.0, 17066.0], [307.0, 16830.0], [306.0, 17373.0], [310.0, 16814.0], [309.0, 17095.0], [308.0, 16314.0], [334.0, 13315.0], [335.0, 16085.0], [333.0, 16598.0], [332.0, 16455.0], [331.0, 16082.0], [330.0, 16079.0], [329.0, 13224.5], [327.0, 16085.5], [321.0, 17811.0], [320.0, 12728.0], [323.0, 16190.0], [322.0, 16303.0], [326.0, 16833.5], [324.0, 13371.0], [350.0, 13524.0], [351.0, 16026.5], [349.0, 17588.0], [348.0, 16087.0], [347.0, 16076.0], [346.0, 16900.0], [345.0, 16905.0], [344.0, 16268.0], [343.0, 16216.5], [337.0, 16455.0], [336.0, 14098.666666666666], [339.0, 16079.0], [338.0, 16572.0], [342.0, 16081.0], [341.0, 12452.0], [340.0, 9898.0], [366.0, 16283.333333333334], [367.0, 13168.5], [365.0, 16081.0], [364.0, 16078.0], [363.0, 16579.666666666668], [362.0, 16592.0], [361.0, 14964.5], [360.0, 16633.5], [358.0, 16896.5], [353.0, 16528.0], [352.0, 16388.5], [355.0, 16657.333333333332], [354.0, 16080.0], [357.0, 16483.0], [356.0, 16598.0], [382.0, 11743.0], [383.0, 17079.666666666668], [381.0, 16929.0], [380.0, 16383.0], [379.0, 15869.0], [378.0, 10292.0], [377.0, 15995.0], [376.0, 12480.0], [374.0, 16478.0], [369.0, 15967.0], [368.0, 15455.75], [371.0, 15907.0], [370.0, 16479.0], [373.0, 17075.0], [372.0, 14034.0], [398.0, 15904.0], [399.0, 15838.0], [397.0, 12287.0], [396.0, 15669.0], [395.0, 14240.5], [394.0, 15559.0], [393.0, 11798.0], [392.0, 15984.0], [391.0, 15639.5], [385.0, 16016.0], [384.0, 5030.0], [387.0, 15909.5], [386.0, 16722.0], [390.0, 15586.5], [389.0, 16065.0], [388.0, 15905.0], [414.0, 15635.333333333334], [415.0, 15177.0], [413.0, 15579.0], [412.0, 15295.0], [411.0, 15803.0], [410.0, 15510.25], [409.0, 16404.0], [408.0, 15947.0], [407.0, 15563.333333333334], [401.0, 16951.0], [400.0, 15448.0], [403.0, 15501.0], [402.0, 15444.0], [406.0, 15447.0], [405.0, 15451.0], [404.0, 15448.0], [430.0, 15783.0], [431.0, 15268.0], [429.0, 15684.5], [428.0, 15260.0], [427.0, 15724.666666666666], [426.0, 12322.5], [425.0, 15665.0], [424.0, 15275.0], [423.0, 15538.5], [417.0, 15751.666666666666], [416.0, 15244.0], [419.0, 15289.0], [418.0, 15806.0], [422.0, 15786.5], [421.0, 14866.0], [420.0, 16133.0], [446.0, 15255.0], [447.0, 15018.5], [445.0, 11598.333333333334], [444.0, 15354.0], [443.0, 15392.6], [442.0, 15045.0], [441.0, 15389.0], [440.0, 15519.0], [439.0, 16376.0], [433.0, 15780.0], [432.0, 15309.0], [435.0, 15777.5], [434.0, 15522.0], [438.0, 15265.0], [437.0, 15262.0], [436.0, 15406.0], [462.0, 11300.0], [463.0, 12767.0], [461.0, 12769.0], [460.0, 12682.0], [459.0, 13280.0], [458.0, 13325.0], [457.0, 7055.0], [456.0, 13013.0], [455.0, 13791.2], [449.0, 14931.5], [448.0, 15057.5], [451.0, 14628.0], [450.0, 14627.0], [454.0, 8278.0], [453.0, 14437.0], [478.0, 13043.0], [479.0, 12105.0], [477.0, 6302.0], [476.0, 12712.333333333334], [475.0, 13144.8], [474.0, 13967.0], [472.0, 13222.666666666666], [471.0, 13013.5], [465.0, 13038.5], [464.0, 13297.0], [467.0, 8080.0], [466.0, 13871.0], [470.0, 13519.666666666666], [468.0, 13869.0], [494.0, 11091.0], [495.0, 9188.0], [493.0, 11103.0], [492.0, 11125.0], [491.0, 10718.0], [489.0, 10232.0], [488.0, 11073.0], [487.0, 4484.0], [481.0, 12431.0], [480.0, 12104.0], [483.0, 8746.0], [482.0, 11737.0], [486.0, 11173.0], [485.0, 11878.0], [484.0, 3957.0], [510.0, 7718.0], [511.0, 8402.0], [509.0, 8433.0], [508.0, 8446.0], [507.0, 8593.5], [506.0, 8597.5], [505.0, 8131.0], [504.0, 8907.75], [503.0, 9952.5], [497.0, 9893.0], [496.0, 9814.0], [499.0, 9888.0], [498.0, 10041.0], [502.0, 9879.0], [501.0, 10114.0], [500.0, 9894.5], [540.0, 6571.0], [543.0, 6537.0], [528.0, 7073.0], [530.0, 6964.0], [529.0, 7059.0], [532.0, 6897.0], [531.0, 6967.0], [542.0, 6535.0], [541.0, 6534.0], [539.0, 6585.5], [538.0, 6669.2], [537.0, 6765.0], [536.0, 6810.0], [527.0, 7074.0], [513.0, 8286.0], [512.0, 8393.666666666666], [515.0, 8490.5], [514.0, 8173.0], [517.0, 8109.0], [516.0, 8096.0], [519.0, 8777.0], [518.0, 8021.0], [526.0, 7075.0], [525.0, 6987.333333333333], [524.0, 7309.0], [523.0, 7637.0], [522.0, 7826.5], [521.0, 8294.5], [520.0, 7989.0], [535.0, 6836.0], [534.0, 6899.0], [570.0, 15389.249999999998], [574.0, 18043.25], [575.0, 18163.000000000004], [560.0, 4795.0], [562.0, 11714.5], [561.0, 3691.0], [564.0, 5820.0], [563.0, 8772.0], [573.0, 16000.249999999998], [572.0, 14757.5], [571.0, 16899.285714285714], [568.0, 7651.0], [551.0, 5814.0], [550.0, 5900.5], [549.0, 6101.0], [548.0, 6154.5], [546.0, 6173.0], [545.0, 6262.0], [544.0, 6540.0], [559.0, 5100.5], [558.0, 4345.5], [557.0, 5166.0], [556.0, 5287.0], [555.0, 5569.5], [554.0, 5659.666666666667], [553.0, 5700.0], [552.0, 5736.0], [567.0, 17110.0], [565.0, 11529.5], [604.0, 17412.166666666668], [607.0, 17469.8], [593.0, 18189.666666666668], [592.0, 16440.2], [595.0, 17187.25], [594.0, 17265.769230769234], [597.0, 17117.0], [596.0, 18930.5], [606.0, 17227.882352941175], [605.0, 16290.4], [603.0, 16394.285714285714], [602.0, 15461.75], [601.0, 16500.4], [600.0, 17223.8125], [591.0, 13608.0], [577.0, 17085.333333333332], [576.0, 16943.000000000004], [579.0, 9861.0], [578.0, 17713.333333333336], [581.0, 12538.5], [580.0, 16635.0], [583.0, 19123.833333333336], [582.0, 17285.333333333332], [590.0, 14800.846153846154], [589.0, 18547.15], [588.0, 18707.666666666668], [587.0, 16872.0], [586.0, 12659.0], [585.0, 14178.0], [584.0, 16824.0], [599.0, 16933.833333333332], [598.0, 20113.0], [636.0, 19599.0], [639.0, 17490.454545454544], [625.0, 17070.333333333332], [624.0, 16395.5], [627.0, 18044.2], [626.0, 18036.5], [629.0, 18878.0], [628.0, 18626.666666666668], [638.0, 15894.0], [637.0, 17353.8], [635.0, 18024.8], [634.0, 17265.666666666668], [633.0, 17190.8], [632.0, 17523.85714285714], [623.0, 17377.0], [609.0, 16263.0], [608.0, 17681.75], [611.0, 17511.33333333333], [610.0, 19738.0], [613.0, 17551.100000000002], [612.0, 17438.285714285714], [615.0, 17842.4], [614.0, 15967.2], [622.0, 16336.0], [621.0, 18048.333333333332], [620.0, 18945.0], [619.0, 18984.666666666668], [618.0, 18307.0], [617.0, 17972.4], [616.0, 18843.0], [631.0, 17938.333333333332], [630.0, 17689.666666666668], [668.0, 16325.875], [671.0, 16187.142857142859], [657.0, 17089.5], [656.0, 17411.0], [659.0, 16509.46153846154], [658.0, 16665.333333333332], [661.0, 18276.0], [660.0, 17423.666666666668], [670.0, 15316.0], [669.0, 15907.5], [667.0, 17366.0], [666.0, 16229.916666666666], [665.0, 16262.0], [664.0, 17580.5], [655.0, 17291.166666666668], [640.0, 16162.333333333334], [642.0, 18621.5], [641.0, 18311.88888888889], [644.0, 17472.0], [643.0, 17936.857142857145], [646.0, 17190.0], [645.0, 18035.0], [654.0, 17560.57142857143], [653.0, 17389.111111111113], [652.0, 18372.3], [651.0, 17605.0], [650.0, 16837.333333333332], [649.0, 16049.0], [648.0, 16135.666666666666], [663.0, 17361.285714285714], [662.0, 15776.0], [697.0, 12577.812499999998], [701.0, 20553.75], [703.0, 19302.25], [689.0, 5845.333333333333], [688.0, 4290.0], [691.0, 5455.727272727273], [690.0, 10270.6], [700.0, 17992.88243727598], [699.0, 21122.602040816313], [698.0, 20053.545454545452], [696.0, 21090.777777777777], [679.0, 16219.84], [678.0, 15883.4], [677.0, 15372.777777777777], [676.0, 17326.363636363636], [675.0, 14564.0], [674.0, 16332.615384615385], [673.0, 15895.8], [672.0, 15084.375], [687.0, 17149.82], [686.0, 18322.899999999994], [685.0, 9997.4], [684.0, 10625.272727272728], [683.0, 12537.846153846154], [682.0, 15167.523809523811], [681.0, 14860.750000000002], [680.0, 15186.833333333332], [695.0, 17568.5], [694.0, 22118.809523809523], [693.0, 14567.291666666666], [692.0, 6421.8], [713.0, 16017.0], [704.0, 17458.95774647887], [744.0, 15895.0], [742.0, 15852.0], [822.0, 15643.0], [814.0, 15678.0], [941.0, 15383.0], [931.0, 15483.0], [1000.0, 14477.107142857143], [999.0, 20471.931330472104], [1.0, 70.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[679.618571428573, 17369.223714285687]], "isOverall": false, "label": "Produce Kafka message for user-Aggregated", "isController": false}, {"data": [[1.0, 77389.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.0, 77389.0]], "isOverall": false, "label": "Create + subscribe consumers-Aggregated", "isController": false}, {"data": [[703.0, 34267.0], [702.0, 33268.0], [701.0, 34807.0], [704.0, 32256.0], [1000.0, 6922.0], [999.0, 19822.538983050854]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[995.05, 19963.896666666657]], "isOverall": false, "label": "Consume Kafka message for user - receive latency-Aggregated", "isController": false}, {"data": [[1.0, 4071.0]], "isOverall": false, "label": "Close consumers", "isController": false}, {"data": [[1.0, 4071.0]], "isOverall": false, "label": "Close consumers-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.68537648E12, "maxY": 722.5666666666667, "series": [{"data": [[1.6853766E12, 651.6666666666666], [1.68537678E12, 0.0], [1.68537672E12, 722.5666666666667], [1.68537654E12, 0.0], [1.68537648E12, 0.0], [1.68537666E12, 635.2333333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6853766E12, 0.0], [1.68537678E12, 0.0], [1.68537672E12, 0.0], [1.68537654E12, 0.0], [1.68537648E12, 0.0], [1.68537666E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68537678E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 419.0, "minX": 1.68537648E12, "maxY": 77389.0, "series": [{"data": [[1.68537648E12, 419.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.6853766E12, 17491.37215298664], [1.68537672E12, 16304.945701357467], [1.68537666E12, 18396.44067796612]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68537654E12, 77389.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.6853766E12, 19963.896666666657]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68537678E12, 4071.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68537678E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68537648E12, "maxY": 4.9E-324, "series": [{"data": [[1.68537648E12, 0.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.6853766E12, 0.0], [1.68537672E12, 0.0], [1.68537666E12, 0.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68537654E12, 0.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.6853766E12, 0.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68537678E12, 0.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68537678E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68537648E12, "maxY": 4.9E-324, "series": [{"data": [[1.68537648E12, 0.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.6853766E12, 0.0], [1.68537672E12, 0.0], [1.68537666E12, 0.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68537654E12, 0.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.6853766E12, 0.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68537678E12, 0.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68537678E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 70.0, "minX": 1.68537648E12, "maxY": 77389.0, "series": [{"data": [[1.6853766E12, 34807.0], [1.68537678E12, 4071.0], [1.68537672E12, 47053.0], [1.68537654E12, 77389.0], [1.68537648E12, 419.0], [1.68537666E12, 26664.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6853766E12, 23095.4], [1.68537678E12, 4071.0], [1.68537672E12, 24173.0], [1.68537654E12, 77389.0], [1.68537648E12, 419.0], [1.68537666E12, 22958.700000000004]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6853766E12, 25034.64], [1.68537678E12, 4071.0], [1.68537672E12, 38879.119999999944], [1.68537654E12, 77389.0], [1.68537648E12, 419.0], [1.68537666E12, 25869.250000000004]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6853766E12, 23816.4], [1.68537678E12, 4071.0], [1.68537672E12, 26907.0], [1.68537654E12, 77389.0], [1.68537648E12, 419.0], [1.68537666E12, 24248.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6853766E12, 3528.0], [1.68537678E12, 4071.0], [1.68537672E12, 70.0], [1.68537654E12, 77389.0], [1.68537648E12, 419.0], [1.68537666E12, 4381.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6853766E12, 18524.0], [1.68537678E12, 4071.0], [1.68537672E12, 16907.0], [1.68537654E12, 77389.0], [1.68537648E12, 419.0], [1.68537666E12, 18898.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68537678E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3040.0, "minX": 1.0, "maxY": 25847.0, "series": [{"data": [[2.0, 11975.0], [522.0, 16846.5], [564.0, 18869.0], [3.0, 16666.5], [4.0, 18082.5], [5.0, 15934.0], [6.0, 14143.5], [7.0, 10718.0], [8.0, 14656.5], [9.0, 13879.0], [10.0, 10891.5], [11.0, 16523.0], [12.0, 8961.5], [13.0, 16347.5], [14.0, 17839.0], [15.0, 16751.0], [16.0, 15564.0], [18.0, 15298.5], [19.0, 9490.5], [20.0, 16440.5], [21.0, 13390.0], [23.0, 13971.0], [24.0, 15002.0], [25.0, 19400.5], [26.0, 14308.5], [27.0, 4789.0], [28.0, 9574.0], [29.0, 18296.0], [31.0, 18866.0], [33.0, 7080.0], [35.0, 20494.0], [34.0, 6690.5], [36.0, 3040.0], [38.0, 13012.5], [41.0, 24641.0], [46.0, 17608.5], [49.0, 25847.0], [54.0, 15163.5], [55.0, 18651.0], [56.0, 18823.0], [57.0, 21008.0], [63.0, 24461.0], [64.0, 15585.5], [69.0, 11718.0], [74.0, 14228.0], [92.0, 15306.0], [104.0, 10836.5], [110.0, 3296.0], [112.0, 18845.0], [115.0, 22092.0], [130.0, 21464.0], [128.0, 16623.0], [151.0, 19144.0], [164.0, 21247.5], [175.0, 22661.0], [187.0, 15869.0], [197.0, 23405.0], [203.0, 21911.0], [209.0, 24244.0], [235.0, 20367.0], [240.0, 22487.0], [243.0, 17060.0], [1.0, 11288.0], [302.0, 18206.5], [365.0, 17155.0], [395.0, 20269.0], [431.0, 17638.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 564.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[2.0, 0.0], [522.0, 0.0], [564.0, 0.0], [3.0, 0.0], [4.0, 0.0], [5.0, 0.0], [6.0, 0.0], [7.0, 0.0], [8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [16.0, 0.0], [18.0, 0.0], [19.0, 0.0], [20.0, 0.0], [21.0, 0.0], [23.0, 0.0], [24.0, 0.0], [25.0, 0.0], [26.0, 0.0], [27.0, 0.0], [28.0, 0.0], [29.0, 0.0], [31.0, 0.0], [33.0, 0.0], [35.0, 0.0], [34.0, 0.0], [36.0, 0.0], [38.0, 0.0], [41.0, 0.0], [46.0, 0.0], [49.0, 0.0], [54.0, 0.0], [55.0, 0.0], [56.0, 0.0], [57.0, 0.0], [63.0, 0.0], [64.0, 0.0], [69.0, 0.0], [74.0, 0.0], [92.0, 0.0], [104.0, 0.0], [110.0, 0.0], [112.0, 0.0], [115.0, 0.0], [130.0, 0.0], [128.0, 0.0], [151.0, 0.0], [164.0, 0.0], [175.0, 0.0], [187.0, 0.0], [197.0, 0.0], [203.0, 0.0], [209.0, 0.0], [235.0, 0.0], [240.0, 0.0], [243.0, 0.0], [1.0, 0.0], [302.0, 0.0], [365.0, 0.0], [395.0, 0.0], [431.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 564.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68537648E12, "maxY": 38.78333333333333, "series": [{"data": [[1.6853766E12, 38.78333333333333], [1.68537672E12, 28.866666666666667], [1.68537654E12, 16.666666666666668], [1.68537648E12, 0.03333333333333333], [1.68537666E12, 37.36666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68537672E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68537648E12, "maxY": 43.78333333333333, "series": [{"data": [[1.6853766E12, 43.78333333333333], [1.68537678E12, 0.016666666666666666], [1.68537672E12, 40.516666666666666], [1.68537654E12, 0.016666666666666666], [1.68537648E12, 0.016666666666666666], [1.68537666E12, 37.36666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68537678E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68537648E12, "maxY": 40.516666666666666, "series": [{"data": [[1.6853766E12, 5.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency-success", "isController": false}, {"data": [[1.68537648E12, 0.016666666666666666]], "isOverall": false, "label": "create message-success", "isController": false}, {"data": [[1.68537654E12, 0.016666666666666666]], "isOverall": false, "label": "Create + subscribe consumers-success", "isController": false}, {"data": [[1.6853766E12, 38.78333333333333], [1.68537672E12, 40.516666666666666], [1.68537666E12, 37.36666666666667]], "isOverall": false, "label": "Produce Kafka message for user-success", "isController": false}, {"data": [[1.68537678E12, 0.016666666666666666]], "isOverall": false, "label": "Close consumers-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68537678E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68537648E12, "maxY": 43.78333333333333, "series": [{"data": [[1.6853766E12, 43.78333333333333], [1.68537678E12, 0.016666666666666666], [1.68537672E12, 40.516666666666666], [1.68537654E12, 0.016666666666666666], [1.68537648E12, 0.016666666666666666], [1.68537666E12, 37.36666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68537678E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

