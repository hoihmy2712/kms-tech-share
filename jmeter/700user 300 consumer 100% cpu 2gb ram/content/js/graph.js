/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 467.0, "minX": 0.0, "maxY": 77461.0, "series": [{"data": [[0.0, 467.0], [0.1, 467.0], [0.2, 467.0], [0.3, 467.0], [0.4, 467.0], [0.5, 467.0], [0.6, 467.0], [0.7, 467.0], [0.8, 467.0], [0.9, 467.0], [1.0, 467.0], [1.1, 467.0], [1.2, 467.0], [1.3, 467.0], [1.4, 467.0], [1.5, 467.0], [1.6, 467.0], [1.7, 467.0], [1.8, 467.0], [1.9, 467.0], [2.0, 467.0], [2.1, 467.0], [2.2, 467.0], [2.3, 467.0], [2.4, 467.0], [2.5, 467.0], [2.6, 467.0], [2.7, 467.0], [2.8, 467.0], [2.9, 467.0], [3.0, 467.0], [3.1, 467.0], [3.2, 467.0], [3.3, 467.0], [3.4, 467.0], [3.5, 467.0], [3.6, 467.0], [3.7, 467.0], [3.8, 467.0], [3.9, 467.0], [4.0, 467.0], [4.1, 467.0], [4.2, 467.0], [4.3, 467.0], [4.4, 467.0], [4.5, 467.0], [4.6, 467.0], [4.7, 467.0], [4.8, 467.0], [4.9, 467.0], [5.0, 467.0], [5.1, 467.0], [5.2, 467.0], [5.3, 467.0], [5.4, 467.0], [5.5, 467.0], [5.6, 467.0], [5.7, 467.0], [5.8, 467.0], [5.9, 467.0], [6.0, 467.0], [6.1, 467.0], [6.2, 467.0], [6.3, 467.0], [6.4, 467.0], [6.5, 467.0], [6.6, 467.0], [6.7, 467.0], [6.8, 467.0], [6.9, 467.0], [7.0, 467.0], [7.1, 467.0], [7.2, 467.0], [7.3, 467.0], [7.4, 467.0], [7.5, 467.0], [7.6, 467.0], [7.7, 467.0], [7.8, 467.0], [7.9, 467.0], [8.0, 467.0], [8.1, 467.0], [8.2, 467.0], [8.3, 467.0], [8.4, 467.0], [8.5, 467.0], [8.6, 467.0], [8.7, 467.0], [8.8, 467.0], [8.9, 467.0], [9.0, 467.0], [9.1, 467.0], [9.2, 467.0], [9.3, 467.0], [9.4, 467.0], [9.5, 467.0], [9.6, 467.0], [9.7, 467.0], [9.8, 467.0], [9.9, 467.0], [10.0, 467.0], [10.1, 467.0], [10.2, 467.0], [10.3, 467.0], [10.4, 467.0], [10.5, 467.0], [10.6, 467.0], [10.7, 467.0], [10.8, 467.0], [10.9, 467.0], [11.0, 467.0], [11.1, 467.0], [11.2, 467.0], [11.3, 467.0], [11.4, 467.0], [11.5, 467.0], [11.6, 467.0], [11.7, 467.0], [11.8, 467.0], [11.9, 467.0], [12.0, 467.0], [12.1, 467.0], [12.2, 467.0], [12.3, 467.0], [12.4, 467.0], [12.5, 467.0], [12.6, 467.0], [12.7, 467.0], [12.8, 467.0], [12.9, 467.0], [13.0, 467.0], [13.1, 467.0], [13.2, 467.0], [13.3, 467.0], [13.4, 467.0], [13.5, 467.0], [13.6, 467.0], [13.7, 467.0], [13.8, 467.0], [13.9, 467.0], [14.0, 467.0], [14.1, 467.0], [14.2, 467.0], [14.3, 467.0], [14.4, 467.0], [14.5, 467.0], [14.6, 467.0], [14.7, 467.0], [14.8, 467.0], [14.9, 467.0], [15.0, 467.0], [15.1, 467.0], [15.2, 467.0], [15.3, 467.0], [15.4, 467.0], [15.5, 467.0], [15.6, 467.0], [15.7, 467.0], [15.8, 467.0], [15.9, 467.0], [16.0, 467.0], [16.1, 467.0], [16.2, 467.0], [16.3, 467.0], [16.4, 467.0], [16.5, 467.0], [16.6, 467.0], [16.7, 467.0], [16.8, 467.0], [16.9, 467.0], [17.0, 467.0], [17.1, 467.0], [17.2, 467.0], [17.3, 467.0], [17.4, 467.0], [17.5, 467.0], [17.6, 467.0], [17.7, 467.0], [17.8, 467.0], [17.9, 467.0], [18.0, 467.0], [18.1, 467.0], [18.2, 467.0], [18.3, 467.0], [18.4, 467.0], [18.5, 467.0], [18.6, 467.0], [18.7, 467.0], [18.8, 467.0], [18.9, 467.0], [19.0, 467.0], [19.1, 467.0], [19.2, 467.0], [19.3, 467.0], [19.4, 467.0], [19.5, 467.0], [19.6, 467.0], [19.7, 467.0], [19.8, 467.0], [19.9, 467.0], [20.0, 467.0], [20.1, 467.0], [20.2, 467.0], [20.3, 467.0], [20.4, 467.0], [20.5, 467.0], [20.6, 467.0], [20.7, 467.0], [20.8, 467.0], [20.9, 467.0], [21.0, 467.0], [21.1, 467.0], [21.2, 467.0], [21.3, 467.0], [21.4, 467.0], [21.5, 467.0], [21.6, 467.0], [21.7, 467.0], [21.8, 467.0], [21.9, 467.0], [22.0, 467.0], [22.1, 467.0], [22.2, 467.0], [22.3, 467.0], [22.4, 467.0], [22.5, 467.0], [22.6, 467.0], [22.7, 467.0], [22.8, 467.0], [22.9, 467.0], [23.0, 467.0], [23.1, 467.0], [23.2, 467.0], [23.3, 467.0], [23.4, 467.0], [23.5, 467.0], [23.6, 467.0], [23.7, 467.0], [23.8, 467.0], [23.9, 467.0], [24.0, 467.0], [24.1, 467.0], [24.2, 467.0], [24.3, 467.0], [24.4, 467.0], [24.5, 467.0], [24.6, 467.0], [24.7, 467.0], [24.8, 467.0], [24.9, 467.0], [25.0, 467.0], [25.1, 467.0], [25.2, 467.0], [25.3, 467.0], [25.4, 467.0], [25.5, 467.0], [25.6, 467.0], [25.7, 467.0], [25.8, 467.0], [25.9, 467.0], [26.0, 467.0], [26.1, 467.0], [26.2, 467.0], [26.3, 467.0], [26.4, 467.0], [26.5, 467.0], [26.6, 467.0], [26.7, 467.0], [26.8, 467.0], [26.9, 467.0], [27.0, 467.0], [27.1, 467.0], [27.2, 467.0], [27.3, 467.0], [27.4, 467.0], [27.5, 467.0], [27.6, 467.0], [27.7, 467.0], [27.8, 467.0], [27.9, 467.0], [28.0, 467.0], [28.1, 467.0], [28.2, 467.0], [28.3, 467.0], [28.4, 467.0], [28.5, 467.0], [28.6, 467.0], [28.7, 467.0], [28.8, 467.0], [28.9, 467.0], [29.0, 467.0], [29.1, 467.0], [29.2, 467.0], [29.3, 467.0], [29.4, 467.0], [29.5, 467.0], [29.6, 467.0], [29.7, 467.0], [29.8, 467.0], [29.9, 467.0], [30.0, 467.0], [30.1, 467.0], [30.2, 467.0], [30.3, 467.0], [30.4, 467.0], [30.5, 467.0], [30.6, 467.0], [30.7, 467.0], [30.8, 467.0], [30.9, 467.0], [31.0, 467.0], [31.1, 467.0], [31.2, 467.0], [31.3, 467.0], [31.4, 467.0], [31.5, 467.0], [31.6, 467.0], [31.7, 467.0], [31.8, 467.0], [31.9, 467.0], [32.0, 467.0], [32.1, 467.0], [32.2, 467.0], [32.3, 467.0], [32.4, 467.0], [32.5, 467.0], [32.6, 467.0], [32.7, 467.0], [32.8, 467.0], [32.9, 467.0], [33.0, 467.0], [33.1, 467.0], [33.2, 467.0], [33.3, 467.0], [33.4, 467.0], [33.5, 467.0], [33.6, 467.0], [33.7, 467.0], [33.8, 467.0], [33.9, 467.0], [34.0, 467.0], [34.1, 467.0], [34.2, 467.0], [34.3, 467.0], [34.4, 467.0], [34.5, 467.0], [34.6, 467.0], [34.7, 467.0], [34.8, 467.0], [34.9, 467.0], [35.0, 467.0], [35.1, 467.0], [35.2, 467.0], [35.3, 467.0], [35.4, 467.0], [35.5, 467.0], [35.6, 467.0], [35.7, 467.0], [35.8, 467.0], [35.9, 467.0], [36.0, 467.0], [36.1, 467.0], [36.2, 467.0], [36.3, 467.0], [36.4, 467.0], [36.5, 467.0], [36.6, 467.0], [36.7, 467.0], [36.8, 467.0], [36.9, 467.0], [37.0, 467.0], [37.1, 467.0], [37.2, 467.0], [37.3, 467.0], [37.4, 467.0], [37.5, 467.0], [37.6, 467.0], [37.7, 467.0], [37.8, 467.0], [37.9, 467.0], [38.0, 467.0], [38.1, 467.0], [38.2, 467.0], [38.3, 467.0], [38.4, 467.0], [38.5, 467.0], [38.6, 467.0], [38.7, 467.0], [38.8, 467.0], [38.9, 467.0], [39.0, 467.0], [39.1, 467.0], [39.2, 467.0], [39.3, 467.0], [39.4, 467.0], [39.5, 467.0], [39.6, 467.0], [39.7, 467.0], [39.8, 467.0], [39.9, 467.0], [40.0, 467.0], [40.1, 467.0], [40.2, 467.0], [40.3, 467.0], [40.4, 467.0], [40.5, 467.0], [40.6, 467.0], [40.7, 467.0], [40.8, 467.0], [40.9, 467.0], [41.0, 467.0], [41.1, 467.0], [41.2, 467.0], [41.3, 467.0], [41.4, 467.0], [41.5, 467.0], [41.6, 467.0], [41.7, 467.0], [41.8, 467.0], [41.9, 467.0], [42.0, 467.0], [42.1, 467.0], [42.2, 467.0], [42.3, 467.0], [42.4, 467.0], [42.5, 467.0], [42.6, 467.0], [42.7, 467.0], [42.8, 467.0], [42.9, 467.0], [43.0, 467.0], [43.1, 467.0], [43.2, 467.0], [43.3, 467.0], [43.4, 467.0], [43.5, 467.0], [43.6, 467.0], [43.7, 467.0], [43.8, 467.0], [43.9, 467.0], [44.0, 467.0], [44.1, 467.0], [44.2, 467.0], [44.3, 467.0], [44.4, 467.0], [44.5, 467.0], [44.6, 467.0], [44.7, 467.0], [44.8, 467.0], [44.9, 467.0], [45.0, 467.0], [45.1, 467.0], [45.2, 467.0], [45.3, 467.0], [45.4, 467.0], [45.5, 467.0], [45.6, 467.0], [45.7, 467.0], [45.8, 467.0], [45.9, 467.0], [46.0, 467.0], [46.1, 467.0], [46.2, 467.0], [46.3, 467.0], [46.4, 467.0], [46.5, 467.0], [46.6, 467.0], [46.7, 467.0], [46.8, 467.0], [46.9, 467.0], [47.0, 467.0], [47.1, 467.0], [47.2, 467.0], [47.3, 467.0], [47.4, 467.0], [47.5, 467.0], [47.6, 467.0], [47.7, 467.0], [47.8, 467.0], [47.9, 467.0], [48.0, 467.0], [48.1, 467.0], [48.2, 467.0], [48.3, 467.0], [48.4, 467.0], [48.5, 467.0], [48.6, 467.0], [48.7, 467.0], [48.8, 467.0], [48.9, 467.0], [49.0, 467.0], [49.1, 467.0], [49.2, 467.0], [49.3, 467.0], [49.4, 467.0], [49.5, 467.0], [49.6, 467.0], [49.7, 467.0], [49.8, 467.0], [49.9, 467.0], [50.0, 467.0], [50.1, 467.0], [50.2, 467.0], [50.3, 467.0], [50.4, 467.0], [50.5, 467.0], [50.6, 467.0], [50.7, 467.0], [50.8, 467.0], [50.9, 467.0], [51.0, 467.0], [51.1, 467.0], [51.2, 467.0], [51.3, 467.0], [51.4, 467.0], [51.5, 467.0], [51.6, 467.0], [51.7, 467.0], [51.8, 467.0], [51.9, 467.0], [52.0, 467.0], [52.1, 467.0], [52.2, 467.0], [52.3, 467.0], [52.4, 467.0], [52.5, 467.0], [52.6, 467.0], [52.7, 467.0], [52.8, 467.0], [52.9, 467.0], [53.0, 467.0], [53.1, 467.0], [53.2, 467.0], [53.3, 467.0], [53.4, 467.0], [53.5, 467.0], [53.6, 467.0], [53.7, 467.0], [53.8, 467.0], [53.9, 467.0], [54.0, 467.0], [54.1, 467.0], [54.2, 467.0], [54.3, 467.0], [54.4, 467.0], [54.5, 467.0], [54.6, 467.0], [54.7, 467.0], [54.8, 467.0], [54.9, 467.0], [55.0, 467.0], [55.1, 467.0], [55.2, 467.0], [55.3, 467.0], [55.4, 467.0], [55.5, 467.0], [55.6, 467.0], [55.7, 467.0], [55.8, 467.0], [55.9, 467.0], [56.0, 467.0], [56.1, 467.0], [56.2, 467.0], [56.3, 467.0], [56.4, 467.0], [56.5, 467.0], [56.6, 467.0], [56.7, 467.0], [56.8, 467.0], [56.9, 467.0], [57.0, 467.0], [57.1, 467.0], [57.2, 467.0], [57.3, 467.0], [57.4, 467.0], [57.5, 467.0], [57.6, 467.0], [57.7, 467.0], [57.8, 467.0], [57.9, 467.0], [58.0, 467.0], [58.1, 467.0], [58.2, 467.0], [58.3, 467.0], [58.4, 467.0], [58.5, 467.0], [58.6, 467.0], [58.7, 467.0], [58.8, 467.0], [58.9, 467.0], [59.0, 467.0], [59.1, 467.0], [59.2, 467.0], [59.3, 467.0], [59.4, 467.0], [59.5, 467.0], [59.6, 467.0], [59.7, 467.0], [59.8, 467.0], [59.9, 467.0], [60.0, 467.0], [60.1, 467.0], [60.2, 467.0], [60.3, 467.0], [60.4, 467.0], [60.5, 467.0], [60.6, 467.0], [60.7, 467.0], [60.8, 467.0], [60.9, 467.0], [61.0, 467.0], [61.1, 467.0], [61.2, 467.0], [61.3, 467.0], [61.4, 467.0], [61.5, 467.0], [61.6, 467.0], [61.7, 467.0], [61.8, 467.0], [61.9, 467.0], [62.0, 467.0], [62.1, 467.0], [62.2, 467.0], [62.3, 467.0], [62.4, 467.0], [62.5, 467.0], [62.6, 467.0], [62.7, 467.0], [62.8, 467.0], [62.9, 467.0], [63.0, 467.0], [63.1, 467.0], [63.2, 467.0], [63.3, 467.0], [63.4, 467.0], [63.5, 467.0], [63.6, 467.0], [63.7, 467.0], [63.8, 467.0], [63.9, 467.0], [64.0, 467.0], [64.1, 467.0], [64.2, 467.0], [64.3, 467.0], [64.4, 467.0], [64.5, 467.0], [64.6, 467.0], [64.7, 467.0], [64.8, 467.0], [64.9, 467.0], [65.0, 467.0], [65.1, 467.0], [65.2, 467.0], [65.3, 467.0], [65.4, 467.0], [65.5, 467.0], [65.6, 467.0], [65.7, 467.0], [65.8, 467.0], [65.9, 467.0], [66.0, 467.0], [66.1, 467.0], [66.2, 467.0], [66.3, 467.0], [66.4, 467.0], [66.5, 467.0], [66.6, 467.0], [66.7, 467.0], [66.8, 467.0], [66.9, 467.0], [67.0, 467.0], [67.1, 467.0], [67.2, 467.0], [67.3, 467.0], [67.4, 467.0], [67.5, 467.0], [67.6, 467.0], [67.7, 467.0], [67.8, 467.0], [67.9, 467.0], [68.0, 467.0], [68.1, 467.0], [68.2, 467.0], [68.3, 467.0], [68.4, 467.0], [68.5, 467.0], [68.6, 467.0], [68.7, 467.0], [68.8, 467.0], [68.9, 467.0], [69.0, 467.0], [69.1, 467.0], [69.2, 467.0], [69.3, 467.0], [69.4, 467.0], [69.5, 467.0], [69.6, 467.0], [69.7, 467.0], [69.8, 467.0], [69.9, 467.0], [70.0, 467.0], [70.1, 467.0], [70.2, 467.0], [70.3, 467.0], [70.4, 467.0], [70.5, 467.0], [70.6, 467.0], [70.7, 467.0], [70.8, 467.0], [70.9, 467.0], [71.0, 467.0], [71.1, 467.0], [71.2, 467.0], [71.3, 467.0], [71.4, 467.0], [71.5, 467.0], [71.6, 467.0], [71.7, 467.0], [71.8, 467.0], [71.9, 467.0], [72.0, 467.0], [72.1, 467.0], [72.2, 467.0], [72.3, 467.0], [72.4, 467.0], [72.5, 467.0], [72.6, 467.0], [72.7, 467.0], [72.8, 467.0], [72.9, 467.0], [73.0, 467.0], [73.1, 467.0], [73.2, 467.0], [73.3, 467.0], [73.4, 467.0], [73.5, 467.0], [73.6, 467.0], [73.7, 467.0], [73.8, 467.0], [73.9, 467.0], [74.0, 467.0], [74.1, 467.0], [74.2, 467.0], [74.3, 467.0], [74.4, 467.0], [74.5, 467.0], [74.6, 467.0], [74.7, 467.0], [74.8, 467.0], [74.9, 467.0], [75.0, 467.0], [75.1, 467.0], [75.2, 467.0], [75.3, 467.0], [75.4, 467.0], [75.5, 467.0], [75.6, 467.0], [75.7, 467.0], [75.8, 467.0], [75.9, 467.0], [76.0, 467.0], [76.1, 467.0], [76.2, 467.0], [76.3, 467.0], [76.4, 467.0], [76.5, 467.0], [76.6, 467.0], [76.7, 467.0], [76.8, 467.0], [76.9, 467.0], [77.0, 467.0], [77.1, 467.0], [77.2, 467.0], [77.3, 467.0], [77.4, 467.0], [77.5, 467.0], [77.6, 467.0], [77.7, 467.0], [77.8, 467.0], [77.9, 467.0], [78.0, 467.0], [78.1, 467.0], [78.2, 467.0], [78.3, 467.0], [78.4, 467.0], [78.5, 467.0], [78.6, 467.0], [78.7, 467.0], [78.8, 467.0], [78.9, 467.0], [79.0, 467.0], [79.1, 467.0], [79.2, 467.0], [79.3, 467.0], [79.4, 467.0], [79.5, 467.0], [79.6, 467.0], [79.7, 467.0], [79.8, 467.0], [79.9, 467.0], [80.0, 467.0], [80.1, 467.0], [80.2, 467.0], [80.3, 467.0], [80.4, 467.0], [80.5, 467.0], [80.6, 467.0], [80.7, 467.0], [80.8, 467.0], [80.9, 467.0], [81.0, 467.0], [81.1, 467.0], [81.2, 467.0], [81.3, 467.0], [81.4, 467.0], [81.5, 467.0], [81.6, 467.0], [81.7, 467.0], [81.8, 467.0], [81.9, 467.0], [82.0, 467.0], [82.1, 467.0], [82.2, 467.0], [82.3, 467.0], [82.4, 467.0], [82.5, 467.0], [82.6, 467.0], [82.7, 467.0], [82.8, 467.0], [82.9, 467.0], [83.0, 467.0], [83.1, 467.0], [83.2, 467.0], [83.3, 467.0], [83.4, 467.0], [83.5, 467.0], [83.6, 467.0], [83.7, 467.0], [83.8, 467.0], [83.9, 467.0], [84.0, 467.0], [84.1, 467.0], [84.2, 467.0], [84.3, 467.0], [84.4, 467.0], [84.5, 467.0], [84.6, 467.0], [84.7, 467.0], [84.8, 467.0], [84.9, 467.0], [85.0, 467.0], [85.1, 467.0], [85.2, 467.0], [85.3, 467.0], [85.4, 467.0], [85.5, 467.0], [85.6, 467.0], [85.7, 467.0], [85.8, 467.0], [85.9, 467.0], [86.0, 467.0], [86.1, 467.0], [86.2, 467.0], [86.3, 467.0], [86.4, 467.0], [86.5, 467.0], [86.6, 467.0], [86.7, 467.0], [86.8, 467.0], [86.9, 467.0], [87.0, 467.0], [87.1, 467.0], [87.2, 467.0], [87.3, 467.0], [87.4, 467.0], [87.5, 467.0], [87.6, 467.0], [87.7, 467.0], [87.8, 467.0], [87.9, 467.0], [88.0, 467.0], [88.1, 467.0], [88.2, 467.0], [88.3, 467.0], [88.4, 467.0], [88.5, 467.0], [88.6, 467.0], [88.7, 467.0], [88.8, 467.0], [88.9, 467.0], [89.0, 467.0], [89.1, 467.0], [89.2, 467.0], [89.3, 467.0], [89.4, 467.0], [89.5, 467.0], [89.6, 467.0], [89.7, 467.0], [89.8, 467.0], [89.9, 467.0], [90.0, 467.0], [90.1, 467.0], [90.2, 467.0], [90.3, 467.0], [90.4, 467.0], [90.5, 467.0], [90.6, 467.0], [90.7, 467.0], [90.8, 467.0], [90.9, 467.0], [91.0, 467.0], [91.1, 467.0], [91.2, 467.0], [91.3, 467.0], [91.4, 467.0], [91.5, 467.0], [91.6, 467.0], [91.7, 467.0], [91.8, 467.0], [91.9, 467.0], [92.0, 467.0], [92.1, 467.0], [92.2, 467.0], [92.3, 467.0], [92.4, 467.0], [92.5, 467.0], [92.6, 467.0], [92.7, 467.0], [92.8, 467.0], [92.9, 467.0], [93.0, 467.0], [93.1, 467.0], [93.2, 467.0], [93.3, 467.0], [93.4, 467.0], [93.5, 467.0], [93.6, 467.0], [93.7, 467.0], [93.8, 467.0], [93.9, 467.0], [94.0, 467.0], [94.1, 467.0], [94.2, 467.0], [94.3, 467.0], [94.4, 467.0], [94.5, 467.0], [94.6, 467.0], [94.7, 467.0], [94.8, 467.0], [94.9, 467.0], [95.0, 467.0], [95.1, 467.0], [95.2, 467.0], [95.3, 467.0], [95.4, 467.0], [95.5, 467.0], [95.6, 467.0], [95.7, 467.0], [95.8, 467.0], [95.9, 467.0], [96.0, 467.0], [96.1, 467.0], [96.2, 467.0], [96.3, 467.0], [96.4, 467.0], [96.5, 467.0], [96.6, 467.0], [96.7, 467.0], [96.8, 467.0], [96.9, 467.0], [97.0, 467.0], [97.1, 467.0], [97.2, 467.0], [97.3, 467.0], [97.4, 467.0], [97.5, 467.0], [97.6, 467.0], [97.7, 467.0], [97.8, 467.0], [97.9, 467.0], [98.0, 467.0], [98.1, 467.0], [98.2, 467.0], [98.3, 467.0], [98.4, 467.0], [98.5, 467.0], [98.6, 467.0], [98.7, 467.0], [98.8, 467.0], [98.9, 467.0], [99.0, 467.0], [99.1, 467.0], [99.2, 467.0], [99.3, 467.0], [99.4, 467.0], [99.5, 467.0], [99.6, 467.0], [99.7, 467.0], [99.8, 467.0], [99.9, 467.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[0.0, 2870.0], [0.1, 3057.0], [0.2, 4393.0], [0.3, 4698.0], [0.4, 4781.0], [0.5, 5032.0], [0.6, 5221.0], [0.7, 5446.0], [0.8, 5941.0], [0.9, 6957.0], [1.0, 7105.0], [1.1, 7241.0], [1.2, 7426.0], [1.3, 7522.0], [1.4, 7540.0], [1.5, 7621.0], [1.6, 7649.0], [1.7, 7777.0], [1.8, 7836.0], [1.9, 7919.0], [2.0, 8014.0], [2.1, 8075.0], [2.2, 8122.0], [2.3, 8171.0], [2.4, 8224.0], [2.5, 8290.0], [2.6, 8350.0], [2.7, 8399.0], [2.8, 8438.0], [2.9, 8514.0], [3.0, 8553.0], [3.1, 8578.0], [3.2, 8619.0], [3.3, 8648.0], [3.4, 8661.0], [3.5, 8681.0], [3.6, 8727.0], [3.7, 8754.0], [3.8, 8792.0], [3.9, 8846.0], [4.0, 8863.0], [4.1, 8904.0], [4.2, 8931.0], [4.3, 8949.0], [4.4, 8961.0], [4.5, 8990.0], [4.6, 9018.0], [4.7, 9052.0], [4.8, 9084.0], [4.9, 9118.0], [5.0, 9151.0], [5.1, 9167.0], [5.2, 9187.0], [5.3, 9202.0], [5.4, 9216.0], [5.5, 9233.0], [5.6, 9245.0], [5.7, 9257.0], [5.8, 9263.0], [5.9, 9273.0], [6.0, 9278.0], [6.1, 9314.0], [6.2, 9379.0], [6.3, 9405.0], [6.4, 9412.0], [6.5, 9427.0], [6.6, 9442.0], [6.7, 9449.0], [6.8, 9458.0], [6.9, 9477.0], [7.0, 9490.0], [7.1, 9504.0], [7.2, 9520.0], [7.3, 9534.0], [7.4, 9555.0], [7.5, 9582.0], [7.6, 9594.0], [7.7, 9608.0], [7.8, 9621.0], [7.9, 9634.0], [8.0, 9654.0], [8.1, 9679.0], [8.2, 9705.0], [8.3, 9725.0], [8.4, 9733.0], [8.5, 9757.0], [8.6, 9776.0], [8.7, 9784.0], [8.8, 9800.0], [8.9, 9819.0], [9.0, 9828.0], [9.1, 9837.0], [9.2, 9848.0], [9.3, 9854.0], [9.4, 9868.0], [9.5, 9872.0], [9.6, 9875.0], [9.7, 9880.0], [9.8, 9887.0], [9.9, 9891.0], [10.0, 9895.0], [10.1, 9900.0], [10.2, 9904.0], [10.3, 9912.0], [10.4, 9922.0], [10.5, 9936.0], [10.6, 9955.0], [10.7, 9964.0], [10.8, 9977.0], [10.9, 9982.0], [11.0, 9989.0], [11.1, 9994.0], [11.2, 10007.0], [11.3, 10016.0], [11.4, 10022.0], [11.5, 10032.0], [11.6, 10047.0], [11.7, 10052.0], [11.8, 10056.0], [11.9, 10074.0], [12.0, 10082.0], [12.1, 10085.0], [12.2, 10092.0], [12.3, 10103.0], [12.4, 10107.0], [12.5, 10109.0], [12.6, 10117.0], [12.7, 10121.0], [12.8, 10128.0], [12.9, 10140.0], [13.0, 10150.0], [13.1, 10163.0], [13.2, 10169.0], [13.3, 10173.0], [13.4, 10191.0], [13.5, 10199.0], [13.6, 10204.0], [13.7, 10209.0], [13.8, 10213.0], [13.9, 10219.0], [14.0, 10224.0], [14.1, 10228.0], [14.2, 10236.0], [14.3, 10243.0], [14.4, 10254.0], [14.5, 10258.0], [14.6, 10260.0], [14.7, 10263.0], [14.8, 10267.0], [14.9, 10272.0], [15.0, 10277.0], [15.1, 10286.0], [15.2, 10293.0], [15.3, 10299.0], [15.4, 10306.0], [15.5, 10320.0], [15.6, 10339.0], [15.7, 10345.0], [15.8, 10359.0], [15.9, 10363.0], [16.0, 10368.0], [16.1, 10383.0], [16.2, 10388.0], [16.3, 10393.0], [16.4, 10395.0], [16.5, 10397.0], [16.6, 10402.0], [16.7, 10405.0], [16.8, 10412.0], [16.9, 10423.0], [17.0, 10427.0], [17.1, 10431.0], [17.2, 10433.0], [17.3, 10435.0], [17.4, 10438.0], [17.5, 10439.0], [17.6, 10442.0], [17.7, 10446.0], [17.8, 10450.0], [17.9, 10456.0], [18.0, 10460.0], [18.1, 10467.0], [18.2, 10470.0], [18.3, 10472.0], [18.4, 10473.0], [18.5, 10476.0], [18.6, 10477.0], [18.7, 10480.0], [18.8, 10483.0], [18.9, 10486.0], [19.0, 10488.0], [19.1, 10495.0], [19.2, 10499.0], [19.3, 10501.0], [19.4, 10506.0], [19.5, 10509.0], [19.6, 10514.0], [19.7, 10516.0], [19.8, 10520.0], [19.9, 10524.0], [20.0, 10526.0], [20.1, 10535.0], [20.2, 10544.0], [20.3, 10552.0], [20.4, 10557.0], [20.5, 10579.0], [20.6, 10598.0], [20.7, 10608.0], [20.8, 10617.0], [20.9, 10633.0], [21.0, 10652.0], [21.1, 10664.0], [21.2, 10671.0], [21.3, 10683.0], [21.4, 10695.0], [21.5, 10706.0], [21.6, 10713.0], [21.7, 10723.0], [21.8, 10737.0], [21.9, 10744.0], [22.0, 10756.0], [22.1, 10769.0], [22.2, 10774.0], [22.3, 10781.0], [22.4, 10786.0], [22.5, 10795.0], [22.6, 10804.0], [22.7, 10808.0], [22.8, 10812.0], [22.9, 10820.0], [23.0, 10826.0], [23.1, 10830.0], [23.2, 10846.0], [23.3, 10855.0], [23.4, 10862.0], [23.5, 10869.0], [23.6, 10879.0], [23.7, 10884.0], [23.8, 10896.0], [23.9, 10904.0], [24.0, 10937.0], [24.1, 10950.0], [24.2, 10957.0], [24.3, 10963.0], [24.4, 10968.0], [24.5, 10972.0], [24.6, 10977.0], [24.7, 10985.0], [24.8, 10995.0], [24.9, 11010.0], [25.0, 11016.0], [25.1, 11019.0], [25.2, 11032.0], [25.3, 11054.0], [25.4, 11064.0], [25.5, 11081.0], [25.6, 11092.0], [25.7, 11114.0], [25.8, 11123.0], [25.9, 11132.0], [26.0, 11137.0], [26.1, 11156.0], [26.2, 11164.0], [26.3, 11171.0], [26.4, 11182.0], [26.5, 11188.0], [26.6, 11198.0], [26.7, 11210.0], [26.8, 11217.0], [26.9, 11221.0], [27.0, 11225.0], [27.1, 11242.0], [27.2, 11258.0], [27.3, 11266.0], [27.4, 11268.0], [27.5, 11271.0], [27.6, 11272.0], [27.7, 11276.0], [27.8, 11277.0], [27.9, 11280.0], [28.0, 11282.0], [28.1, 11284.0], [28.2, 11286.0], [28.3, 11290.0], [28.4, 11293.0], [28.5, 11302.0], [28.6, 11310.0], [28.7, 11316.0], [28.8, 11321.0], [28.9, 11325.0], [29.0, 11336.0], [29.1, 11340.0], [29.2, 11347.0], [29.3, 11352.0], [29.4, 11356.0], [29.5, 11365.0], [29.6, 11386.0], [29.7, 11390.0], [29.8, 11394.0], [29.9, 11399.0], [30.0, 11405.0], [30.1, 11410.0], [30.2, 11422.0], [30.3, 11431.0], [30.4, 11435.0], [30.5, 11445.0], [30.6, 11454.0], [30.7, 11462.0], [30.8, 11479.0], [30.9, 11508.0], [31.0, 11517.0], [31.1, 11547.0], [31.2, 11566.0], [31.3, 11588.0], [31.4, 11599.0], [31.5, 11603.0], [31.6, 11616.0], [31.7, 11638.0], [31.8, 11648.0], [31.9, 11652.0], [32.0, 11658.0], [32.1, 11668.0], [32.2, 11690.0], [32.3, 11709.0], [32.4, 11720.0], [32.5, 11751.0], [32.6, 11763.0], [32.7, 11777.0], [32.8, 11792.0], [32.9, 11813.0], [33.0, 11836.0], [33.1, 11849.0], [33.2, 11875.0], [33.3, 11885.0], [33.4, 11895.0], [33.5, 11924.0], [33.6, 11931.0], [33.7, 11947.0], [33.8, 11959.0], [33.9, 11962.0], [34.0, 11965.0], [34.1, 11968.0], [34.2, 11970.0], [34.3, 11972.0], [34.4, 11973.0], [34.5, 11975.0], [34.6, 11977.0], [34.7, 11979.0], [34.8, 11980.0], [34.9, 11981.0], [35.0, 11982.0], [35.1, 11983.0], [35.2, 11985.0], [35.3, 11987.0], [35.4, 11990.0], [35.5, 11993.0], [35.6, 11997.0], [35.7, 12002.0], [35.8, 12006.0], [35.9, 12008.0], [36.0, 12010.0], [36.1, 12011.0], [36.2, 12016.0], [36.3, 12019.0], [36.4, 12021.0], [36.5, 12023.0], [36.6, 12024.0], [36.7, 12026.0], [36.8, 12026.0], [36.9, 12028.0], [37.0, 12030.0], [37.1, 12032.0], [37.2, 12034.0], [37.3, 12039.0], [37.4, 12051.0], [37.5, 12084.0], [37.6, 12111.0], [37.7, 12119.0], [37.8, 12147.0], [37.9, 12186.0], [38.0, 12200.0], [38.1, 12210.0], [38.2, 12235.0], [38.3, 12259.0], [38.4, 12279.0], [38.5, 12298.0], [38.6, 12366.0], [38.7, 12400.0], [38.8, 12411.0], [38.9, 12455.0], [39.0, 12475.0], [39.1, 12499.0], [39.2, 12522.0], [39.3, 12551.0], [39.4, 12583.0], [39.5, 12620.0], [39.6, 12655.0], [39.7, 12714.0], [39.8, 12741.0], [39.9, 12757.0], [40.0, 12806.0], [40.1, 12826.0], [40.2, 12847.0], [40.3, 12867.0], [40.4, 12889.0], [40.5, 12908.0], [40.6, 12930.0], [40.7, 12960.0], [40.8, 12991.0], [40.9, 13018.0], [41.0, 13039.0], [41.1, 13066.0], [41.2, 13086.0], [41.3, 13129.0], [41.4, 13151.0], [41.5, 13177.0], [41.6, 13196.0], [41.7, 13246.0], [41.8, 13294.0], [41.9, 13329.0], [42.0, 13366.0], [42.1, 13401.0], [42.2, 13415.0], [42.3, 13441.0], [42.4, 13462.0], [42.5, 13477.0], [42.6, 13499.0], [42.7, 13518.0], [42.8, 13539.0], [42.9, 13548.0], [43.0, 13567.0], [43.1, 13581.0], [43.2, 13599.0], [43.3, 13625.0], [43.4, 13665.0], [43.5, 13715.0], [43.6, 13753.0], [43.7, 13780.0], [43.8, 13820.0], [43.9, 13858.0], [44.0, 13903.0], [44.1, 13928.0], [44.2, 13966.0], [44.3, 13986.0], [44.4, 14003.0], [44.5, 14024.0], [44.6, 14052.0], [44.7, 14069.0], [44.8, 14085.0], [44.9, 14102.0], [45.0, 14114.0], [45.1, 14131.0], [45.2, 14141.0], [45.3, 14167.0], [45.4, 14188.0], [45.5, 14203.0], [45.6, 14233.0], [45.7, 14258.0], [45.8, 14280.0], [45.9, 14312.0], [46.0, 14340.0], [46.1, 14346.0], [46.2, 14367.0], [46.3, 14377.0], [46.4, 14399.0], [46.5, 14410.0], [46.6, 14425.0], [46.7, 14439.0], [46.8, 14448.0], [46.9, 14464.0], [47.0, 14482.0], [47.1, 14496.0], [47.2, 14512.0], [47.3, 14533.0], [47.4, 14555.0], [47.5, 14575.0], [47.6, 14587.0], [47.7, 14594.0], [47.8, 14597.0], [47.9, 14612.0], [48.0, 14623.0], [48.1, 14632.0], [48.2, 14636.0], [48.3, 14640.0], [48.4, 14644.0], [48.5, 14649.0], [48.6, 14653.0], [48.7, 14669.0], [48.8, 14676.0], [48.9, 14688.0], [49.0, 14698.0], [49.1, 14704.0], [49.2, 14709.0], [49.3, 14716.0], [49.4, 14721.0], [49.5, 14726.0], [49.6, 14737.0], [49.7, 14742.0], [49.8, 14747.0], [49.9, 14754.0], [50.0, 14757.0], [50.1, 14766.0], [50.2, 14777.0], [50.3, 14783.0], [50.4, 14792.0], [50.5, 14822.0], [50.6, 14833.0], [50.7, 14843.0], [50.8, 14852.0], [50.9, 14860.0], [51.0, 14868.0], [51.1, 14877.0], [51.2, 14888.0], [51.3, 14908.0], [51.4, 14913.0], [51.5, 14939.0], [51.6, 14948.0], [51.7, 14969.0], [51.8, 14985.0], [51.9, 15007.0], [52.0, 15030.0], [52.1, 15043.0], [52.2, 15058.0], [52.3, 15081.0], [52.4, 15110.0], [52.5, 15136.0], [52.6, 15140.0], [52.7, 15163.0], [52.8, 15178.0], [52.9, 15195.0], [53.0, 15210.0], [53.1, 15217.0], [53.2, 15222.0], [53.3, 15232.0], [53.4, 15236.0], [53.5, 15252.0], [53.6, 15286.0], [53.7, 15332.0], [53.8, 15357.0], [53.9, 15369.0], [54.0, 15424.0], [54.1, 15451.0], [54.2, 15476.0], [54.3, 15482.0], [54.4, 15506.0], [54.5, 15528.0], [54.6, 15537.0], [54.7, 15545.0], [54.8, 15566.0], [54.9, 15574.0], [55.0, 15590.0], [55.1, 15637.0], [55.2, 15656.0], [55.3, 15663.0], [55.4, 15667.0], [55.5, 15688.0], [55.6, 15693.0], [55.7, 15701.0], [55.8, 15721.0], [55.9, 15735.0], [56.0, 15754.0], [56.1, 15760.0], [56.2, 15782.0], [56.3, 15796.0], [56.4, 15807.0], [56.5, 15823.0], [56.6, 15837.0], [56.7, 15848.0], [56.8, 15852.0], [56.9, 15862.0], [57.0, 15879.0], [57.1, 15901.0], [57.2, 15908.0], [57.3, 15916.0], [57.4, 15925.0], [57.5, 15931.0], [57.6, 15940.0], [57.7, 15953.0], [57.8, 15979.0], [57.9, 15993.0], [58.0, 16033.0], [58.1, 16045.0], [58.2, 16073.0], [58.3, 16095.0], [58.4, 16122.0], [58.5, 16152.0], [58.6, 16203.0], [58.7, 16231.0], [58.8, 16240.0], [58.9, 16250.0], [59.0, 16265.0], [59.1, 16271.0], [59.2, 16291.0], [59.3, 16307.0], [59.4, 16360.0], [59.5, 16390.0], [59.6, 16442.0], [59.7, 16449.0], [59.8, 16458.0], [59.9, 16495.0], [60.0, 16520.0], [60.1, 16551.0], [60.2, 16575.0], [60.3, 16631.0], [60.4, 16657.0], [60.5, 16675.0], [60.6, 16692.0], [60.7, 16764.0], [60.8, 16780.0], [60.9, 16787.0], [61.0, 16793.0], [61.1, 16796.0], [61.2, 16798.0], [61.3, 16802.0], [61.4, 16804.0], [61.5, 16805.0], [61.6, 16807.0], [61.7, 16809.0], [61.8, 16811.0], [61.9, 16812.0], [62.0, 16814.0], [62.1, 16816.0], [62.2, 16818.0], [62.3, 16819.0], [62.4, 16821.0], [62.5, 16822.0], [62.6, 16824.0], [62.7, 16825.0], [62.8, 16828.0], [62.9, 16829.0], [63.0, 16832.0], [63.1, 16834.0], [63.2, 16835.0], [63.3, 16836.0], [63.4, 16839.0], [63.5, 16842.0], [63.6, 16843.0], [63.7, 16845.0], [63.8, 16847.0], [63.9, 16848.0], [64.0, 16849.0], [64.1, 16852.0], [64.2, 16852.0], [64.3, 16853.0], [64.4, 16856.0], [64.5, 16858.0], [64.6, 16860.0], [64.7, 16862.0], [64.8, 16863.0], [64.9, 16865.0], [65.0, 16868.0], [65.1, 16872.0], [65.2, 16873.0], [65.3, 16876.0], [65.4, 16879.0], [65.5, 16883.0], [65.6, 16886.0], [65.7, 16889.0], [65.8, 16896.0], [65.9, 16901.0], [66.0, 16903.0], [66.1, 16908.0], [66.2, 16913.0], [66.3, 16916.0], [66.4, 16920.0], [66.5, 16924.0], [66.6, 16930.0], [66.7, 16936.0], [66.8, 16943.0], [66.9, 16945.0], [67.0, 16948.0], [67.1, 16951.0], [67.2, 16957.0], [67.3, 16959.0], [67.4, 16962.0], [67.5, 16966.0], [67.6, 16972.0], [67.7, 16976.0], [67.8, 16982.0], [67.9, 16986.0], [68.0, 17010.0], [68.1, 17050.0], [68.2, 17091.0], [68.3, 17101.0], [68.4, 17131.0], [68.5, 17195.0], [68.6, 17214.0], [68.7, 17275.0], [68.8, 17318.0], [68.9, 17348.0], [69.0, 17404.0], [69.1, 17435.0], [69.2, 17446.0], [69.3, 17458.0], [69.4, 17477.0], [69.5, 17494.0], [69.6, 17518.0], [69.7, 17530.0], [69.8, 17549.0], [69.9, 17566.0], [70.0, 17598.0], [70.1, 17608.0], [70.2, 17619.0], [70.3, 17629.0], [70.4, 17644.0], [70.5, 17656.0], [70.6, 17665.0], [70.7, 17677.0], [70.8, 17681.0], [70.9, 17726.0], [71.0, 17789.0], [71.1, 17795.0], [71.2, 17800.0], [71.3, 17833.0], [71.4, 17841.0], [71.5, 17901.0], [71.6, 17955.0], [71.7, 17971.0], [71.8, 18010.0], [71.9, 18054.0], [72.0, 18091.0], [72.1, 18115.0], [72.2, 18131.0], [72.3, 18158.0], [72.4, 18169.0], [72.5, 18175.0], [72.6, 18190.0], [72.7, 18209.0], [72.8, 18236.0], [72.9, 18311.0], [73.0, 18353.0], [73.1, 18387.0], [73.2, 18419.0], [73.3, 18494.0], [73.4, 18510.0], [73.5, 18530.0], [73.6, 18600.0], [73.7, 18654.0], [73.8, 18711.0], [73.9, 18770.0], [74.0, 18827.0], [74.1, 18856.0], [74.2, 18876.0], [74.3, 18878.0], [74.4, 18885.0], [74.5, 18893.0], [74.6, 18912.0], [74.7, 18996.0], [74.8, 19030.0], [74.9, 19070.0], [75.0, 19109.0], [75.1, 19157.0], [75.2, 19210.0], [75.3, 19244.0], [75.4, 19264.0], [75.5, 19280.0], [75.6, 19337.0], [75.7, 19371.0], [75.8, 19385.0], [75.9, 19399.0], [76.0, 19412.0], [76.1, 19422.0], [76.2, 19431.0], [76.3, 19439.0], [76.4, 19452.0], [76.5, 19487.0], [76.6, 19518.0], [76.7, 19540.0], [76.8, 19589.0], [76.9, 19605.0], [77.0, 19637.0], [77.1, 19686.0], [77.2, 19725.0], [77.3, 19753.0], [77.4, 19833.0], [77.5, 19855.0], [77.6, 19893.0], [77.7, 19925.0], [77.8, 19939.0], [77.9, 19956.0], [78.0, 19971.0], [78.1, 20001.0], [78.2, 20052.0], [78.3, 20109.0], [78.4, 20158.0], [78.5, 20208.0], [78.6, 20253.0], [78.7, 20268.0], [78.8, 20300.0], [78.9, 20359.0], [79.0, 20385.0], [79.1, 20435.0], [79.2, 20447.0], [79.3, 20493.0], [79.4, 20547.0], [79.5, 20744.0], [79.6, 20852.0], [79.7, 20892.0], [79.8, 20913.0], [79.9, 21015.0], [80.0, 21138.0], [80.1, 21216.0], [80.2, 21311.0], [80.3, 21451.0], [80.4, 21526.0], [80.5, 21622.0], [80.6, 21695.0], [80.7, 21737.0], [80.8, 21828.0], [80.9, 21931.0], [81.0, 22076.0], [81.1, 22178.0], [81.2, 22288.0], [81.3, 22423.0], [81.4, 22507.0], [81.5, 22674.0], [81.6, 22840.0], [81.7, 22994.0], [81.8, 23078.0], [81.9, 23212.0], [82.0, 23393.0], [82.1, 23456.0], [82.2, 23675.0], [82.3, 23864.0], [82.4, 24038.0], [82.5, 24135.0], [82.6, 24243.0], [82.7, 24356.0], [82.8, 24612.0], [82.9, 24807.0], [83.0, 25007.0], [83.1, 25135.0], [83.2, 25377.0], [83.3, 25637.0], [83.4, 25707.0], [83.5, 25845.0], [83.6, 26158.0], [83.7, 26336.0], [83.8, 26427.0], [83.9, 26509.0], [84.0, 26643.0], [84.1, 26683.0], [84.2, 26818.0], [84.3, 27054.0], [84.4, 27164.0], [84.5, 27377.0], [84.6, 27481.0], [84.7, 27514.0], [84.8, 27534.0], [84.9, 27560.0], [85.0, 27586.0], [85.1, 27593.0], [85.2, 27606.0], [85.3, 27613.0], [85.4, 27619.0], [85.5, 27622.0], [85.6, 27636.0], [85.7, 27646.0], [85.8, 27655.0], [85.9, 27662.0], [86.0, 27669.0], [86.1, 27679.0], [86.2, 27685.0], [86.3, 27691.0], [86.4, 27701.0], [86.5, 27707.0], [86.6, 27715.0], [86.7, 27733.0], [86.8, 27748.0], [86.9, 27844.0], [87.0, 27961.0], [87.1, 27997.0], [87.2, 28042.0], [87.3, 28066.0], [87.4, 28094.0], [87.5, 28171.0], [87.6, 28210.0], [87.7, 28350.0], [87.8, 28485.0], [87.9, 28550.0], [88.0, 28665.0], [88.1, 28791.0], [88.2, 29138.0], [88.3, 29223.0], [88.4, 29265.0], [88.5, 29284.0], [88.6, 29293.0], [88.7, 29306.0], [88.8, 29329.0], [88.9, 29349.0], [89.0, 29362.0], [89.1, 29378.0], [89.2, 29383.0], [89.3, 29386.0], [89.4, 29392.0], [89.5, 29396.0], [89.6, 29410.0], [89.7, 29428.0], [89.8, 29440.0], [89.9, 29458.0], [90.0, 29492.0], [90.1, 29506.0], [90.2, 29513.0], [90.3, 29539.0], [90.4, 29572.0], [90.5, 29586.0], [90.6, 29595.0], [90.7, 29603.0], [90.8, 29615.0], [90.9, 29630.0], [91.0, 29653.0], [91.1, 29684.0], [91.2, 29733.0], [91.3, 29751.0], [91.4, 29772.0], [91.5, 29780.0], [91.6, 29798.0], [91.7, 29920.0], [91.8, 29994.0], [91.9, 30199.0], [92.0, 30221.0], [92.1, 30298.0], [92.2, 30375.0], [92.3, 30485.0], [92.4, 30609.0], [92.5, 30689.0], [92.6, 30731.0], [92.7, 30805.0], [92.8, 30824.0], [92.9, 30833.0], [93.0, 30851.0], [93.1, 30879.0], [93.2, 30902.0], [93.3, 30913.0], [93.4, 30918.0], [93.5, 30924.0], [93.6, 30935.0], [93.7, 30942.0], [93.8, 30959.0], [93.9, 30979.0], [94.0, 31036.0], [94.1, 31142.0], [94.2, 31166.0], [94.3, 31198.0], [94.4, 31214.0], [94.5, 31235.0], [94.6, 31244.0], [94.7, 31247.0], [94.8, 31257.0], [94.9, 31271.0], [95.0, 31297.0], [95.1, 31314.0], [95.2, 31326.0], [95.3, 31340.0], [95.4, 31361.0], [95.5, 31402.0], [95.6, 31425.0], [95.7, 31467.0], [95.8, 31505.0], [95.9, 31544.0], [96.0, 31592.0], [96.1, 31621.0], [96.2, 31743.0], [96.3, 31928.0], [96.4, 31968.0], [96.5, 32244.0], [96.6, 32339.0], [96.7, 32398.0], [96.8, 32497.0], [96.9, 32654.0], [97.0, 32724.0], [97.1, 32861.0], [97.2, 32951.0], [97.3, 33233.0], [97.4, 33442.0], [97.5, 33522.0], [97.6, 33632.0], [97.7, 33740.0], [97.8, 33966.0], [97.9, 34116.0], [98.0, 34174.0], [98.1, 34311.0], [98.2, 34434.0], [98.3, 34652.0], [98.4, 34748.0], [98.5, 35018.0], [98.6, 35558.0], [98.7, 35723.0], [98.8, 35813.0], [98.9, 35993.0], [99.0, 36648.0], [99.1, 36872.0], [99.2, 37285.0], [99.3, 37907.0], [99.4, 38602.0], [99.5, 38921.0], [99.6, 41711.0], [99.7, 43746.0], [99.8, 47460.0], [99.9, 50142.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[0.0, 77461.0], [0.1, 77461.0], [0.2, 77461.0], [0.3, 77461.0], [0.4, 77461.0], [0.5, 77461.0], [0.6, 77461.0], [0.7, 77461.0], [0.8, 77461.0], [0.9, 77461.0], [1.0, 77461.0], [1.1, 77461.0], [1.2, 77461.0], [1.3, 77461.0], [1.4, 77461.0], [1.5, 77461.0], [1.6, 77461.0], [1.7, 77461.0], [1.8, 77461.0], [1.9, 77461.0], [2.0, 77461.0], [2.1, 77461.0], [2.2, 77461.0], [2.3, 77461.0], [2.4, 77461.0], [2.5, 77461.0], [2.6, 77461.0], [2.7, 77461.0], [2.8, 77461.0], [2.9, 77461.0], [3.0, 77461.0], [3.1, 77461.0], [3.2, 77461.0], [3.3, 77461.0], [3.4, 77461.0], [3.5, 77461.0], [3.6, 77461.0], [3.7, 77461.0], [3.8, 77461.0], [3.9, 77461.0], [4.0, 77461.0], [4.1, 77461.0], [4.2, 77461.0], [4.3, 77461.0], [4.4, 77461.0], [4.5, 77461.0], [4.6, 77461.0], [4.7, 77461.0], [4.8, 77461.0], [4.9, 77461.0], [5.0, 77461.0], [5.1, 77461.0], [5.2, 77461.0], [5.3, 77461.0], [5.4, 77461.0], [5.5, 77461.0], [5.6, 77461.0], [5.7, 77461.0], [5.8, 77461.0], [5.9, 77461.0], [6.0, 77461.0], [6.1, 77461.0], [6.2, 77461.0], [6.3, 77461.0], [6.4, 77461.0], [6.5, 77461.0], [6.6, 77461.0], [6.7, 77461.0], [6.8, 77461.0], [6.9, 77461.0], [7.0, 77461.0], [7.1, 77461.0], [7.2, 77461.0], [7.3, 77461.0], [7.4, 77461.0], [7.5, 77461.0], [7.6, 77461.0], [7.7, 77461.0], [7.8, 77461.0], [7.9, 77461.0], [8.0, 77461.0], [8.1, 77461.0], [8.2, 77461.0], [8.3, 77461.0], [8.4, 77461.0], [8.5, 77461.0], [8.6, 77461.0], [8.7, 77461.0], [8.8, 77461.0], [8.9, 77461.0], [9.0, 77461.0], [9.1, 77461.0], [9.2, 77461.0], [9.3, 77461.0], [9.4, 77461.0], [9.5, 77461.0], [9.6, 77461.0], [9.7, 77461.0], [9.8, 77461.0], [9.9, 77461.0], [10.0, 77461.0], [10.1, 77461.0], [10.2, 77461.0], [10.3, 77461.0], [10.4, 77461.0], [10.5, 77461.0], [10.6, 77461.0], [10.7, 77461.0], [10.8, 77461.0], [10.9, 77461.0], [11.0, 77461.0], [11.1, 77461.0], [11.2, 77461.0], [11.3, 77461.0], [11.4, 77461.0], [11.5, 77461.0], [11.6, 77461.0], [11.7, 77461.0], [11.8, 77461.0], [11.9, 77461.0], [12.0, 77461.0], [12.1, 77461.0], [12.2, 77461.0], [12.3, 77461.0], [12.4, 77461.0], [12.5, 77461.0], [12.6, 77461.0], [12.7, 77461.0], [12.8, 77461.0], [12.9, 77461.0], [13.0, 77461.0], [13.1, 77461.0], [13.2, 77461.0], [13.3, 77461.0], [13.4, 77461.0], [13.5, 77461.0], [13.6, 77461.0], [13.7, 77461.0], [13.8, 77461.0], [13.9, 77461.0], [14.0, 77461.0], [14.1, 77461.0], [14.2, 77461.0], [14.3, 77461.0], [14.4, 77461.0], [14.5, 77461.0], [14.6, 77461.0], [14.7, 77461.0], [14.8, 77461.0], [14.9, 77461.0], [15.0, 77461.0], [15.1, 77461.0], [15.2, 77461.0], [15.3, 77461.0], [15.4, 77461.0], [15.5, 77461.0], [15.6, 77461.0], [15.7, 77461.0], [15.8, 77461.0], [15.9, 77461.0], [16.0, 77461.0], [16.1, 77461.0], [16.2, 77461.0], [16.3, 77461.0], [16.4, 77461.0], [16.5, 77461.0], [16.6, 77461.0], [16.7, 77461.0], [16.8, 77461.0], [16.9, 77461.0], [17.0, 77461.0], [17.1, 77461.0], [17.2, 77461.0], [17.3, 77461.0], [17.4, 77461.0], [17.5, 77461.0], [17.6, 77461.0], [17.7, 77461.0], [17.8, 77461.0], [17.9, 77461.0], [18.0, 77461.0], [18.1, 77461.0], [18.2, 77461.0], [18.3, 77461.0], [18.4, 77461.0], [18.5, 77461.0], [18.6, 77461.0], [18.7, 77461.0], [18.8, 77461.0], [18.9, 77461.0], [19.0, 77461.0], [19.1, 77461.0], [19.2, 77461.0], [19.3, 77461.0], [19.4, 77461.0], [19.5, 77461.0], [19.6, 77461.0], [19.7, 77461.0], [19.8, 77461.0], [19.9, 77461.0], [20.0, 77461.0], [20.1, 77461.0], [20.2, 77461.0], [20.3, 77461.0], [20.4, 77461.0], [20.5, 77461.0], [20.6, 77461.0], [20.7, 77461.0], [20.8, 77461.0], [20.9, 77461.0], [21.0, 77461.0], [21.1, 77461.0], [21.2, 77461.0], [21.3, 77461.0], [21.4, 77461.0], [21.5, 77461.0], [21.6, 77461.0], [21.7, 77461.0], [21.8, 77461.0], [21.9, 77461.0], [22.0, 77461.0], [22.1, 77461.0], [22.2, 77461.0], [22.3, 77461.0], [22.4, 77461.0], [22.5, 77461.0], [22.6, 77461.0], [22.7, 77461.0], [22.8, 77461.0], [22.9, 77461.0], [23.0, 77461.0], [23.1, 77461.0], [23.2, 77461.0], [23.3, 77461.0], [23.4, 77461.0], [23.5, 77461.0], [23.6, 77461.0], [23.7, 77461.0], [23.8, 77461.0], [23.9, 77461.0], [24.0, 77461.0], [24.1, 77461.0], [24.2, 77461.0], [24.3, 77461.0], [24.4, 77461.0], [24.5, 77461.0], [24.6, 77461.0], [24.7, 77461.0], [24.8, 77461.0], [24.9, 77461.0], [25.0, 77461.0], [25.1, 77461.0], [25.2, 77461.0], [25.3, 77461.0], [25.4, 77461.0], [25.5, 77461.0], [25.6, 77461.0], [25.7, 77461.0], [25.8, 77461.0], [25.9, 77461.0], [26.0, 77461.0], [26.1, 77461.0], [26.2, 77461.0], [26.3, 77461.0], [26.4, 77461.0], [26.5, 77461.0], [26.6, 77461.0], [26.7, 77461.0], [26.8, 77461.0], [26.9, 77461.0], [27.0, 77461.0], [27.1, 77461.0], [27.2, 77461.0], [27.3, 77461.0], [27.4, 77461.0], [27.5, 77461.0], [27.6, 77461.0], [27.7, 77461.0], [27.8, 77461.0], [27.9, 77461.0], [28.0, 77461.0], [28.1, 77461.0], [28.2, 77461.0], [28.3, 77461.0], [28.4, 77461.0], [28.5, 77461.0], [28.6, 77461.0], [28.7, 77461.0], [28.8, 77461.0], [28.9, 77461.0], [29.0, 77461.0], [29.1, 77461.0], [29.2, 77461.0], [29.3, 77461.0], [29.4, 77461.0], [29.5, 77461.0], [29.6, 77461.0], [29.7, 77461.0], [29.8, 77461.0], [29.9, 77461.0], [30.0, 77461.0], [30.1, 77461.0], [30.2, 77461.0], [30.3, 77461.0], [30.4, 77461.0], [30.5, 77461.0], [30.6, 77461.0], [30.7, 77461.0], [30.8, 77461.0], [30.9, 77461.0], [31.0, 77461.0], [31.1, 77461.0], [31.2, 77461.0], [31.3, 77461.0], [31.4, 77461.0], [31.5, 77461.0], [31.6, 77461.0], [31.7, 77461.0], [31.8, 77461.0], [31.9, 77461.0], [32.0, 77461.0], [32.1, 77461.0], [32.2, 77461.0], [32.3, 77461.0], [32.4, 77461.0], [32.5, 77461.0], [32.6, 77461.0], [32.7, 77461.0], [32.8, 77461.0], [32.9, 77461.0], [33.0, 77461.0], [33.1, 77461.0], [33.2, 77461.0], [33.3, 77461.0], [33.4, 77461.0], [33.5, 77461.0], [33.6, 77461.0], [33.7, 77461.0], [33.8, 77461.0], [33.9, 77461.0], [34.0, 77461.0], [34.1, 77461.0], [34.2, 77461.0], [34.3, 77461.0], [34.4, 77461.0], [34.5, 77461.0], [34.6, 77461.0], [34.7, 77461.0], [34.8, 77461.0], [34.9, 77461.0], [35.0, 77461.0], [35.1, 77461.0], [35.2, 77461.0], [35.3, 77461.0], [35.4, 77461.0], [35.5, 77461.0], [35.6, 77461.0], [35.7, 77461.0], [35.8, 77461.0], [35.9, 77461.0], [36.0, 77461.0], [36.1, 77461.0], [36.2, 77461.0], [36.3, 77461.0], [36.4, 77461.0], [36.5, 77461.0], [36.6, 77461.0], [36.7, 77461.0], [36.8, 77461.0], [36.9, 77461.0], [37.0, 77461.0], [37.1, 77461.0], [37.2, 77461.0], [37.3, 77461.0], [37.4, 77461.0], [37.5, 77461.0], [37.6, 77461.0], [37.7, 77461.0], [37.8, 77461.0], [37.9, 77461.0], [38.0, 77461.0], [38.1, 77461.0], [38.2, 77461.0], [38.3, 77461.0], [38.4, 77461.0], [38.5, 77461.0], [38.6, 77461.0], [38.7, 77461.0], [38.8, 77461.0], [38.9, 77461.0], [39.0, 77461.0], [39.1, 77461.0], [39.2, 77461.0], [39.3, 77461.0], [39.4, 77461.0], [39.5, 77461.0], [39.6, 77461.0], [39.7, 77461.0], [39.8, 77461.0], [39.9, 77461.0], [40.0, 77461.0], [40.1, 77461.0], [40.2, 77461.0], [40.3, 77461.0], [40.4, 77461.0], [40.5, 77461.0], [40.6, 77461.0], [40.7, 77461.0], [40.8, 77461.0], [40.9, 77461.0], [41.0, 77461.0], [41.1, 77461.0], [41.2, 77461.0], [41.3, 77461.0], [41.4, 77461.0], [41.5, 77461.0], [41.6, 77461.0], [41.7, 77461.0], [41.8, 77461.0], [41.9, 77461.0], [42.0, 77461.0], [42.1, 77461.0], [42.2, 77461.0], [42.3, 77461.0], [42.4, 77461.0], [42.5, 77461.0], [42.6, 77461.0], [42.7, 77461.0], [42.8, 77461.0], [42.9, 77461.0], [43.0, 77461.0], [43.1, 77461.0], [43.2, 77461.0], [43.3, 77461.0], [43.4, 77461.0], [43.5, 77461.0], [43.6, 77461.0], [43.7, 77461.0], [43.8, 77461.0], [43.9, 77461.0], [44.0, 77461.0], [44.1, 77461.0], [44.2, 77461.0], [44.3, 77461.0], [44.4, 77461.0], [44.5, 77461.0], [44.6, 77461.0], [44.7, 77461.0], [44.8, 77461.0], [44.9, 77461.0], [45.0, 77461.0], [45.1, 77461.0], [45.2, 77461.0], [45.3, 77461.0], [45.4, 77461.0], [45.5, 77461.0], [45.6, 77461.0], [45.7, 77461.0], [45.8, 77461.0], [45.9, 77461.0], [46.0, 77461.0], [46.1, 77461.0], [46.2, 77461.0], [46.3, 77461.0], [46.4, 77461.0], [46.5, 77461.0], [46.6, 77461.0], [46.7, 77461.0], [46.8, 77461.0], [46.9, 77461.0], [47.0, 77461.0], [47.1, 77461.0], [47.2, 77461.0], [47.3, 77461.0], [47.4, 77461.0], [47.5, 77461.0], [47.6, 77461.0], [47.7, 77461.0], [47.8, 77461.0], [47.9, 77461.0], [48.0, 77461.0], [48.1, 77461.0], [48.2, 77461.0], [48.3, 77461.0], [48.4, 77461.0], [48.5, 77461.0], [48.6, 77461.0], [48.7, 77461.0], [48.8, 77461.0], [48.9, 77461.0], [49.0, 77461.0], [49.1, 77461.0], [49.2, 77461.0], [49.3, 77461.0], [49.4, 77461.0], [49.5, 77461.0], [49.6, 77461.0], [49.7, 77461.0], [49.8, 77461.0], [49.9, 77461.0], [50.0, 77461.0], [50.1, 77461.0], [50.2, 77461.0], [50.3, 77461.0], [50.4, 77461.0], [50.5, 77461.0], [50.6, 77461.0], [50.7, 77461.0], [50.8, 77461.0], [50.9, 77461.0], [51.0, 77461.0], [51.1, 77461.0], [51.2, 77461.0], [51.3, 77461.0], [51.4, 77461.0], [51.5, 77461.0], [51.6, 77461.0], [51.7, 77461.0], [51.8, 77461.0], [51.9, 77461.0], [52.0, 77461.0], [52.1, 77461.0], [52.2, 77461.0], [52.3, 77461.0], [52.4, 77461.0], [52.5, 77461.0], [52.6, 77461.0], [52.7, 77461.0], [52.8, 77461.0], [52.9, 77461.0], [53.0, 77461.0], [53.1, 77461.0], [53.2, 77461.0], [53.3, 77461.0], [53.4, 77461.0], [53.5, 77461.0], [53.6, 77461.0], [53.7, 77461.0], [53.8, 77461.0], [53.9, 77461.0], [54.0, 77461.0], [54.1, 77461.0], [54.2, 77461.0], [54.3, 77461.0], [54.4, 77461.0], [54.5, 77461.0], [54.6, 77461.0], [54.7, 77461.0], [54.8, 77461.0], [54.9, 77461.0], [55.0, 77461.0], [55.1, 77461.0], [55.2, 77461.0], [55.3, 77461.0], [55.4, 77461.0], [55.5, 77461.0], [55.6, 77461.0], [55.7, 77461.0], [55.8, 77461.0], [55.9, 77461.0], [56.0, 77461.0], [56.1, 77461.0], [56.2, 77461.0], [56.3, 77461.0], [56.4, 77461.0], [56.5, 77461.0], [56.6, 77461.0], [56.7, 77461.0], [56.8, 77461.0], [56.9, 77461.0], [57.0, 77461.0], [57.1, 77461.0], [57.2, 77461.0], [57.3, 77461.0], [57.4, 77461.0], [57.5, 77461.0], [57.6, 77461.0], [57.7, 77461.0], [57.8, 77461.0], [57.9, 77461.0], [58.0, 77461.0], [58.1, 77461.0], [58.2, 77461.0], [58.3, 77461.0], [58.4, 77461.0], [58.5, 77461.0], [58.6, 77461.0], [58.7, 77461.0], [58.8, 77461.0], [58.9, 77461.0], [59.0, 77461.0], [59.1, 77461.0], [59.2, 77461.0], [59.3, 77461.0], [59.4, 77461.0], [59.5, 77461.0], [59.6, 77461.0], [59.7, 77461.0], [59.8, 77461.0], [59.9, 77461.0], [60.0, 77461.0], [60.1, 77461.0], [60.2, 77461.0], [60.3, 77461.0], [60.4, 77461.0], [60.5, 77461.0], [60.6, 77461.0], [60.7, 77461.0], [60.8, 77461.0], [60.9, 77461.0], [61.0, 77461.0], [61.1, 77461.0], [61.2, 77461.0], [61.3, 77461.0], [61.4, 77461.0], [61.5, 77461.0], [61.6, 77461.0], [61.7, 77461.0], [61.8, 77461.0], [61.9, 77461.0], [62.0, 77461.0], [62.1, 77461.0], [62.2, 77461.0], [62.3, 77461.0], [62.4, 77461.0], [62.5, 77461.0], [62.6, 77461.0], [62.7, 77461.0], [62.8, 77461.0], [62.9, 77461.0], [63.0, 77461.0], [63.1, 77461.0], [63.2, 77461.0], [63.3, 77461.0], [63.4, 77461.0], [63.5, 77461.0], [63.6, 77461.0], [63.7, 77461.0], [63.8, 77461.0], [63.9, 77461.0], [64.0, 77461.0], [64.1, 77461.0], [64.2, 77461.0], [64.3, 77461.0], [64.4, 77461.0], [64.5, 77461.0], [64.6, 77461.0], [64.7, 77461.0], [64.8, 77461.0], [64.9, 77461.0], [65.0, 77461.0], [65.1, 77461.0], [65.2, 77461.0], [65.3, 77461.0], [65.4, 77461.0], [65.5, 77461.0], [65.6, 77461.0], [65.7, 77461.0], [65.8, 77461.0], [65.9, 77461.0], [66.0, 77461.0], [66.1, 77461.0], [66.2, 77461.0], [66.3, 77461.0], [66.4, 77461.0], [66.5, 77461.0], [66.6, 77461.0], [66.7, 77461.0], [66.8, 77461.0], [66.9, 77461.0], [67.0, 77461.0], [67.1, 77461.0], [67.2, 77461.0], [67.3, 77461.0], [67.4, 77461.0], [67.5, 77461.0], [67.6, 77461.0], [67.7, 77461.0], [67.8, 77461.0], [67.9, 77461.0], [68.0, 77461.0], [68.1, 77461.0], [68.2, 77461.0], [68.3, 77461.0], [68.4, 77461.0], [68.5, 77461.0], [68.6, 77461.0], [68.7, 77461.0], [68.8, 77461.0], [68.9, 77461.0], [69.0, 77461.0], [69.1, 77461.0], [69.2, 77461.0], [69.3, 77461.0], [69.4, 77461.0], [69.5, 77461.0], [69.6, 77461.0], [69.7, 77461.0], [69.8, 77461.0], [69.9, 77461.0], [70.0, 77461.0], [70.1, 77461.0], [70.2, 77461.0], [70.3, 77461.0], [70.4, 77461.0], [70.5, 77461.0], [70.6, 77461.0], [70.7, 77461.0], [70.8, 77461.0], [70.9, 77461.0], [71.0, 77461.0], [71.1, 77461.0], [71.2, 77461.0], [71.3, 77461.0], [71.4, 77461.0], [71.5, 77461.0], [71.6, 77461.0], [71.7, 77461.0], [71.8, 77461.0], [71.9, 77461.0], [72.0, 77461.0], [72.1, 77461.0], [72.2, 77461.0], [72.3, 77461.0], [72.4, 77461.0], [72.5, 77461.0], [72.6, 77461.0], [72.7, 77461.0], [72.8, 77461.0], [72.9, 77461.0], [73.0, 77461.0], [73.1, 77461.0], [73.2, 77461.0], [73.3, 77461.0], [73.4, 77461.0], [73.5, 77461.0], [73.6, 77461.0], [73.7, 77461.0], [73.8, 77461.0], [73.9, 77461.0], [74.0, 77461.0], [74.1, 77461.0], [74.2, 77461.0], [74.3, 77461.0], [74.4, 77461.0], [74.5, 77461.0], [74.6, 77461.0], [74.7, 77461.0], [74.8, 77461.0], [74.9, 77461.0], [75.0, 77461.0], [75.1, 77461.0], [75.2, 77461.0], [75.3, 77461.0], [75.4, 77461.0], [75.5, 77461.0], [75.6, 77461.0], [75.7, 77461.0], [75.8, 77461.0], [75.9, 77461.0], [76.0, 77461.0], [76.1, 77461.0], [76.2, 77461.0], [76.3, 77461.0], [76.4, 77461.0], [76.5, 77461.0], [76.6, 77461.0], [76.7, 77461.0], [76.8, 77461.0], [76.9, 77461.0], [77.0, 77461.0], [77.1, 77461.0], [77.2, 77461.0], [77.3, 77461.0], [77.4, 77461.0], [77.5, 77461.0], [77.6, 77461.0], [77.7, 77461.0], [77.8, 77461.0], [77.9, 77461.0], [78.0, 77461.0], [78.1, 77461.0], [78.2, 77461.0], [78.3, 77461.0], [78.4, 77461.0], [78.5, 77461.0], [78.6, 77461.0], [78.7, 77461.0], [78.8, 77461.0], [78.9, 77461.0], [79.0, 77461.0], [79.1, 77461.0], [79.2, 77461.0], [79.3, 77461.0], [79.4, 77461.0], [79.5, 77461.0], [79.6, 77461.0], [79.7, 77461.0], [79.8, 77461.0], [79.9, 77461.0], [80.0, 77461.0], [80.1, 77461.0], [80.2, 77461.0], [80.3, 77461.0], [80.4, 77461.0], [80.5, 77461.0], [80.6, 77461.0], [80.7, 77461.0], [80.8, 77461.0], [80.9, 77461.0], [81.0, 77461.0], [81.1, 77461.0], [81.2, 77461.0], [81.3, 77461.0], [81.4, 77461.0], [81.5, 77461.0], [81.6, 77461.0], [81.7, 77461.0], [81.8, 77461.0], [81.9, 77461.0], [82.0, 77461.0], [82.1, 77461.0], [82.2, 77461.0], [82.3, 77461.0], [82.4, 77461.0], [82.5, 77461.0], [82.6, 77461.0], [82.7, 77461.0], [82.8, 77461.0], [82.9, 77461.0], [83.0, 77461.0], [83.1, 77461.0], [83.2, 77461.0], [83.3, 77461.0], [83.4, 77461.0], [83.5, 77461.0], [83.6, 77461.0], [83.7, 77461.0], [83.8, 77461.0], [83.9, 77461.0], [84.0, 77461.0], [84.1, 77461.0], [84.2, 77461.0], [84.3, 77461.0], [84.4, 77461.0], [84.5, 77461.0], [84.6, 77461.0], [84.7, 77461.0], [84.8, 77461.0], [84.9, 77461.0], [85.0, 77461.0], [85.1, 77461.0], [85.2, 77461.0], [85.3, 77461.0], [85.4, 77461.0], [85.5, 77461.0], [85.6, 77461.0], [85.7, 77461.0], [85.8, 77461.0], [85.9, 77461.0], [86.0, 77461.0], [86.1, 77461.0], [86.2, 77461.0], [86.3, 77461.0], [86.4, 77461.0], [86.5, 77461.0], [86.6, 77461.0], [86.7, 77461.0], [86.8, 77461.0], [86.9, 77461.0], [87.0, 77461.0], [87.1, 77461.0], [87.2, 77461.0], [87.3, 77461.0], [87.4, 77461.0], [87.5, 77461.0], [87.6, 77461.0], [87.7, 77461.0], [87.8, 77461.0], [87.9, 77461.0], [88.0, 77461.0], [88.1, 77461.0], [88.2, 77461.0], [88.3, 77461.0], [88.4, 77461.0], [88.5, 77461.0], [88.6, 77461.0], [88.7, 77461.0], [88.8, 77461.0], [88.9, 77461.0], [89.0, 77461.0], [89.1, 77461.0], [89.2, 77461.0], [89.3, 77461.0], [89.4, 77461.0], [89.5, 77461.0], [89.6, 77461.0], [89.7, 77461.0], [89.8, 77461.0], [89.9, 77461.0], [90.0, 77461.0], [90.1, 77461.0], [90.2, 77461.0], [90.3, 77461.0], [90.4, 77461.0], [90.5, 77461.0], [90.6, 77461.0], [90.7, 77461.0], [90.8, 77461.0], [90.9, 77461.0], [91.0, 77461.0], [91.1, 77461.0], [91.2, 77461.0], [91.3, 77461.0], [91.4, 77461.0], [91.5, 77461.0], [91.6, 77461.0], [91.7, 77461.0], [91.8, 77461.0], [91.9, 77461.0], [92.0, 77461.0], [92.1, 77461.0], [92.2, 77461.0], [92.3, 77461.0], [92.4, 77461.0], [92.5, 77461.0], [92.6, 77461.0], [92.7, 77461.0], [92.8, 77461.0], [92.9, 77461.0], [93.0, 77461.0], [93.1, 77461.0], [93.2, 77461.0], [93.3, 77461.0], [93.4, 77461.0], [93.5, 77461.0], [93.6, 77461.0], [93.7, 77461.0], [93.8, 77461.0], [93.9, 77461.0], [94.0, 77461.0], [94.1, 77461.0], [94.2, 77461.0], [94.3, 77461.0], [94.4, 77461.0], [94.5, 77461.0], [94.6, 77461.0], [94.7, 77461.0], [94.8, 77461.0], [94.9, 77461.0], [95.0, 77461.0], [95.1, 77461.0], [95.2, 77461.0], [95.3, 77461.0], [95.4, 77461.0], [95.5, 77461.0], [95.6, 77461.0], [95.7, 77461.0], [95.8, 77461.0], [95.9, 77461.0], [96.0, 77461.0], [96.1, 77461.0], [96.2, 77461.0], [96.3, 77461.0], [96.4, 77461.0], [96.5, 77461.0], [96.6, 77461.0], [96.7, 77461.0], [96.8, 77461.0], [96.9, 77461.0], [97.0, 77461.0], [97.1, 77461.0], [97.2, 77461.0], [97.3, 77461.0], [97.4, 77461.0], [97.5, 77461.0], [97.6, 77461.0], [97.7, 77461.0], [97.8, 77461.0], [97.9, 77461.0], [98.0, 77461.0], [98.1, 77461.0], [98.2, 77461.0], [98.3, 77461.0], [98.4, 77461.0], [98.5, 77461.0], [98.6, 77461.0], [98.7, 77461.0], [98.8, 77461.0], [98.9, 77461.0], [99.0, 77461.0], [99.1, 77461.0], [99.2, 77461.0], [99.3, 77461.0], [99.4, 77461.0], [99.5, 77461.0], [99.6, 77461.0], [99.7, 77461.0], [99.8, 77461.0], [99.9, 77461.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[0.0, 10602.0], [0.1, 10602.0], [0.2, 10602.0], [0.3, 10602.0], [0.4, 10777.0], [0.5, 10777.0], [0.6, 10777.0], [0.7, 11263.0], [0.8, 11263.0], [0.9, 11263.0], [1.0, 11376.0], [1.1, 11376.0], [1.2, 11376.0], [1.3, 11376.0], [1.4, 11414.0], [1.5, 11414.0], [1.6, 11414.0], [1.7, 11467.0], [1.8, 11467.0], [1.9, 11467.0], [2.0, 11516.0], [2.1, 11516.0], [2.2, 11516.0], [2.3, 11516.0], [2.4, 11590.0], [2.5, 11590.0], [2.6, 11590.0], [2.7, 11624.0], [2.8, 11624.0], [2.9, 11624.0], [3.0, 11680.0], [3.1, 11680.0], [3.2, 11680.0], [3.3, 11680.0], [3.4, 11724.0], [3.5, 11724.0], [3.6, 11724.0], [3.7, 11747.0], [3.8, 11747.0], [3.9, 11747.0], [4.0, 11845.0], [4.1, 11845.0], [4.2, 11845.0], [4.3, 11845.0], [4.4, 11859.0], [4.5, 11859.0], [4.6, 11859.0], [4.7, 11894.0], [4.8, 11894.0], [4.9, 11894.0], [5.0, 11930.0], [5.1, 11930.0], [5.2, 11930.0], [5.3, 11930.0], [5.4, 11931.0], [5.5, 11931.0], [5.6, 11931.0], [5.7, 11949.0], [5.8, 11949.0], [5.9, 11949.0], [6.0, 11958.0], [6.1, 11958.0], [6.2, 11958.0], [6.3, 11958.0], [6.4, 11960.0], [6.5, 11960.0], [6.6, 11960.0], [6.7, 11978.0], [6.8, 11978.0], [6.9, 11978.0], [7.0, 12003.0], [7.1, 12003.0], [7.2, 12003.0], [7.3, 12003.0], [7.4, 12023.0], [7.5, 12023.0], [7.6, 12023.0], [7.7, 12025.0], [7.8, 12025.0], [7.9, 12025.0], [8.0, 12059.0], [8.1, 12059.0], [8.2, 12059.0], [8.3, 12059.0], [8.4, 12100.0], [8.5, 12100.0], [8.6, 12100.0], [8.7, 12136.0], [8.8, 12136.0], [8.9, 12136.0], [9.0, 12145.0], [9.1, 12145.0], [9.2, 12145.0], [9.3, 12145.0], [9.4, 12156.0], [9.5, 12156.0], [9.6, 12156.0], [9.7, 12182.0], [9.8, 12182.0], [9.9, 12182.0], [10.0, 12222.0], [10.1, 12222.0], [10.2, 12222.0], [10.3, 12222.0], [10.4, 12223.0], [10.5, 12223.0], [10.6, 12223.0], [10.7, 12258.0], [10.8, 12258.0], [10.9, 12258.0], [11.0, 12258.0], [11.1, 12279.0], [11.2, 12279.0], [11.3, 12279.0], [11.4, 12281.0], [11.5, 12281.0], [11.6, 12281.0], [11.7, 12344.0], [11.8, 12344.0], [11.9, 12344.0], [12.0, 12344.0], [12.1, 12357.0], [12.2, 12357.0], [12.3, 12357.0], [12.4, 12374.0], [12.5, 12374.0], [12.6, 12374.0], [12.7, 12377.0], [12.8, 12377.0], [12.9, 12377.0], [13.0, 12377.0], [13.1, 12389.0], [13.2, 12389.0], [13.3, 12389.0], [13.4, 12392.0], [13.5, 12392.0], [13.6, 12392.0], [13.7, 12406.0], [13.8, 12406.0], [13.9, 12406.0], [14.0, 12406.0], [14.1, 12418.0], [14.2, 12418.0], [14.3, 12418.0], [14.4, 12437.0], [14.5, 12437.0], [14.6, 12437.0], [14.7, 12454.0], [14.8, 12454.0], [14.9, 12454.0], [15.0, 12454.0], [15.1, 12480.0], [15.2, 12480.0], [15.3, 12480.0], [15.4, 12524.0], [15.5, 12524.0], [15.6, 12524.0], [15.7, 12538.0], [15.8, 12538.0], [15.9, 12538.0], [16.0, 12538.0], [16.1, 12569.0], [16.2, 12569.0], [16.3, 12569.0], [16.4, 12599.0], [16.5, 12599.0], [16.6, 12599.0], [16.7, 12627.0], [16.8, 12627.0], [16.9, 12627.0], [17.0, 12627.0], [17.1, 12714.0], [17.2, 12714.0], [17.3, 12714.0], [17.4, 12765.0], [17.5, 12765.0], [17.6, 12765.0], [17.7, 12769.0], [17.8, 12769.0], [17.9, 12769.0], [18.0, 12769.0], [18.1, 12781.0], [18.2, 12781.0], [18.3, 12781.0], [18.4, 12786.0], [18.5, 12786.0], [18.6, 12786.0], [18.7, 12846.0], [18.8, 12846.0], [18.9, 12846.0], [19.0, 12854.0], [19.1, 12854.0], [19.2, 12854.0], [19.3, 12854.0], [19.4, 12922.0], [19.5, 12922.0], [19.6, 12922.0], [19.7, 13005.0], [19.8, 13005.0], [19.9, 13005.0], [20.0, 13030.0], [20.1, 13030.0], [20.2, 13030.0], [20.3, 13030.0], [20.4, 13072.0], [20.5, 13072.0], [20.6, 13072.0], [20.7, 13073.0], [20.8, 13073.0], [20.9, 13073.0], [21.0, 13165.0], [21.1, 13165.0], [21.2, 13165.0], [21.3, 13165.0], [21.4, 13181.0], [21.5, 13181.0], [21.6, 13181.0], [21.7, 13182.0], [21.8, 13182.0], [21.9, 13182.0], [22.0, 13248.0], [22.1, 13248.0], [22.2, 13248.0], [22.3, 13248.0], [22.4, 13298.0], [22.5, 13298.0], [22.6, 13298.0], [22.7, 13376.0], [22.8, 13376.0], [22.9, 13376.0], [23.0, 13378.0], [23.1, 13378.0], [23.2, 13378.0], [23.3, 13378.0], [23.4, 13409.0], [23.5, 13409.0], [23.6, 13409.0], [23.7, 13527.0], [23.8, 13527.0], [23.9, 13527.0], [24.0, 13673.0], [24.1, 13673.0], [24.2, 13673.0], [24.3, 13673.0], [24.4, 13778.0], [24.5, 13778.0], [24.6, 13778.0], [24.7, 13786.0], [24.8, 13786.0], [24.9, 13786.0], [25.0, 13795.0], [25.1, 13795.0], [25.2, 13795.0], [25.3, 13795.0], [25.4, 13916.0], [25.5, 13916.0], [25.6, 13916.0], [25.7, 13961.0], [25.8, 13961.0], [25.9, 13961.0], [26.0, 14186.0], [26.1, 14186.0], [26.2, 14186.0], [26.3, 14186.0], [26.4, 14187.0], [26.5, 14187.0], [26.6, 14187.0], [26.7, 14219.0], [26.8, 14219.0], [26.9, 14219.0], [27.0, 14254.0], [27.1, 14254.0], [27.2, 14254.0], [27.3, 14254.0], [27.4, 14310.0], [27.5, 14310.0], [27.6, 14310.0], [27.7, 14545.0], [27.8, 14545.0], [27.9, 14545.0], [28.0, 14676.0], [28.1, 14676.0], [28.2, 14676.0], [28.3, 14676.0], [28.4, 14694.0], [28.5, 14694.0], [28.6, 14694.0], [28.7, 14722.0], [28.8, 14722.0], [28.9, 14722.0], [29.0, 14756.0], [29.1, 14756.0], [29.2, 14756.0], [29.3, 14756.0], [29.4, 14900.0], [29.5, 14900.0], [29.6, 14900.0], [29.7, 15064.0], [29.8, 15064.0], [29.9, 15064.0], [30.0, 15211.0], [30.1, 15211.0], [30.2, 15211.0], [30.3, 15211.0], [30.4, 15292.0], [30.5, 15292.0], [30.6, 15292.0], [30.7, 15531.0], [30.8, 15531.0], [30.9, 15531.0], [31.0, 15531.0], [31.1, 15531.0], [31.2, 15531.0], [31.3, 15531.0], [31.4, 15806.0], [31.5, 15806.0], [31.6, 15806.0], [31.7, 15914.0], [31.8, 15914.0], [31.9, 15914.0], [32.0, 15948.0], [32.1, 15948.0], [32.2, 15948.0], [32.3, 15948.0], [32.4, 16230.0], [32.5, 16230.0], [32.6, 16230.0], [32.7, 16402.0], [32.8, 16402.0], [32.9, 16402.0], [33.0, 16459.0], [33.1, 16459.0], [33.2, 16459.0], [33.3, 16459.0], [33.4, 16528.0], [33.5, 16528.0], [33.6, 16528.0], [33.7, 16891.0], [33.8, 16891.0], [33.9, 16891.0], [34.0, 18591.0], [34.1, 18591.0], [34.2, 18591.0], [34.3, 18591.0], [34.4, 18673.0], [34.5, 18673.0], [34.6, 18673.0], [34.7, 18694.0], [34.8, 18694.0], [34.9, 18694.0], [35.0, 18731.0], [35.1, 18731.0], [35.2, 18731.0], [35.3, 18731.0], [35.4, 18840.0], [35.5, 18840.0], [35.6, 18840.0], [35.7, 18849.0], [35.8, 18849.0], [35.9, 18849.0], [36.0, 18852.0], [36.1, 18852.0], [36.2, 18852.0], [36.3, 18852.0], [36.4, 18925.0], [36.5, 18925.0], [36.6, 18925.0], [36.7, 18967.0], [36.8, 18967.0], [36.9, 18967.0], [37.0, 18982.0], [37.1, 18982.0], [37.2, 18982.0], [37.3, 18982.0], [37.4, 19005.0], [37.5, 19005.0], [37.6, 19005.0], [37.7, 19014.0], [37.8, 19014.0], [37.9, 19014.0], [38.0, 19025.0], [38.1, 19025.0], [38.2, 19025.0], [38.3, 19025.0], [38.4, 19029.0], [38.5, 19029.0], [38.6, 19029.0], [38.7, 19049.0], [38.8, 19049.0], [38.9, 19049.0], [39.0, 19049.0], [39.1, 19117.0], [39.2, 19117.0], [39.3, 19117.0], [39.4, 19124.0], [39.5, 19124.0], [39.6, 19124.0], [39.7, 19127.0], [39.8, 19127.0], [39.9, 19127.0], [40.0, 19127.0], [40.1, 19157.0], [40.2, 19157.0], [40.3, 19157.0], [40.4, 19161.0], [40.5, 19161.0], [40.6, 19161.0], [40.7, 19202.0], [40.8, 19202.0], [40.9, 19202.0], [41.0, 19202.0], [41.1, 19276.0], [41.2, 19276.0], [41.3, 19276.0], [41.4, 19301.0], [41.5, 19301.0], [41.6, 19301.0], [41.7, 19303.0], [41.8, 19303.0], [41.9, 19303.0], [42.0, 19303.0], [42.1, 19327.0], [42.2, 19327.0], [42.3, 19327.0], [42.4, 19334.0], [42.5, 19334.0], [42.6, 19334.0], [42.7, 19334.0], [42.8, 19334.0], [42.9, 19334.0], [43.0, 19334.0], [43.1, 19348.0], [43.2, 19348.0], [43.3, 19348.0], [43.4, 19379.0], [43.5, 19379.0], [43.6, 19379.0], [43.7, 19402.0], [43.8, 19402.0], [43.9, 19402.0], [44.0, 19402.0], [44.1, 19403.0], [44.2, 19403.0], [44.3, 19403.0], [44.4, 19410.0], [44.5, 19410.0], [44.6, 19410.0], [44.7, 19413.0], [44.8, 19413.0], [44.9, 19413.0], [45.0, 19413.0], [45.1, 19414.0], [45.2, 19414.0], [45.3, 19414.0], [45.4, 19418.0], [45.5, 19418.0], [45.6, 19418.0], [45.7, 19458.0], [45.8, 19458.0], [45.9, 19458.0], [46.0, 19458.0], [46.1, 19512.0], [46.2, 19512.0], [46.3, 19512.0], [46.4, 19512.0], [46.5, 19512.0], [46.6, 19512.0], [46.7, 19529.0], [46.8, 19529.0], [46.9, 19529.0], [47.0, 19529.0], [47.1, 19532.0], [47.2, 19532.0], [47.3, 19532.0], [47.4, 19541.0], [47.5, 19541.0], [47.6, 19541.0], [47.7, 19557.0], [47.8, 19557.0], [47.9, 19557.0], [48.0, 19557.0], [48.1, 19559.0], [48.2, 19559.0], [48.3, 19559.0], [48.4, 19565.0], [48.5, 19565.0], [48.6, 19565.0], [48.7, 19578.0], [48.8, 19578.0], [48.9, 19578.0], [49.0, 19578.0], [49.1, 19588.0], [49.2, 19588.0], [49.3, 19588.0], [49.4, 19606.0], [49.5, 19606.0], [49.6, 19606.0], [49.7, 19618.0], [49.8, 19618.0], [49.9, 19618.0], [50.0, 19618.0], [50.1, 19628.0], [50.2, 19628.0], [50.3, 19628.0], [50.4, 19636.0], [50.5, 19636.0], [50.6, 19636.0], [50.7, 19646.0], [50.8, 19646.0], [50.9, 19646.0], [51.0, 19646.0], [51.1, 19655.0], [51.2, 19655.0], [51.3, 19655.0], [51.4, 19663.0], [51.5, 19663.0], [51.6, 19663.0], [51.7, 19729.0], [51.8, 19729.0], [51.9, 19729.0], [52.0, 19729.0], [52.1, 19752.0], [52.2, 19752.0], [52.3, 19752.0], [52.4, 19771.0], [52.5, 19771.0], [52.6, 19771.0], [52.7, 19800.0], [52.8, 19800.0], [52.9, 19800.0], [53.0, 19800.0], [53.1, 19833.0], [53.2, 19833.0], [53.3, 19833.0], [53.4, 19868.0], [53.5, 19868.0], [53.6, 19868.0], [53.7, 19869.0], [53.8, 19869.0], [53.9, 19869.0], [54.0, 19869.0], [54.1, 19878.0], [54.2, 19878.0], [54.3, 19878.0], [54.4, 19879.0], [54.5, 19879.0], [54.6, 19879.0], [54.7, 19879.0], [54.8, 19879.0], [54.9, 19879.0], [55.0, 19879.0], [55.1, 19909.0], [55.2, 19909.0], [55.3, 19909.0], [55.4, 19910.0], [55.5, 19910.0], [55.6, 19910.0], [55.7, 19921.0], [55.8, 19921.0], [55.9, 19921.0], [56.0, 19921.0], [56.1, 19923.0], [56.2, 19923.0], [56.3, 19923.0], [56.4, 19923.0], [56.5, 19923.0], [56.6, 19923.0], [56.7, 19924.0], [56.8, 19924.0], [56.9, 19924.0], [57.0, 19924.0], [57.1, 19929.0], [57.2, 19929.0], [57.3, 19929.0], [57.4, 19934.0], [57.5, 19934.0], [57.6, 19934.0], [57.7, 19937.0], [57.8, 19937.0], [57.9, 19937.0], [58.0, 19937.0], [58.1, 19940.0], [58.2, 19940.0], [58.3, 19940.0], [58.4, 19965.0], [58.5, 19965.0], [58.6, 19965.0], [58.7, 19988.0], [58.8, 19988.0], [58.9, 19988.0], [59.0, 19988.0], [59.1, 20024.0], [59.2, 20024.0], [59.3, 20024.0], [59.4, 20039.0], [59.5, 20039.0], [59.6, 20039.0], [59.7, 20042.0], [59.8, 20042.0], [59.9, 20042.0], [60.0, 20042.0], [60.1, 20058.0], [60.2, 20058.0], [60.3, 20058.0], [60.4, 20073.0], [60.5, 20073.0], [60.6, 20073.0], [60.7, 20110.0], [60.8, 20110.0], [60.9, 20110.0], [61.0, 20110.0], [61.1, 20113.0], [61.2, 20113.0], [61.3, 20113.0], [61.4, 20139.0], [61.5, 20139.0], [61.6, 20139.0], [61.7, 20163.0], [61.8, 20163.0], [61.9, 20163.0], [62.0, 20163.0], [62.1, 20182.0], [62.2, 20182.0], [62.3, 20182.0], [62.4, 20207.0], [62.5, 20207.0], [62.6, 20207.0], [62.7, 20220.0], [62.8, 20220.0], [62.9, 20220.0], [63.0, 20220.0], [63.1, 20228.0], [63.2, 20228.0], [63.3, 20228.0], [63.4, 20230.0], [63.5, 20230.0], [63.6, 20230.0], [63.7, 20248.0], [63.8, 20248.0], [63.9, 20248.0], [64.0, 20248.0], [64.1, 20249.0], [64.2, 20249.0], [64.3, 20249.0], [64.4, 20262.0], [64.5, 20262.0], [64.6, 20262.0], [64.7, 20280.0], [64.8, 20280.0], [64.9, 20280.0], [65.0, 20280.0], [65.1, 20314.0], [65.2, 20314.0], [65.3, 20314.0], [65.4, 20316.0], [65.5, 20316.0], [65.6, 20316.0], [65.7, 20325.0], [65.8, 20325.0], [65.9, 20325.0], [66.0, 20325.0], [66.1, 20327.0], [66.2, 20327.0], [66.3, 20327.0], [66.4, 20343.0], [66.5, 20343.0], [66.6, 20343.0], [66.7, 20343.0], [66.8, 20343.0], [66.9, 20343.0], [67.0, 20343.0], [67.1, 20347.0], [67.2, 20347.0], [67.3, 20347.0], [67.4, 20348.0], [67.5, 20348.0], [67.6, 20348.0], [67.7, 20352.0], [67.8, 20352.0], [67.9, 20352.0], [68.0, 20352.0], [68.1, 20357.0], [68.2, 20357.0], [68.3, 20357.0], [68.4, 20367.0], [68.5, 20367.0], [68.6, 20367.0], [68.7, 20383.0], [68.8, 20383.0], [68.9, 20383.0], [69.0, 20383.0], [69.1, 20387.0], [69.2, 20387.0], [69.3, 20387.0], [69.4, 20396.0], [69.5, 20396.0], [69.6, 20396.0], [69.7, 20405.0], [69.8, 20405.0], [69.9, 20405.0], [70.0, 20405.0], [70.1, 20436.0], [70.2, 20436.0], [70.3, 20436.0], [70.4, 20447.0], [70.5, 20447.0], [70.6, 20447.0], [70.7, 20463.0], [70.8, 20463.0], [70.9, 20463.0], [71.0, 20463.0], [71.1, 20469.0], [71.2, 20469.0], [71.3, 20469.0], [71.4, 20486.0], [71.5, 20486.0], [71.6, 20486.0], [71.7, 20487.0], [71.8, 20487.0], [71.9, 20487.0], [72.0, 20487.0], [72.1, 20489.0], [72.2, 20489.0], [72.3, 20489.0], [72.4, 20510.0], [72.5, 20510.0], [72.6, 20510.0], [72.7, 20511.0], [72.8, 20511.0], [72.9, 20511.0], [73.0, 20511.0], [73.1, 20512.0], [73.2, 20512.0], [73.3, 20512.0], [73.4, 20515.0], [73.5, 20515.0], [73.6, 20515.0], [73.7, 20523.0], [73.8, 20523.0], [73.9, 20523.0], [74.0, 20523.0], [74.1, 20528.0], [74.2, 20528.0], [74.3, 20528.0], [74.4, 20530.0], [74.5, 20530.0], [74.6, 20530.0], [74.7, 20541.0], [74.8, 20541.0], [74.9, 20541.0], [75.0, 20541.0], [75.1, 20559.0], [75.2, 20559.0], [75.3, 20559.0], [75.4, 20564.0], [75.5, 20564.0], [75.6, 20564.0], [75.7, 20576.0], [75.8, 20576.0], [75.9, 20576.0], [76.0, 20580.0], [76.1, 20580.0], [76.2, 20580.0], [76.3, 20580.0], [76.4, 20589.0], [76.5, 20589.0], [76.6, 20589.0], [76.7, 20594.0], [76.8, 20594.0], [76.9, 20594.0], [77.0, 20599.0], [77.1, 20599.0], [77.2, 20599.0], [77.3, 20599.0], [77.4, 20619.0], [77.5, 20619.0], [77.6, 20619.0], [77.7, 20626.0], [77.8, 20626.0], [77.9, 20626.0], [78.0, 20648.0], [78.1, 20648.0], [78.2, 20648.0], [78.3, 20648.0], [78.4, 20675.0], [78.5, 20675.0], [78.6, 20675.0], [78.7, 20701.0], [78.8, 20701.0], [78.9, 20701.0], [79.0, 20703.0], [79.1, 20703.0], [79.2, 20703.0], [79.3, 20703.0], [79.4, 20707.0], [79.5, 20707.0], [79.6, 20707.0], [79.7, 20715.0], [79.8, 20715.0], [79.9, 20715.0], [80.0, 20716.0], [80.1, 20716.0], [80.2, 20716.0], [80.3, 20716.0], [80.4, 20727.0], [80.5, 20727.0], [80.6, 20727.0], [80.7, 20766.0], [80.8, 20766.0], [80.9, 20766.0], [81.0, 20788.0], [81.1, 20788.0], [81.2, 20788.0], [81.3, 20788.0], [81.4, 20864.0], [81.5, 20864.0], [81.6, 20864.0], [81.7, 20871.0], [81.8, 20871.0], [81.9, 20871.0], [82.0, 20874.0], [82.1, 20874.0], [82.2, 20874.0], [82.3, 20874.0], [82.4, 20877.0], [82.5, 20877.0], [82.6, 20877.0], [82.7, 20927.0], [82.8, 20927.0], [82.9, 20927.0], [83.0, 20968.0], [83.1, 20968.0], [83.2, 20968.0], [83.3, 20968.0], [83.4, 21013.0], [83.5, 21013.0], [83.6, 21013.0], [83.7, 21055.0], [83.8, 21055.0], [83.9, 21055.0], [84.0, 21066.0], [84.1, 21066.0], [84.2, 21066.0], [84.3, 21066.0], [84.4, 21082.0], [84.5, 21082.0], [84.6, 21082.0], [84.7, 21150.0], [84.8, 21150.0], [84.9, 21150.0], [85.0, 21164.0], [85.1, 21164.0], [85.2, 21164.0], [85.3, 21164.0], [85.4, 21246.0], [85.5, 21246.0], [85.6, 21246.0], [85.7, 21264.0], [85.8, 21264.0], [85.9, 21264.0], [86.0, 21325.0], [86.1, 21325.0], [86.2, 21325.0], [86.3, 21325.0], [86.4, 21368.0], [86.5, 21368.0], [86.6, 21368.0], [86.7, 21408.0], [86.8, 21408.0], [86.9, 21408.0], [87.0, 21440.0], [87.1, 21440.0], [87.2, 21440.0], [87.3, 21440.0], [87.4, 21558.0], [87.5, 21558.0], [87.6, 21558.0], [87.7, 22033.0], [87.8, 22033.0], [87.9, 22033.0], [88.0, 22608.0], [88.1, 22608.0], [88.2, 22608.0], [88.3, 22608.0], [88.4, 22965.0], [88.5, 22965.0], [88.6, 22965.0], [88.7, 22977.0], [88.8, 22977.0], [88.9, 22977.0], [89.0, 23075.0], [89.1, 23075.0], [89.2, 23075.0], [89.3, 23075.0], [89.4, 23110.0], [89.5, 23110.0], [89.6, 23110.0], [89.7, 23237.0], [89.8, 23237.0], [89.9, 23237.0], [90.0, 23239.0], [90.1, 23239.0], [90.2, 23239.0], [90.3, 23239.0], [90.4, 23244.0], [90.5, 23244.0], [90.6, 23244.0], [90.7, 23266.0], [90.8, 23266.0], [90.9, 23266.0], [91.0, 23271.0], [91.1, 23271.0], [91.2, 23271.0], [91.3, 23271.0], [91.4, 23361.0], [91.5, 23361.0], [91.6, 23361.0], [91.7, 23365.0], [91.8, 23365.0], [91.9, 23365.0], [92.0, 23372.0], [92.1, 23372.0], [92.2, 23372.0], [92.3, 23372.0], [92.4, 23377.0], [92.5, 23377.0], [92.6, 23377.0], [92.7, 23423.0], [92.8, 23423.0], [92.9, 23423.0], [93.0, 23435.0], [93.1, 23435.0], [93.2, 23435.0], [93.3, 23435.0], [93.4, 23526.0], [93.5, 23526.0], [93.6, 23526.0], [93.7, 23545.0], [93.8, 23545.0], [93.9, 23545.0], [94.0, 23549.0], [94.1, 23549.0], [94.2, 23549.0], [94.3, 23549.0], [94.4, 23563.0], [94.5, 23563.0], [94.6, 23563.0], [94.7, 23593.0], [94.8, 23593.0], [94.9, 23593.0], [95.0, 23597.0], [95.1, 23597.0], [95.2, 23597.0], [95.3, 23597.0], [95.4, 23598.0], [95.5, 23598.0], [95.6, 23598.0], [95.7, 23680.0], [95.8, 23680.0], [95.9, 23680.0], [96.0, 23742.0], [96.1, 23742.0], [96.2, 23742.0], [96.3, 23742.0], [96.4, 23771.0], [96.5, 23771.0], [96.6, 23771.0], [96.7, 23775.0], [96.8, 23775.0], [96.9, 23775.0], [97.0, 23800.0], [97.1, 23800.0], [97.2, 23800.0], [97.3, 23800.0], [97.4, 23822.0], [97.5, 23822.0], [97.6, 23822.0], [97.7, 23905.0], [97.8, 23905.0], [97.9, 23905.0], [98.0, 23977.0], [98.1, 23977.0], [98.2, 23977.0], [98.3, 23977.0], [98.4, 24012.0], [98.5, 24012.0], [98.6, 24012.0], [98.7, 24060.0], [98.8, 24060.0], [98.9, 24060.0], [99.0, 24106.0], [99.1, 24106.0], [99.2, 24106.0], [99.3, 24106.0], [99.4, 24255.0], [99.5, 24255.0], [99.6, 24255.0], [99.7, 24300.0], [99.8, 24300.0], [99.9, 24300.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[0.0, 4953.0], [0.1, 4953.0], [0.2, 4953.0], [0.3, 4953.0], [0.4, 4953.0], [0.5, 4953.0], [0.6, 4953.0], [0.7, 4953.0], [0.8, 4953.0], [0.9, 4953.0], [1.0, 4953.0], [1.1, 4953.0], [1.2, 4953.0], [1.3, 4953.0], [1.4, 4953.0], [1.5, 4953.0], [1.6, 4953.0], [1.7, 4953.0], [1.8, 4953.0], [1.9, 4953.0], [2.0, 4953.0], [2.1, 4953.0], [2.2, 4953.0], [2.3, 4953.0], [2.4, 4953.0], [2.5, 4953.0], [2.6, 4953.0], [2.7, 4953.0], [2.8, 4953.0], [2.9, 4953.0], [3.0, 4953.0], [3.1, 4953.0], [3.2, 4953.0], [3.3, 4953.0], [3.4, 4953.0], [3.5, 4953.0], [3.6, 4953.0], [3.7, 4953.0], [3.8, 4953.0], [3.9, 4953.0], [4.0, 4953.0], [4.1, 4953.0], [4.2, 4953.0], [4.3, 4953.0], [4.4, 4953.0], [4.5, 4953.0], [4.6, 4953.0], [4.7, 4953.0], [4.8, 4953.0], [4.9, 4953.0], [5.0, 4953.0], [5.1, 4953.0], [5.2, 4953.0], [5.3, 4953.0], [5.4, 4953.0], [5.5, 4953.0], [5.6, 4953.0], [5.7, 4953.0], [5.8, 4953.0], [5.9, 4953.0], [6.0, 4953.0], [6.1, 4953.0], [6.2, 4953.0], [6.3, 4953.0], [6.4, 4953.0], [6.5, 4953.0], [6.6, 4953.0], [6.7, 4953.0], [6.8, 4953.0], [6.9, 4953.0], [7.0, 4953.0], [7.1, 4953.0], [7.2, 4953.0], [7.3, 4953.0], [7.4, 4953.0], [7.5, 4953.0], [7.6, 4953.0], [7.7, 4953.0], [7.8, 4953.0], [7.9, 4953.0], [8.0, 4953.0], [8.1, 4953.0], [8.2, 4953.0], [8.3, 4953.0], [8.4, 4953.0], [8.5, 4953.0], [8.6, 4953.0], [8.7, 4953.0], [8.8, 4953.0], [8.9, 4953.0], [9.0, 4953.0], [9.1, 4953.0], [9.2, 4953.0], [9.3, 4953.0], [9.4, 4953.0], [9.5, 4953.0], [9.6, 4953.0], [9.7, 4953.0], [9.8, 4953.0], [9.9, 4953.0], [10.0, 4953.0], [10.1, 4953.0], [10.2, 4953.0], [10.3, 4953.0], [10.4, 4953.0], [10.5, 4953.0], [10.6, 4953.0], [10.7, 4953.0], [10.8, 4953.0], [10.9, 4953.0], [11.0, 4953.0], [11.1, 4953.0], [11.2, 4953.0], [11.3, 4953.0], [11.4, 4953.0], [11.5, 4953.0], [11.6, 4953.0], [11.7, 4953.0], [11.8, 4953.0], [11.9, 4953.0], [12.0, 4953.0], [12.1, 4953.0], [12.2, 4953.0], [12.3, 4953.0], [12.4, 4953.0], [12.5, 4953.0], [12.6, 4953.0], [12.7, 4953.0], [12.8, 4953.0], [12.9, 4953.0], [13.0, 4953.0], [13.1, 4953.0], [13.2, 4953.0], [13.3, 4953.0], [13.4, 4953.0], [13.5, 4953.0], [13.6, 4953.0], [13.7, 4953.0], [13.8, 4953.0], [13.9, 4953.0], [14.0, 4953.0], [14.1, 4953.0], [14.2, 4953.0], [14.3, 4953.0], [14.4, 4953.0], [14.5, 4953.0], [14.6, 4953.0], [14.7, 4953.0], [14.8, 4953.0], [14.9, 4953.0], [15.0, 4953.0], [15.1, 4953.0], [15.2, 4953.0], [15.3, 4953.0], [15.4, 4953.0], [15.5, 4953.0], [15.6, 4953.0], [15.7, 4953.0], [15.8, 4953.0], [15.9, 4953.0], [16.0, 4953.0], [16.1, 4953.0], [16.2, 4953.0], [16.3, 4953.0], [16.4, 4953.0], [16.5, 4953.0], [16.6, 4953.0], [16.7, 4953.0], [16.8, 4953.0], [16.9, 4953.0], [17.0, 4953.0], [17.1, 4953.0], [17.2, 4953.0], [17.3, 4953.0], [17.4, 4953.0], [17.5, 4953.0], [17.6, 4953.0], [17.7, 4953.0], [17.8, 4953.0], [17.9, 4953.0], [18.0, 4953.0], [18.1, 4953.0], [18.2, 4953.0], [18.3, 4953.0], [18.4, 4953.0], [18.5, 4953.0], [18.6, 4953.0], [18.7, 4953.0], [18.8, 4953.0], [18.9, 4953.0], [19.0, 4953.0], [19.1, 4953.0], [19.2, 4953.0], [19.3, 4953.0], [19.4, 4953.0], [19.5, 4953.0], [19.6, 4953.0], [19.7, 4953.0], [19.8, 4953.0], [19.9, 4953.0], [20.0, 4953.0], [20.1, 4953.0], [20.2, 4953.0], [20.3, 4953.0], [20.4, 4953.0], [20.5, 4953.0], [20.6, 4953.0], [20.7, 4953.0], [20.8, 4953.0], [20.9, 4953.0], [21.0, 4953.0], [21.1, 4953.0], [21.2, 4953.0], [21.3, 4953.0], [21.4, 4953.0], [21.5, 4953.0], [21.6, 4953.0], [21.7, 4953.0], [21.8, 4953.0], [21.9, 4953.0], [22.0, 4953.0], [22.1, 4953.0], [22.2, 4953.0], [22.3, 4953.0], [22.4, 4953.0], [22.5, 4953.0], [22.6, 4953.0], [22.7, 4953.0], [22.8, 4953.0], [22.9, 4953.0], [23.0, 4953.0], [23.1, 4953.0], [23.2, 4953.0], [23.3, 4953.0], [23.4, 4953.0], [23.5, 4953.0], [23.6, 4953.0], [23.7, 4953.0], [23.8, 4953.0], [23.9, 4953.0], [24.0, 4953.0], [24.1, 4953.0], [24.2, 4953.0], [24.3, 4953.0], [24.4, 4953.0], [24.5, 4953.0], [24.6, 4953.0], [24.7, 4953.0], [24.8, 4953.0], [24.9, 4953.0], [25.0, 4953.0], [25.1, 4953.0], [25.2, 4953.0], [25.3, 4953.0], [25.4, 4953.0], [25.5, 4953.0], [25.6, 4953.0], [25.7, 4953.0], [25.8, 4953.0], [25.9, 4953.0], [26.0, 4953.0], [26.1, 4953.0], [26.2, 4953.0], [26.3, 4953.0], [26.4, 4953.0], [26.5, 4953.0], [26.6, 4953.0], [26.7, 4953.0], [26.8, 4953.0], [26.9, 4953.0], [27.0, 4953.0], [27.1, 4953.0], [27.2, 4953.0], [27.3, 4953.0], [27.4, 4953.0], [27.5, 4953.0], [27.6, 4953.0], [27.7, 4953.0], [27.8, 4953.0], [27.9, 4953.0], [28.0, 4953.0], [28.1, 4953.0], [28.2, 4953.0], [28.3, 4953.0], [28.4, 4953.0], [28.5, 4953.0], [28.6, 4953.0], [28.7, 4953.0], [28.8, 4953.0], [28.9, 4953.0], [29.0, 4953.0], [29.1, 4953.0], [29.2, 4953.0], [29.3, 4953.0], [29.4, 4953.0], [29.5, 4953.0], [29.6, 4953.0], [29.7, 4953.0], [29.8, 4953.0], [29.9, 4953.0], [30.0, 4953.0], [30.1, 4953.0], [30.2, 4953.0], [30.3, 4953.0], [30.4, 4953.0], [30.5, 4953.0], [30.6, 4953.0], [30.7, 4953.0], [30.8, 4953.0], [30.9, 4953.0], [31.0, 4953.0], [31.1, 4953.0], [31.2, 4953.0], [31.3, 4953.0], [31.4, 4953.0], [31.5, 4953.0], [31.6, 4953.0], [31.7, 4953.0], [31.8, 4953.0], [31.9, 4953.0], [32.0, 4953.0], [32.1, 4953.0], [32.2, 4953.0], [32.3, 4953.0], [32.4, 4953.0], [32.5, 4953.0], [32.6, 4953.0], [32.7, 4953.0], [32.8, 4953.0], [32.9, 4953.0], [33.0, 4953.0], [33.1, 4953.0], [33.2, 4953.0], [33.3, 4953.0], [33.4, 4953.0], [33.5, 4953.0], [33.6, 4953.0], [33.7, 4953.0], [33.8, 4953.0], [33.9, 4953.0], [34.0, 4953.0], [34.1, 4953.0], [34.2, 4953.0], [34.3, 4953.0], [34.4, 4953.0], [34.5, 4953.0], [34.6, 4953.0], [34.7, 4953.0], [34.8, 4953.0], [34.9, 4953.0], [35.0, 4953.0], [35.1, 4953.0], [35.2, 4953.0], [35.3, 4953.0], [35.4, 4953.0], [35.5, 4953.0], [35.6, 4953.0], [35.7, 4953.0], [35.8, 4953.0], [35.9, 4953.0], [36.0, 4953.0], [36.1, 4953.0], [36.2, 4953.0], [36.3, 4953.0], [36.4, 4953.0], [36.5, 4953.0], [36.6, 4953.0], [36.7, 4953.0], [36.8, 4953.0], [36.9, 4953.0], [37.0, 4953.0], [37.1, 4953.0], [37.2, 4953.0], [37.3, 4953.0], [37.4, 4953.0], [37.5, 4953.0], [37.6, 4953.0], [37.7, 4953.0], [37.8, 4953.0], [37.9, 4953.0], [38.0, 4953.0], [38.1, 4953.0], [38.2, 4953.0], [38.3, 4953.0], [38.4, 4953.0], [38.5, 4953.0], [38.6, 4953.0], [38.7, 4953.0], [38.8, 4953.0], [38.9, 4953.0], [39.0, 4953.0], [39.1, 4953.0], [39.2, 4953.0], [39.3, 4953.0], [39.4, 4953.0], [39.5, 4953.0], [39.6, 4953.0], [39.7, 4953.0], [39.8, 4953.0], [39.9, 4953.0], [40.0, 4953.0], [40.1, 4953.0], [40.2, 4953.0], [40.3, 4953.0], [40.4, 4953.0], [40.5, 4953.0], [40.6, 4953.0], [40.7, 4953.0], [40.8, 4953.0], [40.9, 4953.0], [41.0, 4953.0], [41.1, 4953.0], [41.2, 4953.0], [41.3, 4953.0], [41.4, 4953.0], [41.5, 4953.0], [41.6, 4953.0], [41.7, 4953.0], [41.8, 4953.0], [41.9, 4953.0], [42.0, 4953.0], [42.1, 4953.0], [42.2, 4953.0], [42.3, 4953.0], [42.4, 4953.0], [42.5, 4953.0], [42.6, 4953.0], [42.7, 4953.0], [42.8, 4953.0], [42.9, 4953.0], [43.0, 4953.0], [43.1, 4953.0], [43.2, 4953.0], [43.3, 4953.0], [43.4, 4953.0], [43.5, 4953.0], [43.6, 4953.0], [43.7, 4953.0], [43.8, 4953.0], [43.9, 4953.0], [44.0, 4953.0], [44.1, 4953.0], [44.2, 4953.0], [44.3, 4953.0], [44.4, 4953.0], [44.5, 4953.0], [44.6, 4953.0], [44.7, 4953.0], [44.8, 4953.0], [44.9, 4953.0], [45.0, 4953.0], [45.1, 4953.0], [45.2, 4953.0], [45.3, 4953.0], [45.4, 4953.0], [45.5, 4953.0], [45.6, 4953.0], [45.7, 4953.0], [45.8, 4953.0], [45.9, 4953.0], [46.0, 4953.0], [46.1, 4953.0], [46.2, 4953.0], [46.3, 4953.0], [46.4, 4953.0], [46.5, 4953.0], [46.6, 4953.0], [46.7, 4953.0], [46.8, 4953.0], [46.9, 4953.0], [47.0, 4953.0], [47.1, 4953.0], [47.2, 4953.0], [47.3, 4953.0], [47.4, 4953.0], [47.5, 4953.0], [47.6, 4953.0], [47.7, 4953.0], [47.8, 4953.0], [47.9, 4953.0], [48.0, 4953.0], [48.1, 4953.0], [48.2, 4953.0], [48.3, 4953.0], [48.4, 4953.0], [48.5, 4953.0], [48.6, 4953.0], [48.7, 4953.0], [48.8, 4953.0], [48.9, 4953.0], [49.0, 4953.0], [49.1, 4953.0], [49.2, 4953.0], [49.3, 4953.0], [49.4, 4953.0], [49.5, 4953.0], [49.6, 4953.0], [49.7, 4953.0], [49.8, 4953.0], [49.9, 4953.0], [50.0, 4953.0], [50.1, 4953.0], [50.2, 4953.0], [50.3, 4953.0], [50.4, 4953.0], [50.5, 4953.0], [50.6, 4953.0], [50.7, 4953.0], [50.8, 4953.0], [50.9, 4953.0], [51.0, 4953.0], [51.1, 4953.0], [51.2, 4953.0], [51.3, 4953.0], [51.4, 4953.0], [51.5, 4953.0], [51.6, 4953.0], [51.7, 4953.0], [51.8, 4953.0], [51.9, 4953.0], [52.0, 4953.0], [52.1, 4953.0], [52.2, 4953.0], [52.3, 4953.0], [52.4, 4953.0], [52.5, 4953.0], [52.6, 4953.0], [52.7, 4953.0], [52.8, 4953.0], [52.9, 4953.0], [53.0, 4953.0], [53.1, 4953.0], [53.2, 4953.0], [53.3, 4953.0], [53.4, 4953.0], [53.5, 4953.0], [53.6, 4953.0], [53.7, 4953.0], [53.8, 4953.0], [53.9, 4953.0], [54.0, 4953.0], [54.1, 4953.0], [54.2, 4953.0], [54.3, 4953.0], [54.4, 4953.0], [54.5, 4953.0], [54.6, 4953.0], [54.7, 4953.0], [54.8, 4953.0], [54.9, 4953.0], [55.0, 4953.0], [55.1, 4953.0], [55.2, 4953.0], [55.3, 4953.0], [55.4, 4953.0], [55.5, 4953.0], [55.6, 4953.0], [55.7, 4953.0], [55.8, 4953.0], [55.9, 4953.0], [56.0, 4953.0], [56.1, 4953.0], [56.2, 4953.0], [56.3, 4953.0], [56.4, 4953.0], [56.5, 4953.0], [56.6, 4953.0], [56.7, 4953.0], [56.8, 4953.0], [56.9, 4953.0], [57.0, 4953.0], [57.1, 4953.0], [57.2, 4953.0], [57.3, 4953.0], [57.4, 4953.0], [57.5, 4953.0], [57.6, 4953.0], [57.7, 4953.0], [57.8, 4953.0], [57.9, 4953.0], [58.0, 4953.0], [58.1, 4953.0], [58.2, 4953.0], [58.3, 4953.0], [58.4, 4953.0], [58.5, 4953.0], [58.6, 4953.0], [58.7, 4953.0], [58.8, 4953.0], [58.9, 4953.0], [59.0, 4953.0], [59.1, 4953.0], [59.2, 4953.0], [59.3, 4953.0], [59.4, 4953.0], [59.5, 4953.0], [59.6, 4953.0], [59.7, 4953.0], [59.8, 4953.0], [59.9, 4953.0], [60.0, 4953.0], [60.1, 4953.0], [60.2, 4953.0], [60.3, 4953.0], [60.4, 4953.0], [60.5, 4953.0], [60.6, 4953.0], [60.7, 4953.0], [60.8, 4953.0], [60.9, 4953.0], [61.0, 4953.0], [61.1, 4953.0], [61.2, 4953.0], [61.3, 4953.0], [61.4, 4953.0], [61.5, 4953.0], [61.6, 4953.0], [61.7, 4953.0], [61.8, 4953.0], [61.9, 4953.0], [62.0, 4953.0], [62.1, 4953.0], [62.2, 4953.0], [62.3, 4953.0], [62.4, 4953.0], [62.5, 4953.0], [62.6, 4953.0], [62.7, 4953.0], [62.8, 4953.0], [62.9, 4953.0], [63.0, 4953.0], [63.1, 4953.0], [63.2, 4953.0], [63.3, 4953.0], [63.4, 4953.0], [63.5, 4953.0], [63.6, 4953.0], [63.7, 4953.0], [63.8, 4953.0], [63.9, 4953.0], [64.0, 4953.0], [64.1, 4953.0], [64.2, 4953.0], [64.3, 4953.0], [64.4, 4953.0], [64.5, 4953.0], [64.6, 4953.0], [64.7, 4953.0], [64.8, 4953.0], [64.9, 4953.0], [65.0, 4953.0], [65.1, 4953.0], [65.2, 4953.0], [65.3, 4953.0], [65.4, 4953.0], [65.5, 4953.0], [65.6, 4953.0], [65.7, 4953.0], [65.8, 4953.0], [65.9, 4953.0], [66.0, 4953.0], [66.1, 4953.0], [66.2, 4953.0], [66.3, 4953.0], [66.4, 4953.0], [66.5, 4953.0], [66.6, 4953.0], [66.7, 4953.0], [66.8, 4953.0], [66.9, 4953.0], [67.0, 4953.0], [67.1, 4953.0], [67.2, 4953.0], [67.3, 4953.0], [67.4, 4953.0], [67.5, 4953.0], [67.6, 4953.0], [67.7, 4953.0], [67.8, 4953.0], [67.9, 4953.0], [68.0, 4953.0], [68.1, 4953.0], [68.2, 4953.0], [68.3, 4953.0], [68.4, 4953.0], [68.5, 4953.0], [68.6, 4953.0], [68.7, 4953.0], [68.8, 4953.0], [68.9, 4953.0], [69.0, 4953.0], [69.1, 4953.0], [69.2, 4953.0], [69.3, 4953.0], [69.4, 4953.0], [69.5, 4953.0], [69.6, 4953.0], [69.7, 4953.0], [69.8, 4953.0], [69.9, 4953.0], [70.0, 4953.0], [70.1, 4953.0], [70.2, 4953.0], [70.3, 4953.0], [70.4, 4953.0], [70.5, 4953.0], [70.6, 4953.0], [70.7, 4953.0], [70.8, 4953.0], [70.9, 4953.0], [71.0, 4953.0], [71.1, 4953.0], [71.2, 4953.0], [71.3, 4953.0], [71.4, 4953.0], [71.5, 4953.0], [71.6, 4953.0], [71.7, 4953.0], [71.8, 4953.0], [71.9, 4953.0], [72.0, 4953.0], [72.1, 4953.0], [72.2, 4953.0], [72.3, 4953.0], [72.4, 4953.0], [72.5, 4953.0], [72.6, 4953.0], [72.7, 4953.0], [72.8, 4953.0], [72.9, 4953.0], [73.0, 4953.0], [73.1, 4953.0], [73.2, 4953.0], [73.3, 4953.0], [73.4, 4953.0], [73.5, 4953.0], [73.6, 4953.0], [73.7, 4953.0], [73.8, 4953.0], [73.9, 4953.0], [74.0, 4953.0], [74.1, 4953.0], [74.2, 4953.0], [74.3, 4953.0], [74.4, 4953.0], [74.5, 4953.0], [74.6, 4953.0], [74.7, 4953.0], [74.8, 4953.0], [74.9, 4953.0], [75.0, 4953.0], [75.1, 4953.0], [75.2, 4953.0], [75.3, 4953.0], [75.4, 4953.0], [75.5, 4953.0], [75.6, 4953.0], [75.7, 4953.0], [75.8, 4953.0], [75.9, 4953.0], [76.0, 4953.0], [76.1, 4953.0], [76.2, 4953.0], [76.3, 4953.0], [76.4, 4953.0], [76.5, 4953.0], [76.6, 4953.0], [76.7, 4953.0], [76.8, 4953.0], [76.9, 4953.0], [77.0, 4953.0], [77.1, 4953.0], [77.2, 4953.0], [77.3, 4953.0], [77.4, 4953.0], [77.5, 4953.0], [77.6, 4953.0], [77.7, 4953.0], [77.8, 4953.0], [77.9, 4953.0], [78.0, 4953.0], [78.1, 4953.0], [78.2, 4953.0], [78.3, 4953.0], [78.4, 4953.0], [78.5, 4953.0], [78.6, 4953.0], [78.7, 4953.0], [78.8, 4953.0], [78.9, 4953.0], [79.0, 4953.0], [79.1, 4953.0], [79.2, 4953.0], [79.3, 4953.0], [79.4, 4953.0], [79.5, 4953.0], [79.6, 4953.0], [79.7, 4953.0], [79.8, 4953.0], [79.9, 4953.0], [80.0, 4953.0], [80.1, 4953.0], [80.2, 4953.0], [80.3, 4953.0], [80.4, 4953.0], [80.5, 4953.0], [80.6, 4953.0], [80.7, 4953.0], [80.8, 4953.0], [80.9, 4953.0], [81.0, 4953.0], [81.1, 4953.0], [81.2, 4953.0], [81.3, 4953.0], [81.4, 4953.0], [81.5, 4953.0], [81.6, 4953.0], [81.7, 4953.0], [81.8, 4953.0], [81.9, 4953.0], [82.0, 4953.0], [82.1, 4953.0], [82.2, 4953.0], [82.3, 4953.0], [82.4, 4953.0], [82.5, 4953.0], [82.6, 4953.0], [82.7, 4953.0], [82.8, 4953.0], [82.9, 4953.0], [83.0, 4953.0], [83.1, 4953.0], [83.2, 4953.0], [83.3, 4953.0], [83.4, 4953.0], [83.5, 4953.0], [83.6, 4953.0], [83.7, 4953.0], [83.8, 4953.0], [83.9, 4953.0], [84.0, 4953.0], [84.1, 4953.0], [84.2, 4953.0], [84.3, 4953.0], [84.4, 4953.0], [84.5, 4953.0], [84.6, 4953.0], [84.7, 4953.0], [84.8, 4953.0], [84.9, 4953.0], [85.0, 4953.0], [85.1, 4953.0], [85.2, 4953.0], [85.3, 4953.0], [85.4, 4953.0], [85.5, 4953.0], [85.6, 4953.0], [85.7, 4953.0], [85.8, 4953.0], [85.9, 4953.0], [86.0, 4953.0], [86.1, 4953.0], [86.2, 4953.0], [86.3, 4953.0], [86.4, 4953.0], [86.5, 4953.0], [86.6, 4953.0], [86.7, 4953.0], [86.8, 4953.0], [86.9, 4953.0], [87.0, 4953.0], [87.1, 4953.0], [87.2, 4953.0], [87.3, 4953.0], [87.4, 4953.0], [87.5, 4953.0], [87.6, 4953.0], [87.7, 4953.0], [87.8, 4953.0], [87.9, 4953.0], [88.0, 4953.0], [88.1, 4953.0], [88.2, 4953.0], [88.3, 4953.0], [88.4, 4953.0], [88.5, 4953.0], [88.6, 4953.0], [88.7, 4953.0], [88.8, 4953.0], [88.9, 4953.0], [89.0, 4953.0], [89.1, 4953.0], [89.2, 4953.0], [89.3, 4953.0], [89.4, 4953.0], [89.5, 4953.0], [89.6, 4953.0], [89.7, 4953.0], [89.8, 4953.0], [89.9, 4953.0], [90.0, 4953.0], [90.1, 4953.0], [90.2, 4953.0], [90.3, 4953.0], [90.4, 4953.0], [90.5, 4953.0], [90.6, 4953.0], [90.7, 4953.0], [90.8, 4953.0], [90.9, 4953.0], [91.0, 4953.0], [91.1, 4953.0], [91.2, 4953.0], [91.3, 4953.0], [91.4, 4953.0], [91.5, 4953.0], [91.6, 4953.0], [91.7, 4953.0], [91.8, 4953.0], [91.9, 4953.0], [92.0, 4953.0], [92.1, 4953.0], [92.2, 4953.0], [92.3, 4953.0], [92.4, 4953.0], [92.5, 4953.0], [92.6, 4953.0], [92.7, 4953.0], [92.8, 4953.0], [92.9, 4953.0], [93.0, 4953.0], [93.1, 4953.0], [93.2, 4953.0], [93.3, 4953.0], [93.4, 4953.0], [93.5, 4953.0], [93.6, 4953.0], [93.7, 4953.0], [93.8, 4953.0], [93.9, 4953.0], [94.0, 4953.0], [94.1, 4953.0], [94.2, 4953.0], [94.3, 4953.0], [94.4, 4953.0], [94.5, 4953.0], [94.6, 4953.0], [94.7, 4953.0], [94.8, 4953.0], [94.9, 4953.0], [95.0, 4953.0], [95.1, 4953.0], [95.2, 4953.0], [95.3, 4953.0], [95.4, 4953.0], [95.5, 4953.0], [95.6, 4953.0], [95.7, 4953.0], [95.8, 4953.0], [95.9, 4953.0], [96.0, 4953.0], [96.1, 4953.0], [96.2, 4953.0], [96.3, 4953.0], [96.4, 4953.0], [96.5, 4953.0], [96.6, 4953.0], [96.7, 4953.0], [96.8, 4953.0], [96.9, 4953.0], [97.0, 4953.0], [97.1, 4953.0], [97.2, 4953.0], [97.3, 4953.0], [97.4, 4953.0], [97.5, 4953.0], [97.6, 4953.0], [97.7, 4953.0], [97.8, 4953.0], [97.9, 4953.0], [98.0, 4953.0], [98.1, 4953.0], [98.2, 4953.0], [98.3, 4953.0], [98.4, 4953.0], [98.5, 4953.0], [98.6, 4953.0], [98.7, 4953.0], [98.8, 4953.0], [98.9, 4953.0], [99.0, 4953.0], [99.1, 4953.0], [99.2, 4953.0], [99.3, 4953.0], [99.4, 4953.0], [99.5, 4953.0], [99.6, 4953.0], [99.7, 4953.0], [99.8, 4953.0], [99.9, 4953.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 400.0, "maxY": 317.0, "series": [{"data": [[400.0, 1.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[34100.0, 11.0], [33700.0, 6.0], [33300.0, 3.0], [32900.0, 3.0], [34500.0, 2.0], [35700.0, 1.0], [37300.0, 3.0], [38500.0, 1.0], [38900.0, 2.0], [37700.0, 1.0], [40100.0, 1.0], [41700.0, 1.0], [43700.0, 1.0], [50100.0, 1.0], [49300.0, 1.0], [52500.0, 1.0], [54900.0, 1.0], [54100.0, 1.0], [2800.0, 3.0], [2900.0, 1.0], [3000.0, 3.0], [3700.0, 1.0], [4000.0, 1.0], [4200.0, 2.0], [4300.0, 3.0], [4600.0, 7.0], [4700.0, 8.0], [4800.0, 1.0], [4900.0, 4.0], [5100.0, 4.0], [5000.0, 2.0], [5200.0, 5.0], [5300.0, 2.0], [5500.0, 3.0], [5600.0, 1.0], [5400.0, 1.0], [5700.0, 2.0], [5900.0, 1.0], [6100.0, 1.0], [6300.0, 1.0], [6600.0, 2.0], [6800.0, 1.0], [6700.0, 1.0], [6900.0, 2.0], [7100.0, 6.0], [7000.0, 4.0], [7200.0, 5.0], [7300.0, 4.0], [7400.0, 5.0], [7500.0, 14.0], [7600.0, 11.0], [7700.0, 10.0], [7800.0, 5.0], [7900.0, 8.0], [8000.0, 14.0], [8100.0, 11.0], [8300.0, 12.0], [8200.0, 13.0], [8400.0, 11.0], [8500.0, 20.0], [8600.0, 25.0], [8700.0, 20.0], [9200.0, 53.0], [8800.0, 18.0], [8900.0, 31.0], [9000.0, 21.0], [9100.0, 30.0], [9400.0, 55.0], [9500.0, 37.0], [9600.0, 40.0], [9300.0, 15.0], [9700.0, 41.0], [10000.0, 75.0], [9800.0, 89.0], [9900.0, 73.0], [10100.0, 86.0], [10200.0, 122.0], [10300.0, 84.0], [10400.0, 184.0], [10500.0, 95.0], [10600.0, 57.0], [10700.0, 75.0], [10800.0, 89.0], [10900.0, 70.0], [11000.0, 52.0], [11100.0, 68.0], [11200.0, 127.0], [11400.0, 65.0], [11300.0, 98.0], [11600.0, 57.0], [11500.0, 39.0], [11700.0, 43.0], [12000.0, 133.0], [12100.0, 28.0], [12200.0, 36.0], [11800.0, 38.0], [11900.0, 150.0], [12300.0, 12.0], [12400.0, 29.0], [12500.0, 22.0], [12600.0, 13.0], [12700.0, 24.0], [12800.0, 34.0], [12900.0, 27.0], [13100.0, 29.0], [13000.0, 23.0], [13300.0, 19.0], [13200.0, 12.0], [13700.0, 20.0], [13400.0, 36.0], [13600.0, 18.0], [13500.0, 41.0], [13800.0, 16.0], [13900.0, 25.0], [14100.0, 40.0], [14000.0, 37.0], [14300.0, 36.0], [14200.0, 27.0], [14600.0, 85.0], [14700.0, 94.0], [14500.0, 47.0], [14400.0, 49.0], [14800.0, 57.0], [15100.0, 36.0], [15200.0, 49.0], [15300.0, 20.0], [15000.0, 38.0], [14900.0, 40.0], [15500.0, 47.0], [15700.0, 47.0], [15400.0, 30.0], [15600.0, 41.0], [15800.0, 50.0], [15900.0, 58.0], [16000.0, 26.0], [16100.0, 20.0], [16200.0, 46.0], [16300.0, 20.0], [17200.0, 15.0], [16400.0, 24.0], [16600.0, 25.0], [16800.0, 317.0], [17000.0, 21.0], [17400.0, 37.0], [17800.0, 21.0], [17600.0, 56.0], [18000.0, 18.0], [18400.0, 12.0], [18200.0, 17.0], [19400.0, 45.0], [19000.0, 19.0], [19200.0, 27.0], [18800.0, 41.0], [18600.0, 11.0], [19600.0, 21.0], [19800.0, 20.0], [20200.0, 21.0], [20400.0, 15.0], [20000.0, 13.0], [20800.0, 13.0], [21000.0, 6.0], [21200.0, 6.0], [21400.0, 3.0], [20600.0, 5.0], [22000.0, 4.0], [21600.0, 14.0], [22200.0, 8.0], [21800.0, 11.0], [22400.0, 7.0], [22600.0, 5.0], [23200.0, 8.0], [23400.0, 8.0], [23000.0, 7.0], [22800.0, 5.0], [24400.0, 5.0], [24000.0, 6.0], [24200.0, 7.0], [23600.0, 4.0], [23800.0, 4.0], [25000.0, 7.0], [24800.0, 3.0], [25200.0, 3.0], [24600.0, 5.0], [25400.0, 2.0], [26000.0, 2.0], [26400.0, 7.0], [25600.0, 6.0], [26200.0, 4.0], [26600.0, 13.0], [25800.0, 3.0], [27000.0, 5.0], [26800.0, 5.0], [27200.0, 2.0], [27400.0, 7.0], [27600.0, 86.0], [28000.0, 21.0], [28400.0, 6.0], [28600.0, 6.0], [28200.0, 7.0], [27800.0, 4.0], [28800.0, 2.0], [29400.0, 38.0], [29200.0, 25.0], [29600.0, 34.0], [29000.0, 1.0], [30600.0, 12.0], [30200.0, 14.0], [29800.0, 5.0], [30400.0, 5.0], [30000.0, 2.0], [30800.0, 36.0], [31000.0, 9.0], [31200.0, 47.0], [31400.0, 19.0], [31600.0, 10.0], [32400.0, 7.0], [31800.0, 4.0], [32600.0, 5.0], [32200.0, 2.0], [32800.0, 7.0], [33200.0, 6.0], [33600.0, 6.0], [34800.0, 3.0], [34400.0, 2.0], [34000.0, 2.0], [35600.0, 4.0], [36400.0, 3.0], [36800.0, 3.0], [35200.0, 1.0], [36000.0, 1.0], [38000.0, 1.0], [38800.0, 1.0], [37200.0, 2.0], [37600.0, 1.0], [39200.0, 1.0], [42000.0, 2.0], [44000.0, 1.0], [47600.0, 1.0], [50000.0, 1.0], [49200.0, 1.0], [52800.0, 1.0], [33100.0, 2.0], [34300.0, 6.0], [34700.0, 8.0], [33900.0, 5.0], [33500.0, 7.0], [35500.0, 5.0], [36700.0, 4.0], [35900.0, 3.0], [36300.0, 1.0], [37100.0, 3.0], [37900.0, 1.0], [38300.0, 2.0], [37500.0, 1.0], [38700.0, 1.0], [43900.0, 1.0], [43500.0, 1.0], [45500.0, 2.0], [45900.0, 1.0], [49900.0, 1.0], [54700.0, 1.0], [16500.0, 24.0], [16700.0, 42.0], [16900.0, 144.0], [17100.0, 17.0], [17300.0, 15.0], [17700.0, 23.0], [17500.0, 36.0], [17900.0, 20.0], [18300.0, 19.0], [18100.0, 40.0], [18700.0, 14.0], [18500.0, 17.0], [18900.0, 10.0], [19100.0, 13.0], [19300.0, 24.0], [20300.0, 20.0], [19700.0, 13.0], [20100.0, 14.0], [19500.0, 18.0], [19900.0, 32.0], [20900.0, 9.0], [20700.0, 5.0], [21500.0, 4.0], [20500.0, 8.0], [21100.0, 8.0], [21300.0, 8.0], [21700.0, 9.0], [21900.0, 4.0], [22300.0, 5.0], [22100.0, 6.0], [22500.0, 3.0], [22900.0, 4.0], [23100.0, 3.0], [23500.0, 4.0], [22700.0, 5.0], [23300.0, 2.0], [23900.0, 3.0], [23700.0, 2.0], [24100.0, 6.0], [24300.0, 5.0], [25300.0, 5.0], [25100.0, 3.0], [24700.0, 1.0], [24900.0, 3.0], [25500.0, 1.0], [25700.0, 7.0], [26500.0, 5.0], [26300.0, 5.0], [26100.0, 5.0], [25900.0, 1.0], [27100.0, 5.0], [27300.0, 7.0], [27500.0, 33.0], [26900.0, 2.0], [26700.0, 2.0], [28500.0, 9.0], [27700.0, 34.0], [28300.0, 2.0], [27900.0, 12.0], [28100.0, 12.0], [28900.0, 2.0], [29100.0, 7.0], [29500.0, 40.0], [29300.0, 59.0], [28700.0, 5.0], [29700.0, 32.0], [30100.0, 5.0], [30300.0, 10.0], [29900.0, 8.0], [30700.0, 8.0], [30500.0, 3.0], [30900.0, 51.0], [31100.0, 18.0], [31300.0, 32.0], [31500.0, 19.0], [31700.0, 3.0], [32300.0, 13.0], [31900.0, 9.0], [32500.0, 4.0], [32700.0, 8.0], [32100.0, 5.0], [33400.0, 6.0], [34200.0, 5.0], [34600.0, 6.0], [33000.0, 2.0], [35800.0, 10.0], [35000.0, 4.0], [36600.0, 2.0], [38600.0, 5.0], [38200.0, 1.0], [37000.0, 2.0], [39400.0, 2.0], [39800.0, 1.0], [42600.0, 1.0], [42200.0, 2.0], [45400.0, 1.0], [47400.0, 1.0], [48200.0, 1.0], [51000.0, 1.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[77400.0, 1.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[10700.0, 1.0], [10600.0, 1.0], [11200.0, 1.0], [11400.0, 2.0], [11500.0, 2.0], [11700.0, 2.0], [11600.0, 2.0], [11300.0, 1.0], [11900.0, 6.0], [12100.0, 5.0], [12000.0, 4.0], [12200.0, 5.0], [11800.0, 3.0], [12500.0, 4.0], [12400.0, 5.0], [12700.0, 5.0], [12600.0, 1.0], [12300.0, 6.0], [13200.0, 2.0], [13100.0, 3.0], [12800.0, 2.0], [13300.0, 2.0], [13000.0, 4.0], [12900.0, 1.0], [13700.0, 3.0], [13400.0, 1.0], [13500.0, 1.0], [13600.0, 1.0], [14100.0, 2.0], [13900.0, 2.0], [14200.0, 2.0], [14300.0, 1.0], [14700.0, 2.0], [14600.0, 2.0], [14500.0, 1.0], [15200.0, 2.0], [15000.0, 1.0], [14900.0, 1.0], [15500.0, 2.0], [15800.0, 1.0], [15900.0, 2.0], [16200.0, 1.0], [16500.0, 1.0], [16400.0, 2.0], [16800.0, 1.0], [18500.0, 1.0], [19300.0, 7.0], [18700.0, 1.0], [19000.0, 5.0], [19400.0, 7.0], [18900.0, 3.0], [19100.0, 5.0], [18800.0, 3.0], [19200.0, 2.0], [18600.0, 2.0], [19700.0, 3.0], [19900.0, 12.0], [19500.0, 10.0], [19600.0, 7.0], [19800.0, 7.0], [20100.0, 5.0], [20000.0, 5.0], [20300.0, 14.0], [20400.0, 8.0], [20200.0, 8.0], [20700.0, 8.0], [21300.0, 2.0], [21500.0, 1.0], [21400.0, 2.0], [20600.0, 4.0], [20500.0, 15.0], [20800.0, 4.0], [21100.0, 2.0], [21000.0, 4.0], [21200.0, 2.0], [20900.0, 2.0], [22000.0, 1.0], [23200.0, 5.0], [22900.0, 2.0], [22600.0, 1.0], [23500.0, 7.0], [23300.0, 4.0], [23400.0, 2.0], [23000.0, 1.0], [23100.0, 1.0], [23700.0, 3.0], [23800.0, 2.0], [23600.0, 1.0], [24100.0, 1.0], [23900.0, 2.0], [24300.0, 1.0], [24000.0, 2.0], [24200.0, 1.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[4900.0, 1.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 77400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7142.0, "series": [{"data": [[0.0, 1.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 7142.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 2.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68537582E12, "maxY": 700.0, "series": [{"data": [[1.68537606E12, 1.0]], "isOverall": false, "label": "tearDown consumers", "isController": false}, {"data": [[1.68537594E12, 700.0], [1.685376E12, 700.0], [1.68537606E12, 540.7270194986074]], "isOverall": false, "label": "Producers", "isController": false}, {"data": [[1.68537594E12, 300.0]], "isOverall": false, "label": "Consumers", "isController": false}, {"data": [[1.68537582E12, 1.0]], "isOverall": false, "label": "setUp", "isController": false}, {"data": [[1.68537588E12, 1.0]], "isOverall": false, "label": "setUp consumers", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68537606E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 467.0, "minX": 1.0, "maxY": 77461.0, "series": [{"data": [[2.0, 467.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[2.0, 467.0]], "isOverall": false, "label": "create message-Aggregated", "isController": false}, {"data": [[2.0, 17483.5], [3.0, 15783.0], [5.0, 15883.0], [6.0, 14629.0], [7.0, 14137.0], [8.0, 14985.0], [10.0, 16312.5], [11.0, 16264.0], [12.0, 16268.0], [13.0, 15359.0], [14.0, 18347.0], [15.0, 14787.0], [17.0, 16083.0], [18.0, 15362.0], [19.0, 16870.0], [20.0, 17598.0], [21.0, 16654.0], [22.0, 16860.0], [23.0, 17571.0], [24.0, 15346.0], [25.0, 16639.0], [26.0, 16862.0], [27.0, 16339.0], [28.0, 14948.0], [29.0, 16835.0], [30.0, 15572.0], [31.0, 15745.0], [33.0, 16231.0], [32.0, 16835.0], [34.0, 15693.0], [37.0, 17491.0], [39.0, 17102.0], [41.0, 18187.0], [40.0, 16476.0], [43.0, 14974.0], [42.0, 14062.0], [45.0, 18564.0], [44.0, 15081.0], [47.0, 16426.0], [46.0, 17494.0], [48.0, 20945.0], [51.0, 13966.0], [50.0, 17477.0], [53.0, 15639.0], [52.0, 15644.0], [55.0, 20397.0], [57.0, 14230.5], [56.0, 15980.5], [59.0, 14893.0], [61.0, 16519.0], [60.0, 20396.0], [63.0, 15332.0], [62.0, 13797.0], [67.0, 16520.0], [65.0, 16604.0], [71.0, 14482.0], [70.0, 15542.0], [69.0, 16259.0], [75.0, 16370.0], [74.0, 16442.0], [73.0, 13473.0], [72.0, 16378.0], [79.0, 17437.0], [77.0, 15152.0], [83.0, 15925.0], [82.0, 16156.0], [81.0, 15024.0], [87.0, 17003.0], [85.0, 18450.5], [91.0, 16153.0], [90.0, 15864.0], [89.0, 15755.0], [88.0, 19419.0], [95.0, 20302.0], [94.0, 16291.0], [93.0, 15562.0], [92.0, 16292.0], [98.0, 20288.0], [97.0, 17332.0], [96.0, 18414.0], [103.0, 16307.0], [102.0, 19323.5], [100.0, 18807.5], [107.0, 20309.0], [105.0, 19347.0], [104.0, 15868.0], [111.0, 20257.0], [110.0, 20765.0], [109.0, 17296.0], [108.0, 28794.0], [115.0, 20120.0], [114.0, 19330.0], [113.0, 16360.0], [112.0, 19681.0], [119.0, 16244.0], [118.0, 20408.0], [116.0, 18332.0], [123.0, 33670.0], [122.0, 21326.0], [120.0, 16143.5], [127.0, 17158.0], [126.0, 16855.0], [125.0, 15534.0], [124.0, 16482.0], [135.0, 18761.0], [133.0, 16094.0], [132.0, 15656.0], [131.0, 19208.0], [130.0, 21064.0], [128.0, 19210.0], [143.0, 19196.0], [142.0, 15353.0], [141.0, 17560.0], [139.0, 17157.0], [138.0, 19203.0], [137.0, 16445.0], [136.0, 20109.0], [151.0, 18131.0], [150.0, 20013.0], [149.0, 20052.0], [148.0, 15911.0], [147.0, 20076.0], [146.0, 17131.0], [145.0, 18208.0], [144.0, 19990.0], [159.0, 14760.0], [158.0, 21818.0], [156.0, 20484.0], [155.0, 18537.0], [153.0, 20511.0], [152.0, 20972.0], [167.0, 20440.0], [166.0, 19036.0], [165.0, 15664.0], [164.0, 16680.0], [163.0, 19945.0], [162.0, 20461.0], [160.0, 19809.5], [175.0, 16982.0], [174.0, 17186.666666666668], [171.0, 20163.5], [169.0, 18463.0], [168.0, 14385.0], [183.0, 18209.0], [182.0, 16302.0], [181.0, 16272.0], [179.0, 15893.0], [177.0, 16987.0], [176.0, 19939.0], [190.0, 16677.0], [188.0, 15871.5], [187.0, 14583.0], [185.0, 18467.5], [184.0, 17020.0], [199.0, 17036.0], [198.0, 17799.0], [197.0, 16678.0], [196.0, 15667.0], [195.0, 16063.0], [194.0, 12877.0], [193.0, 18608.0], [192.0, 16270.0], [207.0, 20800.5], [206.0, 18610.0], [205.0, 16293.0], [203.0, 16985.0], [202.0, 18461.0], [201.0, 15986.0], [215.0, 50142.0], [214.0, 15479.0], [212.0, 19934.5], [211.0, 19944.0], [209.0, 18251.5], [223.0, 13780.0], [222.0, 16676.0], [221.0, 15488.0], [219.0, 18441.5], [217.0, 17977.0], [216.0, 21382.0], [231.0, 13532.0], [229.0, 15477.5], [228.0, 17675.0], [226.0, 16859.0], [224.0, 18047.0], [239.0, 18053.0], [237.0, 15178.0], [236.0, 16626.0], [235.0, 16268.0], [233.0, 14753.0], [232.0, 16269.0], [247.0, 16267.0], [246.0, 15908.0], [245.0, 19959.0], [244.0, 15659.0], [243.0, 16674.0], [242.0, 16268.0], [240.0, 16982.0], [255.0, 17158.5], [254.0, 19030.0], [253.0, 20309.0], [252.0, 17795.0], [250.0, 20284.0], [249.0, 19935.0], [248.0, 18643.5], [270.0, 16976.0], [271.0, 18246.5], [268.0, 16075.5], [259.0, 16978.0], [258.0, 16065.0], [257.0, 19846.0], [267.0, 16059.0], [266.0, 16675.0], [265.0, 18498.0], [263.0, 16398.5], [262.0, 20437.0], [261.0, 52593.0], [260.0, 16273.0], [286.0, 54786.0], [287.0, 21627.0], [285.0, 19956.0], [275.0, 16265.0], [273.0, 20079.0], [283.0, 15866.0], [281.0, 15560.0], [280.0, 20892.0], [279.0, 15906.0], [278.0, 14021.0], [277.0, 16976.0], [276.0, 14377.0], [301.0, 18490.0], [303.0, 13985.0], [300.0, 19027.0], [290.0, 41116.5], [289.0, 20893.0], [288.0, 15905.0], [299.0, 15991.0], [297.0, 22104.0], [296.0, 19931.0], [294.0, 15904.0], [293.0, 19931.0], [292.0, 15915.0], [307.0, 18050.0], [318.0, 16442.5], [316.0, 16948.0], [306.0, 19939.0], [305.0, 17792.0], [304.0, 15905.0], [315.0, 16670.0], [314.0, 15924.5], [312.0, 16947.0], [311.0, 17025.5], [310.0, 19025.0], [309.0, 18617.0], [308.0, 16975.0], [334.0, 20242.0], [335.0, 14857.0], [333.0, 17853.0], [332.0, 16362.0], [331.0, 16143.0], [329.0, 16109.0], [328.0, 15605.0], [326.0, 15808.666666666666], [323.0, 16035.0], [321.0, 16241.0], [320.0, 17240.0], [324.0, 16240.0], [349.0, 16589.0], [351.0, 15144.0], [348.0, 39239.0], [338.0, 20106.0], [337.0, 16657.0], [336.0, 15965.0], [347.0, 14826.0], [346.0, 14839.0], [345.0, 15931.0], [344.0, 15574.0], [343.0, 47615.0], [342.0, 15728.0], [341.0, 18698.0], [340.0, 18216.0], [366.0, 15861.0], [367.0, 19528.0], [365.0, 19527.0], [364.0, 19552.0], [363.0, 16572.0], [362.0, 16583.0], [361.0, 15660.0], [360.0, 15656.0], [359.0, 15254.0], [353.0, 16479.0], [352.0, 18626.0], [355.0, 16548.0], [354.0, 12653.0], [358.0, 14773.0], [357.0, 15219.5], [356.0, 16575.0], [381.0, 19928.0], [382.0, 18524.0], [380.0, 17549.0], [371.0, 20487.0], [370.0, 19534.0], [368.0, 15650.0], [379.0, 17547.0], [378.0, 16502.0], [377.0, 19957.0], [376.0, 14891.0], [375.0, 17577.0], [374.0, 32761.0], [372.0, 16081.0], [398.0, 19422.0], [399.0, 19422.0], [397.0, 19120.0], [387.0, 19428.0], [386.0, 20300.0], [385.0, 13495.0], [384.0, 18103.5], [395.0, 19925.0], [394.0, 19446.0], [393.0, 15754.0], [392.0, 18111.0], [391.0, 19724.0], [390.0, 19726.0], [389.0, 19479.0], [388.0, 19450.0], [414.0, 17524.0], [415.0, 17524.0], [413.0, 19406.0], [412.0, 16452.0], [411.0, 17935.0], [410.0, 15744.0], [408.0, 54107.0], [407.0, 16458.0], [401.0, 18508.0], [403.0, 16456.0], [402.0, 19414.0], [406.0, 31702.5], [404.0, 18081.5], [429.0, 17833.0], [430.0, 20389.0], [428.0, 17025.0], [419.0, 17611.0], [417.0, 19348.0], [416.0, 20319.0], [427.0, 19239.5], [425.0, 19311.0], [424.0, 19809.0], [423.0, 15664.0], [422.0, 18430.0], [421.0, 18437.0], [420.0, 19361.0], [445.0, 18535.0], [446.0, 18230.5], [444.0, 16651.0], [434.0, 14980.5], [433.0, 16393.0], [432.0, 17087.0], [443.0, 16807.0], [442.0, 16392.0], [441.0, 16649.0], [440.0, 19975.0], [439.0, 18976.0], [438.0, 18530.0], [437.0, 15580.0], [436.0, 20225.0], [462.0, 19489.0], [463.0, 14432.0], [461.0, 17917.0], [459.0, 24101.0], [458.0, 18554.0], [456.0, 17843.0], [454.0, 17498.5], [452.0, 25412.5], [451.0, 17201.0], [450.0, 21217.0], [448.0, 27500.5], [478.0, 14802.0], [479.0, 14874.0], [476.0, 45946.0], [467.0, 19207.0], [466.0, 19495.0], [465.0, 19039.0], [475.0, 43565.0], [474.0, 15573.0], [473.0, 17454.0], [472.0, 15380.0], [471.0, 12312.0], [470.0, 13375.0], [469.0, 18894.0], [468.0, 17202.0], [494.0, 23886.0], [495.0, 15038.0], [492.0, 16119.0], [483.0, 44017.0], [482.0, 13925.5], [480.0, 12496.0], [490.0, 15794.0], [489.0, 15868.0], [488.0, 28981.0], [486.0, 45427.0], [485.0, 15487.0], [484.0, 16215.0], [509.0, 10013.0], [511.0, 33228.0], [508.0, 11074.0], [499.0, 11462.0], [498.0, 13129.0], [497.0, 14721.0], [496.0, 20118.0], [507.0, 45516.0], [506.0, 13218.0], [505.0, 12739.0], [504.0, 12921.0], [503.0, 14833.0], [502.0, 13986.0], [501.0, 12116.0], [500.0, 42237.0], [540.0, 16588.14285714286], [543.0, 33650.0], [529.0, 17401.5], [528.0, 7919.0], [531.0, 21165.0], [530.0, 26157.0], [533.0, 14836.6], [532.0, 25346.0], [542.0, 28831.0], [541.0, 25182.0], [539.0, 21217.0], [538.0, 7965.5], [537.0, 8083.5], [536.0, 7790.0], [527.0, 8279.0], [514.0, 11416.0], [513.0, 39298.5], [516.0, 8904.0], [515.0, 10598.0], [519.0, 37215.25], [517.0, 9215.0], [526.0, 8290.0], [525.0, 18999.4], [524.0, 23265.75], [523.0, 9164.0], [522.0, 8745.0], [521.0, 14865.333333333334], [520.0, 22150.0], [535.0, 8596.0], [534.0, 12787.0], [572.0, 25857.714285714286], [575.0, 29554.285714285714], [561.0, 27280.066666666666], [560.0, 23243.0], [563.0, 32172.833333333332], [562.0, 20940.5], [565.0, 24224.0], [564.0, 27151.85714285714], [574.0, 31398.4], [573.0, 30682.833333333336], [571.0, 33198.0], [570.0, 25723.571428571428], [569.0, 38663.0], [568.0, 30582.75], [559.0, 31931.0], [545.0, 21311.0], [544.0, 7542.0], [547.0, 7794.0], [546.0, 7540.0], [549.0, 22465.0], [548.0, 21885.0], [551.0, 28844.285714285714], [550.0, 12292.166666666666], [558.0, 30364.666666666668], [557.0, 7241.5], [556.0, 25496.75], [555.0, 9793.0], [554.0, 9848.0], [553.0, 21083.5], [552.0, 27874.916666666664], [567.0, 26781.5], [566.0, 29173.235294117647], [601.0, 15038.0], [606.0, 25202.0], [607.0, 19252.333333333332], [593.0, 20694.666666666668], [592.0, 24703.333333333332], [595.0, 18886.5], [594.0, 23331.0], [597.0, 18876.0], [596.0, 16787.0], [605.0, 26275.0], [604.0, 21815.4], [602.0, 18848.5], [600.0, 25178.714285714286], [583.0, 13122.0], [582.0, 26901.333333333332], [581.0, 9009.0], [580.0, 23243.666666666668], [579.0, 25896.5], [578.0, 24456.0], [577.0, 29825.14285714286], [576.0, 31849.0], [591.0, 20371.0], [589.0, 16008.5], [588.0, 18878.0], [587.0, 18885.75], [586.0, 23405.75], [585.0, 26279.5], [584.0, 22350.25], [599.0, 25921.0], [598.0, 22762.0], [633.0, 22819.5], [637.0, 27058.800000000003], [639.0, 26721.4], [625.0, 19526.0], [624.0, 18163.0], [627.0, 33175.25], [626.0, 20308.5], [629.0, 26312.5], [628.0, 25856.0], [636.0, 26126.571428571428], [635.0, 26945.75], [634.0, 27008.5], [632.0, 18161.0], [615.0, 24665.25], [614.0, 12410.0], [613.0, 18169.0], [612.0, 25639.333333333332], [611.0, 26989.5], [610.0, 20532.0], [609.0, 31709.08333333334], [608.0, 12717.0], [623.0, 18175.0], [622.0, 12581.0], [621.0, 25025.666666666668], [620.0, 18182.0], [619.0, 25068.0], [618.0, 26468.5], [617.0, 20366.0], [616.0, 23665.333333333332], [631.0, 18187.0], [630.0, 24774.333333333336], [665.0, 19852.0], [669.0, 23224.6], [670.0, 20277.4], [656.0, 23882.5], [658.0, 29174.75], [657.0, 31517.0], [660.0, 26818.25], [659.0, 21007.357142857145], [668.0, 24640.333333333336], [667.0, 29349.0], [666.0, 8828.0], [664.0, 21106.333333333332], [647.0, 17100.5], [646.0, 22983.0], [645.0, 17098.0], [644.0, 17101.0], [643.0, 16560.5], [642.0, 17761.75], [641.0, 24586.428571428572], [640.0, 20802.666666666668], [655.0, 21190.8], [654.0, 25898.0], [653.0, 28746.88888888889], [652.0, 20118.0], [651.0, 25049.25], [649.0, 25860.666666666668], [648.0, 12981.0], [663.0, 19467.333333333332], [661.0, 21426.307692307695], [697.0, 18335.749999999993], [701.0, 15511.75], [702.0, 14714.0], [689.0, 26004.18181818182], [688.0, 27895.2], [691.0, 20795.5], [690.0, 19915.5], [700.0, 13212.840059790688], [699.0, 19257.7], [698.0, 16043.42857142857], [696.0, 18628.97014925374], [679.0, 27174.333333333332], [678.0, 29966.0], [677.0, 26164.0], [676.0, 21784.666666666668], [675.0, 20603.0], [674.0, 14926.0], [673.0, 23963.1875], [672.0, 22205.777777777777], [687.0, 25231.083333333332], [686.0, 28376.0], [685.0, 17796.0], [684.0, 25796.5], [683.0, 22158.5], [682.0, 24827.5], [681.0, 30164.166666666664], [680.0, 30271.375], [695.0, 20972.9375], [694.0, 22685.094594594604], [693.0, 28011.2], [692.0, 23507.75], [705.0, 15911.0], [704.0, 15527.0], [830.0, 15143.0], [1000.0, 29266.55886524824]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[689.1487869044132, 16648.00891552179]], "isOverall": false, "label": "Produce Kafka message for user-Aggregated", "isController": false}, {"data": [[1.0, 77461.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.0, 77461.0]], "isOverall": false, "label": "Create + subscribe consumers-Aggregated", "isController": false}, {"data": [[1000.0, 18117.190000000013]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1000.0, 18117.190000000013]], "isOverall": false, "label": "Consume Kafka message for user - receive latency-Aggregated", "isController": false}, {"data": [[1.0, 4953.0]], "isOverall": false, "label": "Close consumers", "isController": false}, {"data": [[1.0, 4953.0]], "isOverall": false, "label": "Close consumers-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.68537582E12, "maxY": 898.3666666666667, "series": [{"data": [[1.68537594E12, 525.9], [1.68537582E12, 0.0], [1.685376E12, 898.3666666666667], [1.68537606E12, 537.9], [1.68537588E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68537594E12, 0.0], [1.68537582E12, 0.0], [1.685376E12, 0.0], [1.68537606E12, 0.0], [1.68537588E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68537606E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 467.0, "minX": 1.68537582E12, "maxY": 77461.0, "series": [{"data": [[1.68537582E12, 467.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.68537594E12, 19408.454255319193], [1.685376E12, 12604.10041048312], [1.68537606E12, 20891.697493036245]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68537588E12, 77461.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.68537594E12, 18117.190000000013]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68537606E12, 4953.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68537606E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68537582E12, "maxY": 4.9E-324, "series": [{"data": [[1.68537582E12, 0.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.68537594E12, 0.0], [1.685376E12, 0.0], [1.68537606E12, 0.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68537588E12, 0.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.68537594E12, 0.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68537606E12, 0.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68537606E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68537582E12, "maxY": 4.9E-324, "series": [{"data": [[1.68537582E12, 0.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.68537594E12, 0.0], [1.685376E12, 0.0], [1.68537606E12, 0.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68537588E12, 0.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.68537594E12, 0.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68537606E12, 0.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68537606E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 467.0, "minX": 1.68537582E12, "maxY": 77461.0, "series": [{"data": [[1.68537594E12, 31645.0], [1.68537582E12, 467.0], [1.685376E12, 25377.0], [1.68537606E12, 54786.0], [1.68537588E12, 77461.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68537594E12, 30815.800000000003], [1.68537582E12, 467.0], [1.685376E12, 17519.4], [1.68537606E12, 33302.5], [1.68537588E12, 77461.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68537594E12, 31507.28], [1.68537582E12, 467.0], [1.685376E12, 21863.96], [1.68537606E12, 43960.0], [1.68537588E12, 77461.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68537594E12, 31234.85], [1.68537582E12, 467.0], [1.685376E12, 19423.999999999996], [1.68537606E12, 35610.25], [1.68537588E12, 77461.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68537594E12, 2870.0], [1.68537582E12, 467.0], [1.685376E12, 6625.0], [1.68537606E12, 4635.0], [1.68537588E12, 77461.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68537594E12, 16866.5], [1.68537582E12, 467.0], [1.685376E12, 11650.0], [1.68537606E12, 18515.5], [1.68537588E12, 77461.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68537606E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8940.0, "minX": 1.0, "maxY": 52125.0, "series": [{"data": [[533.0, 16846.0], [2.0, 26434.5], [652.0, 29595.0], [3.0, 14575.0], [4.0, 11561.0], [5.0, 15914.0], [6.0, 17817.5], [7.0, 15081.0], [8.0, 12647.0], [9.0, 16848.0], [10.0, 24199.0], [11.0, 17566.0], [12.0, 11184.5], [13.0, 14722.0], [14.0, 9516.5], [15.0, 14140.5], [16.0, 14363.0], [17.0, 10260.0], [18.0, 12393.5], [19.0, 13282.0], [20.0, 17799.0], [21.0, 18226.0], [22.0, 10857.5], [23.0, 10895.0], [24.0, 9065.5], [25.0, 8940.0], [26.0, 11763.0], [27.0, 17478.0], [29.0, 11757.0], [30.0, 14218.5], [32.0, 12491.0], [33.0, 13138.0], [34.0, 14462.5], [35.0, 13400.0], [36.0, 9488.5], [37.0, 10217.0], [38.0, 12929.5], [39.0, 13157.0], [41.0, 13952.5], [43.0, 20049.0], [42.0, 18181.5], [48.0, 9411.0], [53.0, 9277.0], [57.0, 19833.0], [59.0, 9930.0], [65.0, 20576.0], [71.0, 19878.0], [68.0, 9436.0], [69.0, 12447.0], [74.0, 14244.5], [73.0, 22248.0], [78.0, 14723.5], [82.0, 14696.5], [80.0, 14861.5], [81.0, 18296.0], [83.0, 31931.0], [85.0, 15924.0], [89.0, 10258.0], [88.0, 23346.0], [99.0, 10453.0], [96.0, 17810.5], [110.0, 16930.5], [112.0, 10444.5], [113.0, 11092.0], [115.0, 19399.0], [114.0, 16371.0], [118.0, 14641.0], [122.0, 27582.0], [127.0, 10433.0], [124.0, 17671.5], [134.0, 10500.0], [146.0, 11035.0], [148.0, 24534.5], [158.0, 10344.0], [197.0, 14831.0], [242.0, 11266.0], [1.0, 15137.0], [284.0, 11984.0], [313.0, 16991.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 52125.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 652.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[533.0, 0.0], [2.0, 0.0], [652.0, 0.0], [3.0, 0.0], [4.0, 0.0], [5.0, 0.0], [6.0, 0.0], [7.0, 0.0], [8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [16.0, 0.0], [17.0, 0.0], [18.0, 0.0], [19.0, 0.0], [20.0, 0.0], [21.0, 0.0], [22.0, 0.0], [23.0, 0.0], [24.0, 0.0], [25.0, 0.0], [26.0, 0.0], [27.0, 0.0], [29.0, 0.0], [30.0, 0.0], [32.0, 0.0], [33.0, 0.0], [34.0, 0.0], [35.0, 0.0], [36.0, 0.0], [37.0, 0.0], [38.0, 0.0], [39.0, 0.0], [41.0, 0.0], [43.0, 0.0], [42.0, 0.0], [48.0, 0.0], [53.0, 0.0], [57.0, 0.0], [59.0, 0.0], [65.0, 0.0], [71.0, 0.0], [68.0, 0.0], [69.0, 0.0], [74.0, 0.0], [73.0, 0.0], [78.0, 0.0], [82.0, 0.0], [80.0, 0.0], [81.0, 0.0], [83.0, 0.0], [85.0, 0.0], [89.0, 0.0], [88.0, 0.0], [99.0, 0.0], [96.0, 0.0], [110.0, 0.0], [112.0, 0.0], [113.0, 0.0], [115.0, 0.0], [114.0, 0.0], [118.0, 0.0], [122.0, 0.0], [127.0, 0.0], [124.0, 0.0], [134.0, 0.0], [146.0, 0.0], [148.0, 0.0], [158.0, 0.0], [197.0, 0.0], [242.0, 0.0], [1.0, 0.0], [284.0, 0.0], [313.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 652.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68537582E12, "maxY": 52.78333333333333, "series": [{"data": [[1.68537594E12, 47.55], [1.68537582E12, 0.03333333333333333], [1.685376E12, 52.78333333333333], [1.68537606E12, 18.266666666666666], [1.68537588E12, 0.45]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68537606E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68537582E12, "maxY": 52.78333333333333, "series": [{"data": [[1.68537594E12, 36.333333333333336], [1.68537582E12, 0.016666666666666666], [1.685376E12, 52.78333333333333], [1.68537606E12, 29.9], [1.68537588E12, 0.016666666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68537606E12, 0.03333333333333333]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68537606E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68537582E12, "maxY": 52.78333333333333, "series": [{"data": [[1.68537606E12, 0.03333333333333333]], "isOverall": false, "label": "Produce Kafka message for user-failure", "isController": false}, {"data": [[1.68537594E12, 5.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency-success", "isController": false}, {"data": [[1.68537582E12, 0.016666666666666666]], "isOverall": false, "label": "create message-success", "isController": false}, {"data": [[1.68537588E12, 0.016666666666666666]], "isOverall": false, "label": "Create + subscribe consumers-success", "isController": false}, {"data": [[1.68537594E12, 31.333333333333332], [1.685376E12, 52.78333333333333], [1.68537606E12, 29.883333333333333]], "isOverall": false, "label": "Produce Kafka message for user-success", "isController": false}, {"data": [[1.68537606E12, 0.016666666666666666]], "isOverall": false, "label": "Close consumers-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68537606E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68537582E12, "maxY": 52.78333333333333, "series": [{"data": [[1.68537594E12, 36.333333333333336], [1.68537582E12, 0.016666666666666666], [1.685376E12, 52.78333333333333], [1.68537606E12, 29.9], [1.68537588E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68537606E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68537606E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

