/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 689.0, "minX": 0.0, "maxY": 58889.0, "series": [{"data": [[0.0, 689.0], [0.1, 689.0], [0.2, 689.0], [0.3, 689.0], [0.4, 689.0], [0.5, 689.0], [0.6, 689.0], [0.7, 689.0], [0.8, 689.0], [0.9, 689.0], [1.0, 689.0], [1.1, 689.0], [1.2, 689.0], [1.3, 689.0], [1.4, 689.0], [1.5, 689.0], [1.6, 689.0], [1.7, 689.0], [1.8, 689.0], [1.9, 689.0], [2.0, 689.0], [2.1, 689.0], [2.2, 689.0], [2.3, 689.0], [2.4, 689.0], [2.5, 689.0], [2.6, 689.0], [2.7, 689.0], [2.8, 689.0], [2.9, 689.0], [3.0, 689.0], [3.1, 689.0], [3.2, 689.0], [3.3, 689.0], [3.4, 689.0], [3.5, 689.0], [3.6, 689.0], [3.7, 689.0], [3.8, 689.0], [3.9, 689.0], [4.0, 689.0], [4.1, 689.0], [4.2, 689.0], [4.3, 689.0], [4.4, 689.0], [4.5, 689.0], [4.6, 689.0], [4.7, 689.0], [4.8, 689.0], [4.9, 689.0], [5.0, 689.0], [5.1, 689.0], [5.2, 689.0], [5.3, 689.0], [5.4, 689.0], [5.5, 689.0], [5.6, 689.0], [5.7, 689.0], [5.8, 689.0], [5.9, 689.0], [6.0, 689.0], [6.1, 689.0], [6.2, 689.0], [6.3, 689.0], [6.4, 689.0], [6.5, 689.0], [6.6, 689.0], [6.7, 689.0], [6.8, 689.0], [6.9, 689.0], [7.0, 689.0], [7.1, 689.0], [7.2, 689.0], [7.3, 689.0], [7.4, 689.0], [7.5, 689.0], [7.6, 689.0], [7.7, 689.0], [7.8, 689.0], [7.9, 689.0], [8.0, 689.0], [8.1, 689.0], [8.2, 689.0], [8.3, 689.0], [8.4, 689.0], [8.5, 689.0], [8.6, 689.0], [8.7, 689.0], [8.8, 689.0], [8.9, 689.0], [9.0, 689.0], [9.1, 689.0], [9.2, 689.0], [9.3, 689.0], [9.4, 689.0], [9.5, 689.0], [9.6, 689.0], [9.7, 689.0], [9.8, 689.0], [9.9, 689.0], [10.0, 689.0], [10.1, 689.0], [10.2, 689.0], [10.3, 689.0], [10.4, 689.0], [10.5, 689.0], [10.6, 689.0], [10.7, 689.0], [10.8, 689.0], [10.9, 689.0], [11.0, 689.0], [11.1, 689.0], [11.2, 689.0], [11.3, 689.0], [11.4, 689.0], [11.5, 689.0], [11.6, 689.0], [11.7, 689.0], [11.8, 689.0], [11.9, 689.0], [12.0, 689.0], [12.1, 689.0], [12.2, 689.0], [12.3, 689.0], [12.4, 689.0], [12.5, 689.0], [12.6, 689.0], [12.7, 689.0], [12.8, 689.0], [12.9, 689.0], [13.0, 689.0], [13.1, 689.0], [13.2, 689.0], [13.3, 689.0], [13.4, 689.0], [13.5, 689.0], [13.6, 689.0], [13.7, 689.0], [13.8, 689.0], [13.9, 689.0], [14.0, 689.0], [14.1, 689.0], [14.2, 689.0], [14.3, 689.0], [14.4, 689.0], [14.5, 689.0], [14.6, 689.0], [14.7, 689.0], [14.8, 689.0], [14.9, 689.0], [15.0, 689.0], [15.1, 689.0], [15.2, 689.0], [15.3, 689.0], [15.4, 689.0], [15.5, 689.0], [15.6, 689.0], [15.7, 689.0], [15.8, 689.0], [15.9, 689.0], [16.0, 689.0], [16.1, 689.0], [16.2, 689.0], [16.3, 689.0], [16.4, 689.0], [16.5, 689.0], [16.6, 689.0], [16.7, 689.0], [16.8, 689.0], [16.9, 689.0], [17.0, 689.0], [17.1, 689.0], [17.2, 689.0], [17.3, 689.0], [17.4, 689.0], [17.5, 689.0], [17.6, 689.0], [17.7, 689.0], [17.8, 689.0], [17.9, 689.0], [18.0, 689.0], [18.1, 689.0], [18.2, 689.0], [18.3, 689.0], [18.4, 689.0], [18.5, 689.0], [18.6, 689.0], [18.7, 689.0], [18.8, 689.0], [18.9, 689.0], [19.0, 689.0], [19.1, 689.0], [19.2, 689.0], [19.3, 689.0], [19.4, 689.0], [19.5, 689.0], [19.6, 689.0], [19.7, 689.0], [19.8, 689.0], [19.9, 689.0], [20.0, 689.0], [20.1, 689.0], [20.2, 689.0], [20.3, 689.0], [20.4, 689.0], [20.5, 689.0], [20.6, 689.0], [20.7, 689.0], [20.8, 689.0], [20.9, 689.0], [21.0, 689.0], [21.1, 689.0], [21.2, 689.0], [21.3, 689.0], [21.4, 689.0], [21.5, 689.0], [21.6, 689.0], [21.7, 689.0], [21.8, 689.0], [21.9, 689.0], [22.0, 689.0], [22.1, 689.0], [22.2, 689.0], [22.3, 689.0], [22.4, 689.0], [22.5, 689.0], [22.6, 689.0], [22.7, 689.0], [22.8, 689.0], [22.9, 689.0], [23.0, 689.0], [23.1, 689.0], [23.2, 689.0], [23.3, 689.0], [23.4, 689.0], [23.5, 689.0], [23.6, 689.0], [23.7, 689.0], [23.8, 689.0], [23.9, 689.0], [24.0, 689.0], [24.1, 689.0], [24.2, 689.0], [24.3, 689.0], [24.4, 689.0], [24.5, 689.0], [24.6, 689.0], [24.7, 689.0], [24.8, 689.0], [24.9, 689.0], [25.0, 689.0], [25.1, 689.0], [25.2, 689.0], [25.3, 689.0], [25.4, 689.0], [25.5, 689.0], [25.6, 689.0], [25.7, 689.0], [25.8, 689.0], [25.9, 689.0], [26.0, 689.0], [26.1, 689.0], [26.2, 689.0], [26.3, 689.0], [26.4, 689.0], [26.5, 689.0], [26.6, 689.0], [26.7, 689.0], [26.8, 689.0], [26.9, 689.0], [27.0, 689.0], [27.1, 689.0], [27.2, 689.0], [27.3, 689.0], [27.4, 689.0], [27.5, 689.0], [27.6, 689.0], [27.7, 689.0], [27.8, 689.0], [27.9, 689.0], [28.0, 689.0], [28.1, 689.0], [28.2, 689.0], [28.3, 689.0], [28.4, 689.0], [28.5, 689.0], [28.6, 689.0], [28.7, 689.0], [28.8, 689.0], [28.9, 689.0], [29.0, 689.0], [29.1, 689.0], [29.2, 689.0], [29.3, 689.0], [29.4, 689.0], [29.5, 689.0], [29.6, 689.0], [29.7, 689.0], [29.8, 689.0], [29.9, 689.0], [30.0, 689.0], [30.1, 689.0], [30.2, 689.0], [30.3, 689.0], [30.4, 689.0], [30.5, 689.0], [30.6, 689.0], [30.7, 689.0], [30.8, 689.0], [30.9, 689.0], [31.0, 689.0], [31.1, 689.0], [31.2, 689.0], [31.3, 689.0], [31.4, 689.0], [31.5, 689.0], [31.6, 689.0], [31.7, 689.0], [31.8, 689.0], [31.9, 689.0], [32.0, 689.0], [32.1, 689.0], [32.2, 689.0], [32.3, 689.0], [32.4, 689.0], [32.5, 689.0], [32.6, 689.0], [32.7, 689.0], [32.8, 689.0], [32.9, 689.0], [33.0, 689.0], [33.1, 689.0], [33.2, 689.0], [33.3, 689.0], [33.4, 689.0], [33.5, 689.0], [33.6, 689.0], [33.7, 689.0], [33.8, 689.0], [33.9, 689.0], [34.0, 689.0], [34.1, 689.0], [34.2, 689.0], [34.3, 689.0], [34.4, 689.0], [34.5, 689.0], [34.6, 689.0], [34.7, 689.0], [34.8, 689.0], [34.9, 689.0], [35.0, 689.0], [35.1, 689.0], [35.2, 689.0], [35.3, 689.0], [35.4, 689.0], [35.5, 689.0], [35.6, 689.0], [35.7, 689.0], [35.8, 689.0], [35.9, 689.0], [36.0, 689.0], [36.1, 689.0], [36.2, 689.0], [36.3, 689.0], [36.4, 689.0], [36.5, 689.0], [36.6, 689.0], [36.7, 689.0], [36.8, 689.0], [36.9, 689.0], [37.0, 689.0], [37.1, 689.0], [37.2, 689.0], [37.3, 689.0], [37.4, 689.0], [37.5, 689.0], [37.6, 689.0], [37.7, 689.0], [37.8, 689.0], [37.9, 689.0], [38.0, 689.0], [38.1, 689.0], [38.2, 689.0], [38.3, 689.0], [38.4, 689.0], [38.5, 689.0], [38.6, 689.0], [38.7, 689.0], [38.8, 689.0], [38.9, 689.0], [39.0, 689.0], [39.1, 689.0], [39.2, 689.0], [39.3, 689.0], [39.4, 689.0], [39.5, 689.0], [39.6, 689.0], [39.7, 689.0], [39.8, 689.0], [39.9, 689.0], [40.0, 689.0], [40.1, 689.0], [40.2, 689.0], [40.3, 689.0], [40.4, 689.0], [40.5, 689.0], [40.6, 689.0], [40.7, 689.0], [40.8, 689.0], [40.9, 689.0], [41.0, 689.0], [41.1, 689.0], [41.2, 689.0], [41.3, 689.0], [41.4, 689.0], [41.5, 689.0], [41.6, 689.0], [41.7, 689.0], [41.8, 689.0], [41.9, 689.0], [42.0, 689.0], [42.1, 689.0], [42.2, 689.0], [42.3, 689.0], [42.4, 689.0], [42.5, 689.0], [42.6, 689.0], [42.7, 689.0], [42.8, 689.0], [42.9, 689.0], [43.0, 689.0], [43.1, 689.0], [43.2, 689.0], [43.3, 689.0], [43.4, 689.0], [43.5, 689.0], [43.6, 689.0], [43.7, 689.0], [43.8, 689.0], [43.9, 689.0], [44.0, 689.0], [44.1, 689.0], [44.2, 689.0], [44.3, 689.0], [44.4, 689.0], [44.5, 689.0], [44.6, 689.0], [44.7, 689.0], [44.8, 689.0], [44.9, 689.0], [45.0, 689.0], [45.1, 689.0], [45.2, 689.0], [45.3, 689.0], [45.4, 689.0], [45.5, 689.0], [45.6, 689.0], [45.7, 689.0], [45.8, 689.0], [45.9, 689.0], [46.0, 689.0], [46.1, 689.0], [46.2, 689.0], [46.3, 689.0], [46.4, 689.0], [46.5, 689.0], [46.6, 689.0], [46.7, 689.0], [46.8, 689.0], [46.9, 689.0], [47.0, 689.0], [47.1, 689.0], [47.2, 689.0], [47.3, 689.0], [47.4, 689.0], [47.5, 689.0], [47.6, 689.0], [47.7, 689.0], [47.8, 689.0], [47.9, 689.0], [48.0, 689.0], [48.1, 689.0], [48.2, 689.0], [48.3, 689.0], [48.4, 689.0], [48.5, 689.0], [48.6, 689.0], [48.7, 689.0], [48.8, 689.0], [48.9, 689.0], [49.0, 689.0], [49.1, 689.0], [49.2, 689.0], [49.3, 689.0], [49.4, 689.0], [49.5, 689.0], [49.6, 689.0], [49.7, 689.0], [49.8, 689.0], [49.9, 689.0], [50.0, 689.0], [50.1, 689.0], [50.2, 689.0], [50.3, 689.0], [50.4, 689.0], [50.5, 689.0], [50.6, 689.0], [50.7, 689.0], [50.8, 689.0], [50.9, 689.0], [51.0, 689.0], [51.1, 689.0], [51.2, 689.0], [51.3, 689.0], [51.4, 689.0], [51.5, 689.0], [51.6, 689.0], [51.7, 689.0], [51.8, 689.0], [51.9, 689.0], [52.0, 689.0], [52.1, 689.0], [52.2, 689.0], [52.3, 689.0], [52.4, 689.0], [52.5, 689.0], [52.6, 689.0], [52.7, 689.0], [52.8, 689.0], [52.9, 689.0], [53.0, 689.0], [53.1, 689.0], [53.2, 689.0], [53.3, 689.0], [53.4, 689.0], [53.5, 689.0], [53.6, 689.0], [53.7, 689.0], [53.8, 689.0], [53.9, 689.0], [54.0, 689.0], [54.1, 689.0], [54.2, 689.0], [54.3, 689.0], [54.4, 689.0], [54.5, 689.0], [54.6, 689.0], [54.7, 689.0], [54.8, 689.0], [54.9, 689.0], [55.0, 689.0], [55.1, 689.0], [55.2, 689.0], [55.3, 689.0], [55.4, 689.0], [55.5, 689.0], [55.6, 689.0], [55.7, 689.0], [55.8, 689.0], [55.9, 689.0], [56.0, 689.0], [56.1, 689.0], [56.2, 689.0], [56.3, 689.0], [56.4, 689.0], [56.5, 689.0], [56.6, 689.0], [56.7, 689.0], [56.8, 689.0], [56.9, 689.0], [57.0, 689.0], [57.1, 689.0], [57.2, 689.0], [57.3, 689.0], [57.4, 689.0], [57.5, 689.0], [57.6, 689.0], [57.7, 689.0], [57.8, 689.0], [57.9, 689.0], [58.0, 689.0], [58.1, 689.0], [58.2, 689.0], [58.3, 689.0], [58.4, 689.0], [58.5, 689.0], [58.6, 689.0], [58.7, 689.0], [58.8, 689.0], [58.9, 689.0], [59.0, 689.0], [59.1, 689.0], [59.2, 689.0], [59.3, 689.0], [59.4, 689.0], [59.5, 689.0], [59.6, 689.0], [59.7, 689.0], [59.8, 689.0], [59.9, 689.0], [60.0, 689.0], [60.1, 689.0], [60.2, 689.0], [60.3, 689.0], [60.4, 689.0], [60.5, 689.0], [60.6, 689.0], [60.7, 689.0], [60.8, 689.0], [60.9, 689.0], [61.0, 689.0], [61.1, 689.0], [61.2, 689.0], [61.3, 689.0], [61.4, 689.0], [61.5, 689.0], [61.6, 689.0], [61.7, 689.0], [61.8, 689.0], [61.9, 689.0], [62.0, 689.0], [62.1, 689.0], [62.2, 689.0], [62.3, 689.0], [62.4, 689.0], [62.5, 689.0], [62.6, 689.0], [62.7, 689.0], [62.8, 689.0], [62.9, 689.0], [63.0, 689.0], [63.1, 689.0], [63.2, 689.0], [63.3, 689.0], [63.4, 689.0], [63.5, 689.0], [63.6, 689.0], [63.7, 689.0], [63.8, 689.0], [63.9, 689.0], [64.0, 689.0], [64.1, 689.0], [64.2, 689.0], [64.3, 689.0], [64.4, 689.0], [64.5, 689.0], [64.6, 689.0], [64.7, 689.0], [64.8, 689.0], [64.9, 689.0], [65.0, 689.0], [65.1, 689.0], [65.2, 689.0], [65.3, 689.0], [65.4, 689.0], [65.5, 689.0], [65.6, 689.0], [65.7, 689.0], [65.8, 689.0], [65.9, 689.0], [66.0, 689.0], [66.1, 689.0], [66.2, 689.0], [66.3, 689.0], [66.4, 689.0], [66.5, 689.0], [66.6, 689.0], [66.7, 689.0], [66.8, 689.0], [66.9, 689.0], [67.0, 689.0], [67.1, 689.0], [67.2, 689.0], [67.3, 689.0], [67.4, 689.0], [67.5, 689.0], [67.6, 689.0], [67.7, 689.0], [67.8, 689.0], [67.9, 689.0], [68.0, 689.0], [68.1, 689.0], [68.2, 689.0], [68.3, 689.0], [68.4, 689.0], [68.5, 689.0], [68.6, 689.0], [68.7, 689.0], [68.8, 689.0], [68.9, 689.0], [69.0, 689.0], [69.1, 689.0], [69.2, 689.0], [69.3, 689.0], [69.4, 689.0], [69.5, 689.0], [69.6, 689.0], [69.7, 689.0], [69.8, 689.0], [69.9, 689.0], [70.0, 689.0], [70.1, 689.0], [70.2, 689.0], [70.3, 689.0], [70.4, 689.0], [70.5, 689.0], [70.6, 689.0], [70.7, 689.0], [70.8, 689.0], [70.9, 689.0], [71.0, 689.0], [71.1, 689.0], [71.2, 689.0], [71.3, 689.0], [71.4, 689.0], [71.5, 689.0], [71.6, 689.0], [71.7, 689.0], [71.8, 689.0], [71.9, 689.0], [72.0, 689.0], [72.1, 689.0], [72.2, 689.0], [72.3, 689.0], [72.4, 689.0], [72.5, 689.0], [72.6, 689.0], [72.7, 689.0], [72.8, 689.0], [72.9, 689.0], [73.0, 689.0], [73.1, 689.0], [73.2, 689.0], [73.3, 689.0], [73.4, 689.0], [73.5, 689.0], [73.6, 689.0], [73.7, 689.0], [73.8, 689.0], [73.9, 689.0], [74.0, 689.0], [74.1, 689.0], [74.2, 689.0], [74.3, 689.0], [74.4, 689.0], [74.5, 689.0], [74.6, 689.0], [74.7, 689.0], [74.8, 689.0], [74.9, 689.0], [75.0, 689.0], [75.1, 689.0], [75.2, 689.0], [75.3, 689.0], [75.4, 689.0], [75.5, 689.0], [75.6, 689.0], [75.7, 689.0], [75.8, 689.0], [75.9, 689.0], [76.0, 689.0], [76.1, 689.0], [76.2, 689.0], [76.3, 689.0], [76.4, 689.0], [76.5, 689.0], [76.6, 689.0], [76.7, 689.0], [76.8, 689.0], [76.9, 689.0], [77.0, 689.0], [77.1, 689.0], [77.2, 689.0], [77.3, 689.0], [77.4, 689.0], [77.5, 689.0], [77.6, 689.0], [77.7, 689.0], [77.8, 689.0], [77.9, 689.0], [78.0, 689.0], [78.1, 689.0], [78.2, 689.0], [78.3, 689.0], [78.4, 689.0], [78.5, 689.0], [78.6, 689.0], [78.7, 689.0], [78.8, 689.0], [78.9, 689.0], [79.0, 689.0], [79.1, 689.0], [79.2, 689.0], [79.3, 689.0], [79.4, 689.0], [79.5, 689.0], [79.6, 689.0], [79.7, 689.0], [79.8, 689.0], [79.9, 689.0], [80.0, 689.0], [80.1, 689.0], [80.2, 689.0], [80.3, 689.0], [80.4, 689.0], [80.5, 689.0], [80.6, 689.0], [80.7, 689.0], [80.8, 689.0], [80.9, 689.0], [81.0, 689.0], [81.1, 689.0], [81.2, 689.0], [81.3, 689.0], [81.4, 689.0], [81.5, 689.0], [81.6, 689.0], [81.7, 689.0], [81.8, 689.0], [81.9, 689.0], [82.0, 689.0], [82.1, 689.0], [82.2, 689.0], [82.3, 689.0], [82.4, 689.0], [82.5, 689.0], [82.6, 689.0], [82.7, 689.0], [82.8, 689.0], [82.9, 689.0], [83.0, 689.0], [83.1, 689.0], [83.2, 689.0], [83.3, 689.0], [83.4, 689.0], [83.5, 689.0], [83.6, 689.0], [83.7, 689.0], [83.8, 689.0], [83.9, 689.0], [84.0, 689.0], [84.1, 689.0], [84.2, 689.0], [84.3, 689.0], [84.4, 689.0], [84.5, 689.0], [84.6, 689.0], [84.7, 689.0], [84.8, 689.0], [84.9, 689.0], [85.0, 689.0], [85.1, 689.0], [85.2, 689.0], [85.3, 689.0], [85.4, 689.0], [85.5, 689.0], [85.6, 689.0], [85.7, 689.0], [85.8, 689.0], [85.9, 689.0], [86.0, 689.0], [86.1, 689.0], [86.2, 689.0], [86.3, 689.0], [86.4, 689.0], [86.5, 689.0], [86.6, 689.0], [86.7, 689.0], [86.8, 689.0], [86.9, 689.0], [87.0, 689.0], [87.1, 689.0], [87.2, 689.0], [87.3, 689.0], [87.4, 689.0], [87.5, 689.0], [87.6, 689.0], [87.7, 689.0], [87.8, 689.0], [87.9, 689.0], [88.0, 689.0], [88.1, 689.0], [88.2, 689.0], [88.3, 689.0], [88.4, 689.0], [88.5, 689.0], [88.6, 689.0], [88.7, 689.0], [88.8, 689.0], [88.9, 689.0], [89.0, 689.0], [89.1, 689.0], [89.2, 689.0], [89.3, 689.0], [89.4, 689.0], [89.5, 689.0], [89.6, 689.0], [89.7, 689.0], [89.8, 689.0], [89.9, 689.0], [90.0, 689.0], [90.1, 689.0], [90.2, 689.0], [90.3, 689.0], [90.4, 689.0], [90.5, 689.0], [90.6, 689.0], [90.7, 689.0], [90.8, 689.0], [90.9, 689.0], [91.0, 689.0], [91.1, 689.0], [91.2, 689.0], [91.3, 689.0], [91.4, 689.0], [91.5, 689.0], [91.6, 689.0], [91.7, 689.0], [91.8, 689.0], [91.9, 689.0], [92.0, 689.0], [92.1, 689.0], [92.2, 689.0], [92.3, 689.0], [92.4, 689.0], [92.5, 689.0], [92.6, 689.0], [92.7, 689.0], [92.8, 689.0], [92.9, 689.0], [93.0, 689.0], [93.1, 689.0], [93.2, 689.0], [93.3, 689.0], [93.4, 689.0], [93.5, 689.0], [93.6, 689.0], [93.7, 689.0], [93.8, 689.0], [93.9, 689.0], [94.0, 689.0], [94.1, 689.0], [94.2, 689.0], [94.3, 689.0], [94.4, 689.0], [94.5, 689.0], [94.6, 689.0], [94.7, 689.0], [94.8, 689.0], [94.9, 689.0], [95.0, 689.0], [95.1, 689.0], [95.2, 689.0], [95.3, 689.0], [95.4, 689.0], [95.5, 689.0], [95.6, 689.0], [95.7, 689.0], [95.8, 689.0], [95.9, 689.0], [96.0, 689.0], [96.1, 689.0], [96.2, 689.0], [96.3, 689.0], [96.4, 689.0], [96.5, 689.0], [96.6, 689.0], [96.7, 689.0], [96.8, 689.0], [96.9, 689.0], [97.0, 689.0], [97.1, 689.0], [97.2, 689.0], [97.3, 689.0], [97.4, 689.0], [97.5, 689.0], [97.6, 689.0], [97.7, 689.0], [97.8, 689.0], [97.9, 689.0], [98.0, 689.0], [98.1, 689.0], [98.2, 689.0], [98.3, 689.0], [98.4, 689.0], [98.5, 689.0], [98.6, 689.0], [98.7, 689.0], [98.8, 689.0], [98.9, 689.0], [99.0, 689.0], [99.1, 689.0], [99.2, 689.0], [99.3, 689.0], [99.4, 689.0], [99.5, 689.0], [99.6, 689.0], [99.7, 689.0], [99.8, 689.0], [99.9, 689.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[0.0, 1594.0], [0.1, 3938.0], [0.2, 4500.0], [0.3, 4732.0], [0.4, 5077.0], [0.5, 5405.0], [0.6, 5705.0], [0.7, 5856.0], [0.8, 6090.0], [0.9, 6192.0], [1.0, 6427.0], [1.1, 6511.0], [1.2, 6571.0], [1.3, 6632.0], [1.4, 6656.0], [1.5, 6711.0], [1.6, 6881.0], [1.7, 6915.0], [1.8, 6968.0], [1.9, 7036.0], [2.0, 7119.0], [2.1, 7174.0], [2.2, 7243.0], [2.3, 7296.0], [2.4, 7369.0], [2.5, 7473.0], [2.6, 7514.0], [2.7, 7564.0], [2.8, 7580.0], [2.9, 7621.0], [3.0, 7676.0], [3.1, 7728.0], [3.2, 7798.0], [3.3, 7825.0], [3.4, 7873.0], [3.5, 7944.0], [3.6, 8046.0], [3.7, 8092.0], [3.8, 8127.0], [3.9, 8177.0], [4.0, 8219.0], [4.1, 8249.0], [4.2, 8340.0], [4.3, 8377.0], [4.4, 8413.0], [4.5, 8456.0], [4.6, 8525.0], [4.7, 8560.0], [4.8, 8602.0], [4.9, 8639.0], [5.0, 8685.0], [5.1, 8733.0], [5.2, 8809.0], [5.3, 8867.0], [5.4, 8924.0], [5.5, 8937.0], [5.6, 8967.0], [5.7, 9019.0], [5.8, 9057.0], [5.9, 9090.0], [6.0, 9126.0], [6.1, 9153.0], [6.2, 9206.0], [6.3, 9259.0], [6.4, 9320.0], [6.5, 9372.0], [6.6, 9431.0], [6.7, 9502.0], [6.8, 9574.0], [6.9, 9677.0], [7.0, 9767.0], [7.1, 9795.0], [7.2, 9856.0], [7.3, 9912.0], [7.4, 9949.0], [7.5, 10000.0], [7.6, 10033.0], [7.7, 10115.0], [7.8, 10237.0], [7.9, 10309.0], [8.0, 10401.0], [8.1, 10416.0], [8.2, 10547.0], [8.3, 10603.0], [8.4, 10712.0], [8.5, 10800.0], [8.6, 10900.0], [8.7, 11009.0], [8.8, 11212.0], [8.9, 11283.0], [9.0, 11305.0], [9.1, 11400.0], [9.2, 11475.0], [9.3, 11519.0], [9.4, 11574.0], [9.5, 11633.0], [9.6, 11704.0], [9.7, 11779.0], [9.8, 11797.0], [9.9, 11874.0], [10.0, 11933.0], [10.1, 11989.0], [10.2, 12009.0], [10.3, 12073.0], [10.4, 12107.0], [10.5, 12131.0], [10.6, 12169.0], [10.7, 12188.0], [10.8, 12216.0], [10.9, 12233.0], [11.0, 12241.0], [11.1, 12260.0], [11.2, 12285.0], [11.3, 12290.0], [11.4, 12300.0], [11.5, 12318.0], [11.6, 12337.0], [11.7, 12348.0], [11.8, 12359.0], [11.9, 12372.0], [12.0, 12391.0], [12.1, 12399.0], [12.2, 12407.0], [12.3, 12417.0], [12.4, 12442.0], [12.5, 12444.0], [12.6, 12458.0], [12.7, 12465.0], [12.8, 12470.0], [12.9, 12474.0], [13.0, 12486.0], [13.1, 12493.0], [13.2, 12499.0], [13.3, 12507.0], [13.4, 12513.0], [13.5, 12515.0], [13.6, 12528.0], [13.7, 12539.0], [13.8, 12550.0], [13.9, 12564.0], [14.0, 12578.0], [14.1, 12582.0], [14.2, 12591.0], [14.3, 12596.0], [14.4, 12606.0], [14.5, 12612.0], [14.6, 12616.0], [14.7, 12629.0], [14.8, 12642.0], [14.9, 12649.0], [15.0, 12662.0], [15.1, 12665.0], [15.2, 12670.0], [15.3, 12679.0], [15.4, 12684.0], [15.5, 12691.0], [15.6, 12699.0], [15.7, 12700.0], [15.8, 12702.0], [15.9, 12706.0], [16.0, 12716.0], [16.1, 12722.0], [16.2, 12733.0], [16.3, 12746.0], [16.4, 12751.0], [16.5, 12754.0], [16.6, 12757.0], [16.7, 12761.0], [16.8, 12769.0], [16.9, 12777.0], [17.0, 12784.0], [17.1, 12793.0], [17.2, 12796.0], [17.3, 12800.0], [17.4, 12802.0], [17.5, 12804.0], [17.6, 12809.0], [17.7, 12822.0], [17.8, 12832.0], [17.9, 12840.0], [18.0, 12851.0], [18.1, 12857.0], [18.2, 12864.0], [18.3, 12868.0], [18.4, 12871.0], [18.5, 12874.0], [18.6, 12878.0], [18.7, 12882.0], [18.8, 12888.0], [18.9, 12891.0], [19.0, 12895.0], [19.1, 12897.0], [19.2, 12901.0], [19.3, 12905.0], [19.4, 12911.0], [19.5, 12917.0], [19.6, 12922.0], [19.7, 12929.0], [19.8, 12931.0], [19.9, 12937.0], [20.0, 12944.0], [20.1, 12951.0], [20.2, 12957.0], [20.3, 12964.0], [20.4, 12972.0], [20.5, 12974.0], [20.6, 12977.0], [20.7, 12981.0], [20.8, 12985.0], [20.9, 12986.0], [21.0, 12992.0], [21.1, 12995.0], [21.2, 12996.0], [21.3, 12998.0], [21.4, 12999.0], [21.5, 13001.0], [21.6, 13004.0], [21.7, 13007.0], [21.8, 13010.0], [21.9, 13012.0], [22.0, 13015.0], [22.1, 13018.0], [22.2, 13025.0], [22.3, 13027.0], [22.4, 13032.0], [22.5, 13043.0], [22.6, 13045.0], [22.7, 13048.0], [22.8, 13052.0], [22.9, 13063.0], [23.0, 13073.0], [23.1, 13079.0], [23.2, 13080.0], [23.3, 13084.0], [23.4, 13091.0], [23.5, 13094.0], [23.6, 13096.0], [23.7, 13100.0], [23.8, 13101.0], [23.9, 13102.0], [24.0, 13105.0], [24.1, 13108.0], [24.2, 13110.0], [24.3, 13112.0], [24.4, 13115.0], [24.5, 13116.0], [24.6, 13121.0], [24.7, 13125.0], [24.8, 13134.0], [24.9, 13138.0], [25.0, 13146.0], [25.1, 13150.0], [25.2, 13154.0], [25.3, 13157.0], [25.4, 13159.0], [25.5, 13161.0], [25.6, 13165.0], [25.7, 13167.0], [25.8, 13171.0], [25.9, 13177.0], [26.0, 13185.0], [26.1, 13188.0], [26.2, 13191.0], [26.3, 13192.0], [26.4, 13194.0], [26.5, 13196.0], [26.6, 13199.0], [26.7, 13201.0], [26.8, 13202.0], [26.9, 13204.0], [27.0, 13207.0], [27.1, 13208.0], [27.2, 13209.0], [27.3, 13211.0], [27.4, 13213.0], [27.5, 13220.0], [27.6, 13223.0], [27.7, 13227.0], [27.8, 13232.0], [27.9, 13235.0], [28.0, 13238.0], [28.1, 13240.0], [28.2, 13241.0], [28.3, 13242.0], [28.4, 13244.0], [28.5, 13245.0], [28.6, 13249.0], [28.7, 13250.0], [28.8, 13251.0], [28.9, 13256.0], [29.0, 13258.0], [29.1, 13262.0], [29.2, 13266.0], [29.3, 13268.0], [29.4, 13270.0], [29.5, 13273.0], [29.6, 13275.0], [29.7, 13276.0], [29.8, 13279.0], [29.9, 13280.0], [30.0, 13280.0], [30.1, 13282.0], [30.2, 13283.0], [30.3, 13285.0], [30.4, 13287.0], [30.5, 13289.0], [30.6, 13291.0], [30.7, 13293.0], [30.8, 13294.0], [30.9, 13296.0], [31.0, 13297.0], [31.1, 13300.0], [31.2, 13301.0], [31.3, 13301.0], [31.4, 13302.0], [31.5, 13304.0], [31.6, 13305.0], [31.7, 13308.0], [31.8, 13310.0], [31.9, 13314.0], [32.0, 13317.0], [32.1, 13319.0], [32.2, 13319.0], [32.3, 13322.0], [32.4, 13329.0], [32.5, 13333.0], [32.6, 13340.0], [32.7, 13344.0], [32.8, 13349.0], [32.9, 13356.0], [33.0, 13359.0], [33.1, 13362.0], [33.2, 13364.0], [33.3, 13368.0], [33.4, 13371.0], [33.5, 13373.0], [33.6, 13374.0], [33.7, 13376.0], [33.8, 13377.0], [33.9, 13378.0], [34.0, 13378.0], [34.1, 13380.0], [34.2, 13384.0], [34.3, 13384.0], [34.4, 13386.0], [34.5, 13389.0], [34.6, 13393.0], [34.7, 13396.0], [34.8, 13398.0], [34.9, 13400.0], [35.0, 13403.0], [35.1, 13405.0], [35.2, 13409.0], [35.3, 13410.0], [35.4, 13414.0], [35.5, 13416.0], [35.6, 13419.0], [35.7, 13423.0], [35.8, 13427.0], [35.9, 13430.0], [36.0, 13435.0], [36.1, 13445.0], [36.2, 13450.0], [36.3, 13452.0], [36.4, 13455.0], [36.5, 13458.0], [36.6, 13462.0], [36.7, 13464.0], [36.8, 13469.0], [36.9, 13474.0], [37.0, 13475.0], [37.1, 13478.0], [37.2, 13481.0], [37.3, 13488.0], [37.4, 13491.0], [37.5, 13492.0], [37.6, 13497.0], [37.7, 13498.0], [37.8, 13501.0], [37.9, 13503.0], [38.0, 13504.0], [38.1, 13505.0], [38.2, 13506.0], [38.3, 13508.0], [38.4, 13510.0], [38.5, 13511.0], [38.6, 13513.0], [38.7, 13514.0], [38.8, 13514.0], [38.9, 13516.0], [39.0, 13517.0], [39.1, 13521.0], [39.2, 13523.0], [39.3, 13525.0], [39.4, 13527.0], [39.5, 13529.0], [39.6, 13533.0], [39.7, 13539.0], [39.8, 13542.0], [39.9, 13544.0], [40.0, 13546.0], [40.1, 13549.0], [40.2, 13551.0], [40.3, 13553.0], [40.4, 13555.0], [40.5, 13558.0], [40.6, 13560.0], [40.7, 13561.0], [40.8, 13565.0], [40.9, 13567.0], [41.0, 13571.0], [41.1, 13572.0], [41.2, 13573.0], [41.3, 13576.0], [41.4, 13577.0], [41.5, 13579.0], [41.6, 13581.0], [41.7, 13584.0], [41.8, 13585.0], [41.9, 13586.0], [42.0, 13588.0], [42.1, 13589.0], [42.2, 13590.0], [42.3, 13591.0], [42.4, 13595.0], [42.5, 13597.0], [42.6, 13599.0], [42.7, 13601.0], [42.8, 13602.0], [42.9, 13603.0], [43.0, 13604.0], [43.1, 13606.0], [43.2, 13608.0], [43.3, 13609.0], [43.4, 13611.0], [43.5, 13612.0], [43.6, 13614.0], [43.7, 13618.0], [43.8, 13619.0], [43.9, 13621.0], [44.0, 13624.0], [44.1, 13625.0], [44.2, 13626.0], [44.3, 13629.0], [44.4, 13632.0], [44.5, 13635.0], [44.6, 13639.0], [44.7, 13641.0], [44.8, 13643.0], [44.9, 13647.0], [45.0, 13649.0], [45.1, 13651.0], [45.2, 13656.0], [45.3, 13660.0], [45.4, 13663.0], [45.5, 13665.0], [45.6, 13674.0], [45.7, 13677.0], [45.8, 13680.0], [45.9, 13681.0], [46.0, 13685.0], [46.1, 13687.0], [46.2, 13689.0], [46.3, 13691.0], [46.4, 13695.0], [46.5, 13698.0], [46.6, 13701.0], [46.7, 13703.0], [46.8, 13704.0], [46.9, 13706.0], [47.0, 13708.0], [47.1, 13711.0], [47.2, 13715.0], [47.3, 13718.0], [47.4, 13720.0], [47.5, 13723.0], [47.6, 13725.0], [47.7, 13730.0], [47.8, 13733.0], [47.9, 13736.0], [48.0, 13742.0], [48.1, 13744.0], [48.2, 13747.0], [48.3, 13749.0], [48.4, 13752.0], [48.5, 13755.0], [48.6, 13758.0], [48.7, 13761.0], [48.8, 13764.0], [48.9, 13771.0], [49.0, 13774.0], [49.1, 13777.0], [49.2, 13779.0], [49.3, 13783.0], [49.4, 13784.0], [49.5, 13787.0], [49.6, 13788.0], [49.7, 13789.0], [49.8, 13791.0], [49.9, 13793.0], [50.0, 13795.0], [50.1, 13797.0], [50.2, 13798.0], [50.3, 13800.0], [50.4, 13802.0], [50.5, 13804.0], [50.6, 13806.0], [50.7, 13808.0], [50.8, 13811.0], [50.9, 13814.0], [51.0, 13818.0], [51.1, 13823.0], [51.2, 13827.0], [51.3, 13830.0], [51.4, 13833.0], [51.5, 13834.0], [51.6, 13838.0], [51.7, 13844.0], [51.8, 13845.0], [51.9, 13853.0], [52.0, 13856.0], [52.1, 13860.0], [52.2, 13863.0], [52.3, 13866.0], [52.4, 13869.0], [52.5, 13872.0], [52.6, 13875.0], [52.7, 13878.0], [52.8, 13883.0], [52.9, 13884.0], [53.0, 13886.0], [53.1, 13888.0], [53.2, 13890.0], [53.3, 13892.0], [53.4, 13895.0], [53.5, 13898.0], [53.6, 13901.0], [53.7, 13902.0], [53.8, 13903.0], [53.9, 13906.0], [54.0, 13908.0], [54.1, 13911.0], [54.2, 13914.0], [54.3, 13915.0], [54.4, 13917.0], [54.5, 13918.0], [54.6, 13921.0], [54.7, 13924.0], [54.8, 13926.0], [54.9, 13930.0], [55.0, 13934.0], [55.1, 13938.0], [55.2, 13940.0], [55.3, 13943.0], [55.4, 13947.0], [55.5, 13951.0], [55.6, 13955.0], [55.7, 13958.0], [55.8, 13960.0], [55.9, 13964.0], [56.0, 13969.0], [56.1, 13972.0], [56.2, 13974.0], [56.3, 13978.0], [56.4, 13979.0], [56.5, 13982.0], [56.6, 13983.0], [56.7, 13984.0], [56.8, 13986.0], [56.9, 13989.0], [57.0, 13991.0], [57.1, 13993.0], [57.2, 13997.0], [57.3, 13998.0], [57.4, 14005.0], [57.5, 14005.0], [57.6, 14007.0], [57.7, 14010.0], [57.8, 14015.0], [57.9, 14018.0], [58.0, 14021.0], [58.1, 14024.0], [58.2, 14026.0], [58.3, 14028.0], [58.4, 14032.0], [58.5, 14037.0], [58.6, 14038.0], [58.7, 14040.0], [58.8, 14041.0], [58.9, 14044.0], [59.0, 14046.0], [59.1, 14051.0], [59.2, 14055.0], [59.3, 14060.0], [59.4, 14066.0], [59.5, 14070.0], [59.6, 14072.0], [59.7, 14075.0], [59.8, 14080.0], [59.9, 14081.0], [60.0, 14082.0], [60.1, 14085.0], [60.2, 14087.0], [60.3, 14089.0], [60.4, 14094.0], [60.5, 14095.0], [60.6, 14100.0], [60.7, 14103.0], [60.8, 14105.0], [60.9, 14109.0], [61.0, 14114.0], [61.1, 14118.0], [61.2, 14120.0], [61.3, 14122.0], [61.4, 14126.0], [61.5, 14131.0], [61.6, 14132.0], [61.7, 14139.0], [61.8, 14148.0], [61.9, 14155.0], [62.0, 14167.0], [62.1, 14174.0], [62.2, 14177.0], [62.3, 14183.0], [62.4, 14186.0], [62.5, 14187.0], [62.6, 14190.0], [62.7, 14192.0], [62.8, 14194.0], [62.9, 14197.0], [63.0, 14200.0], [63.1, 14203.0], [63.2, 14206.0], [63.3, 14210.0], [63.4, 14216.0], [63.5, 14219.0], [63.6, 14223.0], [63.7, 14226.0], [63.8, 14228.0], [63.9, 14237.0], [64.0, 14248.0], [64.1, 14255.0], [64.2, 14262.0], [64.3, 14267.0], [64.4, 14273.0], [64.5, 14278.0], [64.6, 14282.0], [64.7, 14288.0], [64.8, 14290.0], [64.9, 14293.0], [65.0, 14297.0], [65.1, 14300.0], [65.2, 14304.0], [65.3, 14305.0], [65.4, 14309.0], [65.5, 14314.0], [65.6, 14319.0], [65.7, 14323.0], [65.8, 14325.0], [65.9, 14329.0], [66.0, 14331.0], [66.1, 14336.0], [66.2, 14341.0], [66.3, 14347.0], [66.4, 14353.0], [66.5, 14355.0], [66.6, 14362.0], [66.7, 14368.0], [66.8, 14371.0], [66.9, 14374.0], [67.0, 14374.0], [67.1, 14376.0], [67.2, 14381.0], [67.3, 14388.0], [67.4, 14389.0], [67.5, 14394.0], [67.6, 14397.0], [67.7, 14398.0], [67.8, 14400.0], [67.9, 14402.0], [68.0, 14407.0], [68.1, 14408.0], [68.2, 14413.0], [68.3, 14418.0], [68.4, 14425.0], [68.5, 14428.0], [68.6, 14432.0], [68.7, 14440.0], [68.8, 14443.0], [68.9, 14449.0], [69.0, 14452.0], [69.1, 14456.0], [69.2, 14460.0], [69.3, 14465.0], [69.4, 14472.0], [69.5, 14475.0], [69.6, 14479.0], [69.7, 14486.0], [69.8, 14489.0], [69.9, 14490.0], [70.0, 14493.0], [70.1, 14497.0], [70.2, 14501.0], [70.3, 14506.0], [70.4, 14511.0], [70.5, 14512.0], [70.6, 14518.0], [70.7, 14522.0], [70.8, 14535.0], [70.9, 14541.0], [71.0, 14545.0], [71.1, 14550.0], [71.2, 14553.0], [71.3, 14558.0], [71.4, 14561.0], [71.5, 14565.0], [71.6, 14569.0], [71.7, 14572.0], [71.8, 14575.0], [71.9, 14579.0], [72.0, 14583.0], [72.1, 14586.0], [72.2, 14588.0], [72.3, 14591.0], [72.4, 14594.0], [72.5, 14595.0], [72.6, 14598.0], [72.7, 14601.0], [72.8, 14605.0], [72.9, 14607.0], [73.0, 14607.0], [73.1, 14609.0], [73.2, 14614.0], [73.3, 14616.0], [73.4, 14624.0], [73.5, 14627.0], [73.6, 14630.0], [73.7, 14635.0], [73.8, 14645.0], [73.9, 14653.0], [74.0, 14657.0], [74.1, 14665.0], [74.2, 14674.0], [74.3, 14681.0], [74.4, 14683.0], [74.5, 14685.0], [74.6, 14691.0], [74.7, 14694.0], [74.8, 14697.0], [74.9, 14699.0], [75.0, 14701.0], [75.1, 14707.0], [75.2, 14709.0], [75.3, 14718.0], [75.4, 14723.0], [75.5, 14725.0], [75.6, 14727.0], [75.7, 14731.0], [75.8, 14736.0], [75.9, 14743.0], [76.0, 14746.0], [76.1, 14751.0], [76.2, 14756.0], [76.3, 14762.0], [76.4, 14765.0], [76.5, 14767.0], [76.6, 14768.0], [76.7, 14775.0], [76.8, 14779.0], [76.9, 14783.0], [77.0, 14785.0], [77.1, 14790.0], [77.2, 14791.0], [77.3, 14794.0], [77.4, 14795.0], [77.5, 14796.0], [77.6, 14799.0], [77.7, 14804.0], [77.8, 14807.0], [77.9, 14811.0], [78.0, 14813.0], [78.1, 14820.0], [78.2, 14821.0], [78.3, 14830.0], [78.4, 14834.0], [78.5, 14843.0], [78.6, 14849.0], [78.7, 14853.0], [78.8, 14859.0], [78.9, 14864.0], [79.0, 14866.0], [79.1, 14879.0], [79.2, 14881.0], [79.3, 14883.0], [79.4, 14888.0], [79.5, 14894.0], [79.6, 14895.0], [79.7, 14897.0], [79.8, 14899.0], [79.9, 14903.0], [80.0, 14907.0], [80.1, 14910.0], [80.2, 14914.0], [80.3, 14919.0], [80.4, 14922.0], [80.5, 14929.0], [80.6, 14934.0], [80.7, 14945.0], [80.8, 14953.0], [80.9, 14958.0], [81.0, 14965.0], [81.1, 14973.0], [81.2, 14981.0], [81.3, 14987.0], [81.4, 14990.0], [81.5, 14995.0], [81.6, 14999.0], [81.7, 15005.0], [81.8, 15009.0], [81.9, 15014.0], [82.0, 15018.0], [82.1, 15022.0], [82.2, 15027.0], [82.3, 15033.0], [82.4, 15043.0], [82.5, 15047.0], [82.6, 15054.0], [82.7, 15059.0], [82.8, 15065.0], [82.9, 15070.0], [83.0, 15079.0], [83.1, 15084.0], [83.2, 15086.0], [83.3, 15089.0], [83.4, 15091.0], [83.5, 15093.0], [83.6, 15097.0], [83.7, 15103.0], [83.8, 15108.0], [83.9, 15115.0], [84.0, 15118.0], [84.1, 15129.0], [84.2, 15131.0], [84.3, 15138.0], [84.4, 15144.0], [84.5, 15151.0], [84.6, 15156.0], [84.7, 15169.0], [84.8, 15173.0], [84.9, 15177.0], [85.0, 15181.0], [85.1, 15185.0], [85.2, 15188.0], [85.3, 15192.0], [85.4, 15195.0], [85.5, 15198.0], [85.6, 15201.0], [85.7, 15214.0], [85.8, 15220.0], [85.9, 15231.0], [86.0, 15245.0], [86.1, 15253.0], [86.2, 15257.0], [86.3, 15270.0], [86.4, 15279.0], [86.5, 15287.0], [86.6, 15295.0], [86.7, 15298.0], [86.8, 15302.0], [86.9, 15308.0], [87.0, 15320.0], [87.1, 15333.0], [87.2, 15337.0], [87.3, 15349.0], [87.4, 15381.0], [87.5, 15387.0], [87.6, 15391.0], [87.7, 15403.0], [87.8, 15419.0], [87.9, 15431.0], [88.0, 15467.0], [88.1, 15486.0], [88.2, 15500.0], [88.3, 15506.0], [88.4, 15542.0], [88.5, 15555.0], [88.6, 15592.0], [88.7, 15669.0], [88.8, 15709.0], [88.9, 15790.0], [89.0, 15868.0], [89.1, 15939.0], [89.2, 16018.0], [89.3, 16508.0], [89.4, 16649.0], [89.5, 16828.0], [89.6, 17241.0], [89.7, 17473.0], [89.8, 17736.0], [89.9, 18468.0], [90.0, 24725.0], [90.1, 25516.0], [90.2, 25794.0], [90.3, 26002.0], [90.4, 26255.0], [90.5, 26426.0], [90.6, 26532.0], [90.7, 26668.0], [90.8, 26773.0], [90.9, 26952.0], [91.0, 27066.0], [91.1, 27278.0], [91.2, 27511.0], [91.3, 27709.0], [91.4, 27779.0], [91.5, 27982.0], [91.6, 28052.0], [91.7, 28160.0], [91.8, 28202.0], [91.9, 28237.0], [92.0, 28318.0], [92.1, 28377.0], [92.2, 28400.0], [92.3, 28436.0], [92.4, 28490.0], [92.5, 28524.0], [92.6, 28589.0], [92.7, 28605.0], [92.8, 28746.0], [92.9, 28777.0], [93.0, 28807.0], [93.1, 28891.0], [93.2, 28946.0], [93.3, 29036.0], [93.4, 29068.0], [93.5, 29128.0], [93.6, 29179.0], [93.7, 29210.0], [93.8, 29216.0], [93.9, 29252.0], [94.0, 29305.0], [94.1, 29325.0], [94.2, 29389.0], [94.3, 29504.0], [94.4, 29530.0], [94.5, 29545.0], [94.6, 29619.0], [94.7, 29629.0], [94.8, 29708.0], [94.9, 29742.0], [95.0, 29790.0], [95.1, 29846.0], [95.2, 29920.0], [95.3, 29936.0], [95.4, 29951.0], [95.5, 29991.0], [95.6, 30090.0], [95.7, 30134.0], [95.8, 30184.0], [95.9, 30212.0], [96.0, 30258.0], [96.1, 30330.0], [96.2, 30375.0], [96.3, 30427.0], [96.4, 30474.0], [96.5, 30529.0], [96.6, 30541.0], [96.7, 30623.0], [96.8, 30747.0], [96.9, 30858.0], [97.0, 30932.0], [97.1, 30959.0], [97.2, 31034.0], [97.3, 31101.0], [97.4, 31149.0], [97.5, 31228.0], [97.6, 31280.0], [97.7, 31351.0], [97.8, 31443.0], [97.9, 31693.0], [98.0, 31905.0], [98.1, 31986.0], [98.2, 32068.0], [98.3, 32241.0], [98.4, 32348.0], [98.5, 32420.0], [98.6, 32498.0], [98.7, 32647.0], [98.8, 32716.0], [98.9, 32840.0], [99.0, 32902.0], [99.1, 32999.0], [99.2, 33030.0], [99.3, 33149.0], [99.4, 33219.0], [99.5, 33328.0], [99.6, 33360.0], [99.7, 33466.0], [99.8, 33680.0], [99.9, 33806.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[0.0, 58889.0], [0.1, 58889.0], [0.2, 58889.0], [0.3, 58889.0], [0.4, 58889.0], [0.5, 58889.0], [0.6, 58889.0], [0.7, 58889.0], [0.8, 58889.0], [0.9, 58889.0], [1.0, 58889.0], [1.1, 58889.0], [1.2, 58889.0], [1.3, 58889.0], [1.4, 58889.0], [1.5, 58889.0], [1.6, 58889.0], [1.7, 58889.0], [1.8, 58889.0], [1.9, 58889.0], [2.0, 58889.0], [2.1, 58889.0], [2.2, 58889.0], [2.3, 58889.0], [2.4, 58889.0], [2.5, 58889.0], [2.6, 58889.0], [2.7, 58889.0], [2.8, 58889.0], [2.9, 58889.0], [3.0, 58889.0], [3.1, 58889.0], [3.2, 58889.0], [3.3, 58889.0], [3.4, 58889.0], [3.5, 58889.0], [3.6, 58889.0], [3.7, 58889.0], [3.8, 58889.0], [3.9, 58889.0], [4.0, 58889.0], [4.1, 58889.0], [4.2, 58889.0], [4.3, 58889.0], [4.4, 58889.0], [4.5, 58889.0], [4.6, 58889.0], [4.7, 58889.0], [4.8, 58889.0], [4.9, 58889.0], [5.0, 58889.0], [5.1, 58889.0], [5.2, 58889.0], [5.3, 58889.0], [5.4, 58889.0], [5.5, 58889.0], [5.6, 58889.0], [5.7, 58889.0], [5.8, 58889.0], [5.9, 58889.0], [6.0, 58889.0], [6.1, 58889.0], [6.2, 58889.0], [6.3, 58889.0], [6.4, 58889.0], [6.5, 58889.0], [6.6, 58889.0], [6.7, 58889.0], [6.8, 58889.0], [6.9, 58889.0], [7.0, 58889.0], [7.1, 58889.0], [7.2, 58889.0], [7.3, 58889.0], [7.4, 58889.0], [7.5, 58889.0], [7.6, 58889.0], [7.7, 58889.0], [7.8, 58889.0], [7.9, 58889.0], [8.0, 58889.0], [8.1, 58889.0], [8.2, 58889.0], [8.3, 58889.0], [8.4, 58889.0], [8.5, 58889.0], [8.6, 58889.0], [8.7, 58889.0], [8.8, 58889.0], [8.9, 58889.0], [9.0, 58889.0], [9.1, 58889.0], [9.2, 58889.0], [9.3, 58889.0], [9.4, 58889.0], [9.5, 58889.0], [9.6, 58889.0], [9.7, 58889.0], [9.8, 58889.0], [9.9, 58889.0], [10.0, 58889.0], [10.1, 58889.0], [10.2, 58889.0], [10.3, 58889.0], [10.4, 58889.0], [10.5, 58889.0], [10.6, 58889.0], [10.7, 58889.0], [10.8, 58889.0], [10.9, 58889.0], [11.0, 58889.0], [11.1, 58889.0], [11.2, 58889.0], [11.3, 58889.0], [11.4, 58889.0], [11.5, 58889.0], [11.6, 58889.0], [11.7, 58889.0], [11.8, 58889.0], [11.9, 58889.0], [12.0, 58889.0], [12.1, 58889.0], [12.2, 58889.0], [12.3, 58889.0], [12.4, 58889.0], [12.5, 58889.0], [12.6, 58889.0], [12.7, 58889.0], [12.8, 58889.0], [12.9, 58889.0], [13.0, 58889.0], [13.1, 58889.0], [13.2, 58889.0], [13.3, 58889.0], [13.4, 58889.0], [13.5, 58889.0], [13.6, 58889.0], [13.7, 58889.0], [13.8, 58889.0], [13.9, 58889.0], [14.0, 58889.0], [14.1, 58889.0], [14.2, 58889.0], [14.3, 58889.0], [14.4, 58889.0], [14.5, 58889.0], [14.6, 58889.0], [14.7, 58889.0], [14.8, 58889.0], [14.9, 58889.0], [15.0, 58889.0], [15.1, 58889.0], [15.2, 58889.0], [15.3, 58889.0], [15.4, 58889.0], [15.5, 58889.0], [15.6, 58889.0], [15.7, 58889.0], [15.8, 58889.0], [15.9, 58889.0], [16.0, 58889.0], [16.1, 58889.0], [16.2, 58889.0], [16.3, 58889.0], [16.4, 58889.0], [16.5, 58889.0], [16.6, 58889.0], [16.7, 58889.0], [16.8, 58889.0], [16.9, 58889.0], [17.0, 58889.0], [17.1, 58889.0], [17.2, 58889.0], [17.3, 58889.0], [17.4, 58889.0], [17.5, 58889.0], [17.6, 58889.0], [17.7, 58889.0], [17.8, 58889.0], [17.9, 58889.0], [18.0, 58889.0], [18.1, 58889.0], [18.2, 58889.0], [18.3, 58889.0], [18.4, 58889.0], [18.5, 58889.0], [18.6, 58889.0], [18.7, 58889.0], [18.8, 58889.0], [18.9, 58889.0], [19.0, 58889.0], [19.1, 58889.0], [19.2, 58889.0], [19.3, 58889.0], [19.4, 58889.0], [19.5, 58889.0], [19.6, 58889.0], [19.7, 58889.0], [19.8, 58889.0], [19.9, 58889.0], [20.0, 58889.0], [20.1, 58889.0], [20.2, 58889.0], [20.3, 58889.0], [20.4, 58889.0], [20.5, 58889.0], [20.6, 58889.0], [20.7, 58889.0], [20.8, 58889.0], [20.9, 58889.0], [21.0, 58889.0], [21.1, 58889.0], [21.2, 58889.0], [21.3, 58889.0], [21.4, 58889.0], [21.5, 58889.0], [21.6, 58889.0], [21.7, 58889.0], [21.8, 58889.0], [21.9, 58889.0], [22.0, 58889.0], [22.1, 58889.0], [22.2, 58889.0], [22.3, 58889.0], [22.4, 58889.0], [22.5, 58889.0], [22.6, 58889.0], [22.7, 58889.0], [22.8, 58889.0], [22.9, 58889.0], [23.0, 58889.0], [23.1, 58889.0], [23.2, 58889.0], [23.3, 58889.0], [23.4, 58889.0], [23.5, 58889.0], [23.6, 58889.0], [23.7, 58889.0], [23.8, 58889.0], [23.9, 58889.0], [24.0, 58889.0], [24.1, 58889.0], [24.2, 58889.0], [24.3, 58889.0], [24.4, 58889.0], [24.5, 58889.0], [24.6, 58889.0], [24.7, 58889.0], [24.8, 58889.0], [24.9, 58889.0], [25.0, 58889.0], [25.1, 58889.0], [25.2, 58889.0], [25.3, 58889.0], [25.4, 58889.0], [25.5, 58889.0], [25.6, 58889.0], [25.7, 58889.0], [25.8, 58889.0], [25.9, 58889.0], [26.0, 58889.0], [26.1, 58889.0], [26.2, 58889.0], [26.3, 58889.0], [26.4, 58889.0], [26.5, 58889.0], [26.6, 58889.0], [26.7, 58889.0], [26.8, 58889.0], [26.9, 58889.0], [27.0, 58889.0], [27.1, 58889.0], [27.2, 58889.0], [27.3, 58889.0], [27.4, 58889.0], [27.5, 58889.0], [27.6, 58889.0], [27.7, 58889.0], [27.8, 58889.0], [27.9, 58889.0], [28.0, 58889.0], [28.1, 58889.0], [28.2, 58889.0], [28.3, 58889.0], [28.4, 58889.0], [28.5, 58889.0], [28.6, 58889.0], [28.7, 58889.0], [28.8, 58889.0], [28.9, 58889.0], [29.0, 58889.0], [29.1, 58889.0], [29.2, 58889.0], [29.3, 58889.0], [29.4, 58889.0], [29.5, 58889.0], [29.6, 58889.0], [29.7, 58889.0], [29.8, 58889.0], [29.9, 58889.0], [30.0, 58889.0], [30.1, 58889.0], [30.2, 58889.0], [30.3, 58889.0], [30.4, 58889.0], [30.5, 58889.0], [30.6, 58889.0], [30.7, 58889.0], [30.8, 58889.0], [30.9, 58889.0], [31.0, 58889.0], [31.1, 58889.0], [31.2, 58889.0], [31.3, 58889.0], [31.4, 58889.0], [31.5, 58889.0], [31.6, 58889.0], [31.7, 58889.0], [31.8, 58889.0], [31.9, 58889.0], [32.0, 58889.0], [32.1, 58889.0], [32.2, 58889.0], [32.3, 58889.0], [32.4, 58889.0], [32.5, 58889.0], [32.6, 58889.0], [32.7, 58889.0], [32.8, 58889.0], [32.9, 58889.0], [33.0, 58889.0], [33.1, 58889.0], [33.2, 58889.0], [33.3, 58889.0], [33.4, 58889.0], [33.5, 58889.0], [33.6, 58889.0], [33.7, 58889.0], [33.8, 58889.0], [33.9, 58889.0], [34.0, 58889.0], [34.1, 58889.0], [34.2, 58889.0], [34.3, 58889.0], [34.4, 58889.0], [34.5, 58889.0], [34.6, 58889.0], [34.7, 58889.0], [34.8, 58889.0], [34.9, 58889.0], [35.0, 58889.0], [35.1, 58889.0], [35.2, 58889.0], [35.3, 58889.0], [35.4, 58889.0], [35.5, 58889.0], [35.6, 58889.0], [35.7, 58889.0], [35.8, 58889.0], [35.9, 58889.0], [36.0, 58889.0], [36.1, 58889.0], [36.2, 58889.0], [36.3, 58889.0], [36.4, 58889.0], [36.5, 58889.0], [36.6, 58889.0], [36.7, 58889.0], [36.8, 58889.0], [36.9, 58889.0], [37.0, 58889.0], [37.1, 58889.0], [37.2, 58889.0], [37.3, 58889.0], [37.4, 58889.0], [37.5, 58889.0], [37.6, 58889.0], [37.7, 58889.0], [37.8, 58889.0], [37.9, 58889.0], [38.0, 58889.0], [38.1, 58889.0], [38.2, 58889.0], [38.3, 58889.0], [38.4, 58889.0], [38.5, 58889.0], [38.6, 58889.0], [38.7, 58889.0], [38.8, 58889.0], [38.9, 58889.0], [39.0, 58889.0], [39.1, 58889.0], [39.2, 58889.0], [39.3, 58889.0], [39.4, 58889.0], [39.5, 58889.0], [39.6, 58889.0], [39.7, 58889.0], [39.8, 58889.0], [39.9, 58889.0], [40.0, 58889.0], [40.1, 58889.0], [40.2, 58889.0], [40.3, 58889.0], [40.4, 58889.0], [40.5, 58889.0], [40.6, 58889.0], [40.7, 58889.0], [40.8, 58889.0], [40.9, 58889.0], [41.0, 58889.0], [41.1, 58889.0], [41.2, 58889.0], [41.3, 58889.0], [41.4, 58889.0], [41.5, 58889.0], [41.6, 58889.0], [41.7, 58889.0], [41.8, 58889.0], [41.9, 58889.0], [42.0, 58889.0], [42.1, 58889.0], [42.2, 58889.0], [42.3, 58889.0], [42.4, 58889.0], [42.5, 58889.0], [42.6, 58889.0], [42.7, 58889.0], [42.8, 58889.0], [42.9, 58889.0], [43.0, 58889.0], [43.1, 58889.0], [43.2, 58889.0], [43.3, 58889.0], [43.4, 58889.0], [43.5, 58889.0], [43.6, 58889.0], [43.7, 58889.0], [43.8, 58889.0], [43.9, 58889.0], [44.0, 58889.0], [44.1, 58889.0], [44.2, 58889.0], [44.3, 58889.0], [44.4, 58889.0], [44.5, 58889.0], [44.6, 58889.0], [44.7, 58889.0], [44.8, 58889.0], [44.9, 58889.0], [45.0, 58889.0], [45.1, 58889.0], [45.2, 58889.0], [45.3, 58889.0], [45.4, 58889.0], [45.5, 58889.0], [45.6, 58889.0], [45.7, 58889.0], [45.8, 58889.0], [45.9, 58889.0], [46.0, 58889.0], [46.1, 58889.0], [46.2, 58889.0], [46.3, 58889.0], [46.4, 58889.0], [46.5, 58889.0], [46.6, 58889.0], [46.7, 58889.0], [46.8, 58889.0], [46.9, 58889.0], [47.0, 58889.0], [47.1, 58889.0], [47.2, 58889.0], [47.3, 58889.0], [47.4, 58889.0], [47.5, 58889.0], [47.6, 58889.0], [47.7, 58889.0], [47.8, 58889.0], [47.9, 58889.0], [48.0, 58889.0], [48.1, 58889.0], [48.2, 58889.0], [48.3, 58889.0], [48.4, 58889.0], [48.5, 58889.0], [48.6, 58889.0], [48.7, 58889.0], [48.8, 58889.0], [48.9, 58889.0], [49.0, 58889.0], [49.1, 58889.0], [49.2, 58889.0], [49.3, 58889.0], [49.4, 58889.0], [49.5, 58889.0], [49.6, 58889.0], [49.7, 58889.0], [49.8, 58889.0], [49.9, 58889.0], [50.0, 58889.0], [50.1, 58889.0], [50.2, 58889.0], [50.3, 58889.0], [50.4, 58889.0], [50.5, 58889.0], [50.6, 58889.0], [50.7, 58889.0], [50.8, 58889.0], [50.9, 58889.0], [51.0, 58889.0], [51.1, 58889.0], [51.2, 58889.0], [51.3, 58889.0], [51.4, 58889.0], [51.5, 58889.0], [51.6, 58889.0], [51.7, 58889.0], [51.8, 58889.0], [51.9, 58889.0], [52.0, 58889.0], [52.1, 58889.0], [52.2, 58889.0], [52.3, 58889.0], [52.4, 58889.0], [52.5, 58889.0], [52.6, 58889.0], [52.7, 58889.0], [52.8, 58889.0], [52.9, 58889.0], [53.0, 58889.0], [53.1, 58889.0], [53.2, 58889.0], [53.3, 58889.0], [53.4, 58889.0], [53.5, 58889.0], [53.6, 58889.0], [53.7, 58889.0], [53.8, 58889.0], [53.9, 58889.0], [54.0, 58889.0], [54.1, 58889.0], [54.2, 58889.0], [54.3, 58889.0], [54.4, 58889.0], [54.5, 58889.0], [54.6, 58889.0], [54.7, 58889.0], [54.8, 58889.0], [54.9, 58889.0], [55.0, 58889.0], [55.1, 58889.0], [55.2, 58889.0], [55.3, 58889.0], [55.4, 58889.0], [55.5, 58889.0], [55.6, 58889.0], [55.7, 58889.0], [55.8, 58889.0], [55.9, 58889.0], [56.0, 58889.0], [56.1, 58889.0], [56.2, 58889.0], [56.3, 58889.0], [56.4, 58889.0], [56.5, 58889.0], [56.6, 58889.0], [56.7, 58889.0], [56.8, 58889.0], [56.9, 58889.0], [57.0, 58889.0], [57.1, 58889.0], [57.2, 58889.0], [57.3, 58889.0], [57.4, 58889.0], [57.5, 58889.0], [57.6, 58889.0], [57.7, 58889.0], [57.8, 58889.0], [57.9, 58889.0], [58.0, 58889.0], [58.1, 58889.0], [58.2, 58889.0], [58.3, 58889.0], [58.4, 58889.0], [58.5, 58889.0], [58.6, 58889.0], [58.7, 58889.0], [58.8, 58889.0], [58.9, 58889.0], [59.0, 58889.0], [59.1, 58889.0], [59.2, 58889.0], [59.3, 58889.0], [59.4, 58889.0], [59.5, 58889.0], [59.6, 58889.0], [59.7, 58889.0], [59.8, 58889.0], [59.9, 58889.0], [60.0, 58889.0], [60.1, 58889.0], [60.2, 58889.0], [60.3, 58889.0], [60.4, 58889.0], [60.5, 58889.0], [60.6, 58889.0], [60.7, 58889.0], [60.8, 58889.0], [60.9, 58889.0], [61.0, 58889.0], [61.1, 58889.0], [61.2, 58889.0], [61.3, 58889.0], [61.4, 58889.0], [61.5, 58889.0], [61.6, 58889.0], [61.7, 58889.0], [61.8, 58889.0], [61.9, 58889.0], [62.0, 58889.0], [62.1, 58889.0], [62.2, 58889.0], [62.3, 58889.0], [62.4, 58889.0], [62.5, 58889.0], [62.6, 58889.0], [62.7, 58889.0], [62.8, 58889.0], [62.9, 58889.0], [63.0, 58889.0], [63.1, 58889.0], [63.2, 58889.0], [63.3, 58889.0], [63.4, 58889.0], [63.5, 58889.0], [63.6, 58889.0], [63.7, 58889.0], [63.8, 58889.0], [63.9, 58889.0], [64.0, 58889.0], [64.1, 58889.0], [64.2, 58889.0], [64.3, 58889.0], [64.4, 58889.0], [64.5, 58889.0], [64.6, 58889.0], [64.7, 58889.0], [64.8, 58889.0], [64.9, 58889.0], [65.0, 58889.0], [65.1, 58889.0], [65.2, 58889.0], [65.3, 58889.0], [65.4, 58889.0], [65.5, 58889.0], [65.6, 58889.0], [65.7, 58889.0], [65.8, 58889.0], [65.9, 58889.0], [66.0, 58889.0], [66.1, 58889.0], [66.2, 58889.0], [66.3, 58889.0], [66.4, 58889.0], [66.5, 58889.0], [66.6, 58889.0], [66.7, 58889.0], [66.8, 58889.0], [66.9, 58889.0], [67.0, 58889.0], [67.1, 58889.0], [67.2, 58889.0], [67.3, 58889.0], [67.4, 58889.0], [67.5, 58889.0], [67.6, 58889.0], [67.7, 58889.0], [67.8, 58889.0], [67.9, 58889.0], [68.0, 58889.0], [68.1, 58889.0], [68.2, 58889.0], [68.3, 58889.0], [68.4, 58889.0], [68.5, 58889.0], [68.6, 58889.0], [68.7, 58889.0], [68.8, 58889.0], [68.9, 58889.0], [69.0, 58889.0], [69.1, 58889.0], [69.2, 58889.0], [69.3, 58889.0], [69.4, 58889.0], [69.5, 58889.0], [69.6, 58889.0], [69.7, 58889.0], [69.8, 58889.0], [69.9, 58889.0], [70.0, 58889.0], [70.1, 58889.0], [70.2, 58889.0], [70.3, 58889.0], [70.4, 58889.0], [70.5, 58889.0], [70.6, 58889.0], [70.7, 58889.0], [70.8, 58889.0], [70.9, 58889.0], [71.0, 58889.0], [71.1, 58889.0], [71.2, 58889.0], [71.3, 58889.0], [71.4, 58889.0], [71.5, 58889.0], [71.6, 58889.0], [71.7, 58889.0], [71.8, 58889.0], [71.9, 58889.0], [72.0, 58889.0], [72.1, 58889.0], [72.2, 58889.0], [72.3, 58889.0], [72.4, 58889.0], [72.5, 58889.0], [72.6, 58889.0], [72.7, 58889.0], [72.8, 58889.0], [72.9, 58889.0], [73.0, 58889.0], [73.1, 58889.0], [73.2, 58889.0], [73.3, 58889.0], [73.4, 58889.0], [73.5, 58889.0], [73.6, 58889.0], [73.7, 58889.0], [73.8, 58889.0], [73.9, 58889.0], [74.0, 58889.0], [74.1, 58889.0], [74.2, 58889.0], [74.3, 58889.0], [74.4, 58889.0], [74.5, 58889.0], [74.6, 58889.0], [74.7, 58889.0], [74.8, 58889.0], [74.9, 58889.0], [75.0, 58889.0], [75.1, 58889.0], [75.2, 58889.0], [75.3, 58889.0], [75.4, 58889.0], [75.5, 58889.0], [75.6, 58889.0], [75.7, 58889.0], [75.8, 58889.0], [75.9, 58889.0], [76.0, 58889.0], [76.1, 58889.0], [76.2, 58889.0], [76.3, 58889.0], [76.4, 58889.0], [76.5, 58889.0], [76.6, 58889.0], [76.7, 58889.0], [76.8, 58889.0], [76.9, 58889.0], [77.0, 58889.0], [77.1, 58889.0], [77.2, 58889.0], [77.3, 58889.0], [77.4, 58889.0], [77.5, 58889.0], [77.6, 58889.0], [77.7, 58889.0], [77.8, 58889.0], [77.9, 58889.0], [78.0, 58889.0], [78.1, 58889.0], [78.2, 58889.0], [78.3, 58889.0], [78.4, 58889.0], [78.5, 58889.0], [78.6, 58889.0], [78.7, 58889.0], [78.8, 58889.0], [78.9, 58889.0], [79.0, 58889.0], [79.1, 58889.0], [79.2, 58889.0], [79.3, 58889.0], [79.4, 58889.0], [79.5, 58889.0], [79.6, 58889.0], [79.7, 58889.0], [79.8, 58889.0], [79.9, 58889.0], [80.0, 58889.0], [80.1, 58889.0], [80.2, 58889.0], [80.3, 58889.0], [80.4, 58889.0], [80.5, 58889.0], [80.6, 58889.0], [80.7, 58889.0], [80.8, 58889.0], [80.9, 58889.0], [81.0, 58889.0], [81.1, 58889.0], [81.2, 58889.0], [81.3, 58889.0], [81.4, 58889.0], [81.5, 58889.0], [81.6, 58889.0], [81.7, 58889.0], [81.8, 58889.0], [81.9, 58889.0], [82.0, 58889.0], [82.1, 58889.0], [82.2, 58889.0], [82.3, 58889.0], [82.4, 58889.0], [82.5, 58889.0], [82.6, 58889.0], [82.7, 58889.0], [82.8, 58889.0], [82.9, 58889.0], [83.0, 58889.0], [83.1, 58889.0], [83.2, 58889.0], [83.3, 58889.0], [83.4, 58889.0], [83.5, 58889.0], [83.6, 58889.0], [83.7, 58889.0], [83.8, 58889.0], [83.9, 58889.0], [84.0, 58889.0], [84.1, 58889.0], [84.2, 58889.0], [84.3, 58889.0], [84.4, 58889.0], [84.5, 58889.0], [84.6, 58889.0], [84.7, 58889.0], [84.8, 58889.0], [84.9, 58889.0], [85.0, 58889.0], [85.1, 58889.0], [85.2, 58889.0], [85.3, 58889.0], [85.4, 58889.0], [85.5, 58889.0], [85.6, 58889.0], [85.7, 58889.0], [85.8, 58889.0], [85.9, 58889.0], [86.0, 58889.0], [86.1, 58889.0], [86.2, 58889.0], [86.3, 58889.0], [86.4, 58889.0], [86.5, 58889.0], [86.6, 58889.0], [86.7, 58889.0], [86.8, 58889.0], [86.9, 58889.0], [87.0, 58889.0], [87.1, 58889.0], [87.2, 58889.0], [87.3, 58889.0], [87.4, 58889.0], [87.5, 58889.0], [87.6, 58889.0], [87.7, 58889.0], [87.8, 58889.0], [87.9, 58889.0], [88.0, 58889.0], [88.1, 58889.0], [88.2, 58889.0], [88.3, 58889.0], [88.4, 58889.0], [88.5, 58889.0], [88.6, 58889.0], [88.7, 58889.0], [88.8, 58889.0], [88.9, 58889.0], [89.0, 58889.0], [89.1, 58889.0], [89.2, 58889.0], [89.3, 58889.0], [89.4, 58889.0], [89.5, 58889.0], [89.6, 58889.0], [89.7, 58889.0], [89.8, 58889.0], [89.9, 58889.0], [90.0, 58889.0], [90.1, 58889.0], [90.2, 58889.0], [90.3, 58889.0], [90.4, 58889.0], [90.5, 58889.0], [90.6, 58889.0], [90.7, 58889.0], [90.8, 58889.0], [90.9, 58889.0], [91.0, 58889.0], [91.1, 58889.0], [91.2, 58889.0], [91.3, 58889.0], [91.4, 58889.0], [91.5, 58889.0], [91.6, 58889.0], [91.7, 58889.0], [91.8, 58889.0], [91.9, 58889.0], [92.0, 58889.0], [92.1, 58889.0], [92.2, 58889.0], [92.3, 58889.0], [92.4, 58889.0], [92.5, 58889.0], [92.6, 58889.0], [92.7, 58889.0], [92.8, 58889.0], [92.9, 58889.0], [93.0, 58889.0], [93.1, 58889.0], [93.2, 58889.0], [93.3, 58889.0], [93.4, 58889.0], [93.5, 58889.0], [93.6, 58889.0], [93.7, 58889.0], [93.8, 58889.0], [93.9, 58889.0], [94.0, 58889.0], [94.1, 58889.0], [94.2, 58889.0], [94.3, 58889.0], [94.4, 58889.0], [94.5, 58889.0], [94.6, 58889.0], [94.7, 58889.0], [94.8, 58889.0], [94.9, 58889.0], [95.0, 58889.0], [95.1, 58889.0], [95.2, 58889.0], [95.3, 58889.0], [95.4, 58889.0], [95.5, 58889.0], [95.6, 58889.0], [95.7, 58889.0], [95.8, 58889.0], [95.9, 58889.0], [96.0, 58889.0], [96.1, 58889.0], [96.2, 58889.0], [96.3, 58889.0], [96.4, 58889.0], [96.5, 58889.0], [96.6, 58889.0], [96.7, 58889.0], [96.8, 58889.0], [96.9, 58889.0], [97.0, 58889.0], [97.1, 58889.0], [97.2, 58889.0], [97.3, 58889.0], [97.4, 58889.0], [97.5, 58889.0], [97.6, 58889.0], [97.7, 58889.0], [97.8, 58889.0], [97.9, 58889.0], [98.0, 58889.0], [98.1, 58889.0], [98.2, 58889.0], [98.3, 58889.0], [98.4, 58889.0], [98.5, 58889.0], [98.6, 58889.0], [98.7, 58889.0], [98.8, 58889.0], [98.9, 58889.0], [99.0, 58889.0], [99.1, 58889.0], [99.2, 58889.0], [99.3, 58889.0], [99.4, 58889.0], [99.5, 58889.0], [99.6, 58889.0], [99.7, 58889.0], [99.8, 58889.0], [99.9, 58889.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[0.0, 8299.0], [0.1, 8299.0], [0.2, 8299.0], [0.3, 8299.0], [0.4, 8717.0], [0.5, 8717.0], [0.6, 8717.0], [0.7, 8738.0], [0.8, 8738.0], [0.9, 8738.0], [1.0, 9066.0], [1.1, 9066.0], [1.2, 9066.0], [1.3, 9066.0], [1.4, 9200.0], [1.5, 9200.0], [1.6, 9200.0], [1.7, 9326.0], [1.8, 9326.0], [1.9, 9326.0], [2.0, 9868.0], [2.1, 9868.0], [2.2, 9868.0], [2.3, 9868.0], [2.4, 10554.0], [2.5, 10554.0], [2.6, 10554.0], [2.7, 11292.0], [2.8, 11292.0], [2.9, 11292.0], [3.0, 11442.0], [3.1, 11442.0], [3.2, 11442.0], [3.3, 11442.0], [3.4, 11442.0], [3.5, 11442.0], [3.6, 11442.0], [3.7, 11551.0], [3.8, 11551.0], [3.9, 11551.0], [4.0, 11664.0], [4.1, 11664.0], [4.2, 11664.0], [4.3, 11664.0], [4.4, 12201.0], [4.5, 12201.0], [4.6, 12201.0], [4.7, 12538.0], [4.8, 12538.0], [4.9, 12538.0], [5.0, 12702.0], [5.1, 12702.0], [5.2, 12702.0], [5.3, 12702.0], [5.4, 12845.0], [5.5, 12845.0], [5.6, 12845.0], [5.7, 12873.0], [5.8, 12873.0], [5.9, 12873.0], [6.0, 12953.0], [6.1, 12953.0], [6.2, 12953.0], [6.3, 12953.0], [6.4, 12996.0], [6.5, 12996.0], [6.6, 12996.0], [6.7, 13090.0], [6.8, 13090.0], [6.9, 13090.0], [7.0, 13182.0], [7.1, 13182.0], [7.2, 13182.0], [7.3, 13182.0], [7.4, 13194.0], [7.5, 13194.0], [7.6, 13194.0], [7.7, 13208.0], [7.8, 13208.0], [7.9, 13208.0], [8.0, 13263.0], [8.1, 13263.0], [8.2, 13263.0], [8.3, 13263.0], [8.4, 13270.0], [8.5, 13270.0], [8.6, 13270.0], [8.7, 13372.0], [8.8, 13372.0], [8.9, 13372.0], [9.0, 13412.0], [9.1, 13412.0], [9.2, 13412.0], [9.3, 13412.0], [9.4, 13509.0], [9.5, 13509.0], [9.6, 13509.0], [9.7, 13523.0], [9.8, 13523.0], [9.9, 13523.0], [10.0, 13584.0], [10.1, 13584.0], [10.2, 13584.0], [10.3, 13584.0], [10.4, 13667.0], [10.5, 13667.0], [10.6, 13667.0], [10.7, 13717.0], [10.8, 13717.0], [10.9, 13717.0], [11.0, 13717.0], [11.1, 13868.0], [11.2, 13868.0], [11.3, 13868.0], [11.4, 14093.0], [11.5, 14093.0], [11.6, 14093.0], [11.7, 14181.0], [11.8, 14181.0], [11.9, 14181.0], [12.0, 14181.0], [12.1, 14205.0], [12.2, 14205.0], [12.3, 14205.0], [12.4, 14450.0], [12.5, 14450.0], [12.6, 14450.0], [12.7, 14501.0], [12.8, 14501.0], [12.9, 14501.0], [13.0, 14501.0], [13.1, 14602.0], [13.2, 14602.0], [13.3, 14602.0], [13.4, 14691.0], [13.5, 14691.0], [13.6, 14691.0], [13.7, 14696.0], [13.8, 14696.0], [13.9, 14696.0], [14.0, 14696.0], [14.1, 14721.0], [14.2, 14721.0], [14.3, 14721.0], [14.4, 15003.0], [14.5, 15003.0], [14.6, 15003.0], [14.7, 15135.0], [14.8, 15135.0], [14.9, 15135.0], [15.0, 15135.0], [15.1, 15254.0], [15.2, 15254.0], [15.3, 15254.0], [15.4, 15282.0], [15.5, 15282.0], [15.6, 15282.0], [15.7, 15300.0], [15.8, 15300.0], [15.9, 15300.0], [16.0, 15300.0], [16.1, 15329.0], [16.2, 15329.0], [16.3, 15329.0], [16.4, 15395.0], [16.5, 15395.0], [16.6, 15395.0], [16.7, 15439.0], [16.8, 15439.0], [16.9, 15439.0], [17.0, 15439.0], [17.1, 15449.0], [17.2, 15449.0], [17.3, 15449.0], [17.4, 15458.0], [17.5, 15458.0], [17.6, 15458.0], [17.7, 15473.0], [17.8, 15473.0], [17.9, 15473.0], [18.0, 15473.0], [18.1, 15545.0], [18.2, 15545.0], [18.3, 15545.0], [18.4, 15547.0], [18.5, 15547.0], [18.6, 15547.0], [18.7, 15617.0], [18.8, 15617.0], [18.9, 15617.0], [19.0, 15739.0], [19.1, 15739.0], [19.2, 15739.0], [19.3, 15739.0], [19.4, 15802.0], [19.5, 15802.0], [19.6, 15802.0], [19.7, 15897.0], [19.8, 15897.0], [19.9, 15897.0], [20.0, 15901.0], [20.1, 15901.0], [20.2, 15901.0], [20.3, 15901.0], [20.4, 15957.0], [20.5, 15957.0], [20.6, 15957.0], [20.7, 16020.0], [20.8, 16020.0], [20.9, 16020.0], [21.0, 16031.0], [21.1, 16031.0], [21.2, 16031.0], [21.3, 16031.0], [21.4, 16032.0], [21.5, 16032.0], [21.6, 16032.0], [21.7, 16063.0], [21.8, 16063.0], [21.9, 16063.0], [22.0, 16088.0], [22.1, 16088.0], [22.2, 16088.0], [22.3, 16088.0], [22.4, 16125.0], [22.5, 16125.0], [22.6, 16125.0], [22.7, 16125.0], [22.8, 16125.0], [22.9, 16125.0], [23.0, 16134.0], [23.1, 16134.0], [23.2, 16134.0], [23.3, 16134.0], [23.4, 16165.0], [23.5, 16165.0], [23.6, 16165.0], [23.7, 16165.0], [23.8, 16165.0], [23.9, 16165.0], [24.0, 16263.0], [24.1, 16263.0], [24.2, 16263.0], [24.3, 16263.0], [24.4, 16353.0], [24.5, 16353.0], [24.6, 16353.0], [24.7, 16379.0], [24.8, 16379.0], [24.9, 16379.0], [25.0, 16408.0], [25.1, 16408.0], [25.2, 16408.0], [25.3, 16408.0], [25.4, 16524.0], [25.5, 16524.0], [25.6, 16524.0], [25.7, 16582.0], [25.8, 16582.0], [25.9, 16582.0], [26.0, 16685.0], [26.1, 16685.0], [26.2, 16685.0], [26.3, 16685.0], [26.4, 16707.0], [26.5, 16707.0], [26.6, 16707.0], [26.7, 16708.0], [26.8, 16708.0], [26.9, 16708.0], [27.0, 16784.0], [27.1, 16784.0], [27.2, 16784.0], [27.3, 16784.0], [27.4, 16800.0], [27.5, 16800.0], [27.6, 16800.0], [27.7, 16814.0], [27.8, 16814.0], [27.9, 16814.0], [28.0, 16855.0], [28.1, 16855.0], [28.2, 16855.0], [28.3, 16855.0], [28.4, 16924.0], [28.5, 16924.0], [28.6, 16924.0], [28.7, 17043.0], [28.8, 17043.0], [28.9, 17043.0], [29.0, 17109.0], [29.1, 17109.0], [29.2, 17109.0], [29.3, 17109.0], [29.4, 17113.0], [29.5, 17113.0], [29.6, 17113.0], [29.7, 17120.0], [29.8, 17120.0], [29.9, 17120.0], [30.0, 17135.0], [30.1, 17135.0], [30.2, 17135.0], [30.3, 17135.0], [30.4, 17169.0], [30.5, 17169.0], [30.6, 17169.0], [30.7, 17171.0], [30.8, 17171.0], [30.9, 17171.0], [31.0, 17192.0], [31.1, 17192.0], [31.2, 17192.0], [31.3, 17192.0], [31.4, 17262.0], [31.5, 17262.0], [31.6, 17262.0], [31.7, 17299.0], [31.8, 17299.0], [31.9, 17299.0], [32.0, 17363.0], [32.1, 17363.0], [32.2, 17363.0], [32.3, 17363.0], [32.4, 17366.0], [32.5, 17366.0], [32.6, 17366.0], [32.7, 17391.0], [32.8, 17391.0], [32.9, 17391.0], [33.0, 17406.0], [33.1, 17406.0], [33.2, 17406.0], [33.3, 17406.0], [33.4, 17412.0], [33.5, 17412.0], [33.6, 17412.0], [33.7, 17439.0], [33.8, 17439.0], [33.9, 17439.0], [34.0, 17443.0], [34.1, 17443.0], [34.2, 17443.0], [34.3, 17443.0], [34.4, 17481.0], [34.5, 17481.0], [34.6, 17481.0], [34.7, 17496.0], [34.8, 17496.0], [34.9, 17496.0], [35.0, 17526.0], [35.1, 17526.0], [35.2, 17526.0], [35.3, 17526.0], [35.4, 17531.0], [35.5, 17531.0], [35.6, 17531.0], [35.7, 17540.0], [35.8, 17540.0], [35.9, 17540.0], [36.0, 17587.0], [36.1, 17587.0], [36.2, 17587.0], [36.3, 17587.0], [36.4, 17617.0], [36.5, 17617.0], [36.6, 17617.0], [36.7, 17633.0], [36.8, 17633.0], [36.9, 17633.0], [37.0, 17654.0], [37.1, 17654.0], [37.2, 17654.0], [37.3, 17654.0], [37.4, 17665.0], [37.5, 17665.0], [37.6, 17665.0], [37.7, 17725.0], [37.8, 17725.0], [37.9, 17725.0], [38.0, 17903.0], [38.1, 17903.0], [38.2, 17903.0], [38.3, 17903.0], [38.4, 17945.0], [38.5, 17945.0], [38.6, 17945.0], [38.7, 17947.0], [38.8, 17947.0], [38.9, 17947.0], [39.0, 17947.0], [39.1, 17965.0], [39.2, 17965.0], [39.3, 17965.0], [39.4, 18050.0], [39.5, 18050.0], [39.6, 18050.0], [39.7, 18071.0], [39.8, 18071.0], [39.9, 18071.0], [40.0, 18071.0], [40.1, 18087.0], [40.2, 18087.0], [40.3, 18087.0], [40.4, 18106.0], [40.5, 18106.0], [40.6, 18106.0], [40.7, 18107.0], [40.8, 18107.0], [40.9, 18107.0], [41.0, 18107.0], [41.1, 18117.0], [41.2, 18117.0], [41.3, 18117.0], [41.4, 18367.0], [41.5, 18367.0], [41.6, 18367.0], [41.7, 18377.0], [41.8, 18377.0], [41.9, 18377.0], [42.0, 18377.0], [42.1, 18432.0], [42.2, 18432.0], [42.3, 18432.0], [42.4, 18494.0], [42.5, 18494.0], [42.6, 18494.0], [42.7, 18593.0], [42.8, 18593.0], [42.9, 18593.0], [43.0, 18593.0], [43.1, 18687.0], [43.2, 18687.0], [43.3, 18687.0], [43.4, 18709.0], [43.5, 18709.0], [43.6, 18709.0], [43.7, 18808.0], [43.8, 18808.0], [43.9, 18808.0], [44.0, 18808.0], [44.1, 18815.0], [44.2, 18815.0], [44.3, 18815.0], [44.4, 18896.0], [44.5, 18896.0], [44.6, 18896.0], [44.7, 18970.0], [44.8, 18970.0], [44.9, 18970.0], [45.0, 18970.0], [45.1, 19000.0], [45.2, 19000.0], [45.3, 19000.0], [45.4, 19014.0], [45.5, 19014.0], [45.6, 19014.0], [45.7, 19076.0], [45.8, 19076.0], [45.9, 19076.0], [46.0, 19076.0], [46.1, 19309.0], [46.2, 19309.0], [46.3, 19309.0], [46.4, 19356.0], [46.5, 19356.0], [46.6, 19356.0], [46.7, 19447.0], [46.8, 19447.0], [46.9, 19447.0], [47.0, 19447.0], [47.1, 19538.0], [47.2, 19538.0], [47.3, 19538.0], [47.4, 19567.0], [47.5, 19567.0], [47.6, 19567.0], [47.7, 19595.0], [47.8, 19595.0], [47.9, 19595.0], [48.0, 19595.0], [48.1, 19691.0], [48.2, 19691.0], [48.3, 19691.0], [48.4, 19770.0], [48.5, 19770.0], [48.6, 19770.0], [48.7, 19781.0], [48.8, 19781.0], [48.9, 19781.0], [49.0, 19781.0], [49.1, 19853.0], [49.2, 19853.0], [49.3, 19853.0], [49.4, 20371.0], [49.5, 20371.0], [49.6, 20371.0], [49.7, 20420.0], [49.8, 20420.0], [49.9, 20420.0], [50.0, 20420.0], [50.1, 20465.0], [50.2, 20465.0], [50.3, 20465.0], [50.4, 20642.0], [50.5, 20642.0], [50.6, 20642.0], [50.7, 20708.0], [50.8, 20708.0], [50.9, 20708.0], [51.0, 20708.0], [51.1, 20714.0], [51.2, 20714.0], [51.3, 20714.0], [51.4, 20788.0], [51.5, 20788.0], [51.6, 20788.0], [51.7, 20921.0], [51.8, 20921.0], [51.9, 20921.0], [52.0, 20921.0], [52.1, 20928.0], [52.2, 20928.0], [52.3, 20928.0], [52.4, 20954.0], [52.5, 20954.0], [52.6, 20954.0], [52.7, 21027.0], [52.8, 21027.0], [52.9, 21027.0], [53.0, 21027.0], [53.1, 21128.0], [53.2, 21128.0], [53.3, 21128.0], [53.4, 21164.0], [53.5, 21164.0], [53.6, 21164.0], [53.7, 21276.0], [53.8, 21276.0], [53.9, 21276.0], [54.0, 21276.0], [54.1, 21296.0], [54.2, 21296.0], [54.3, 21296.0], [54.4, 21332.0], [54.5, 21332.0], [54.6, 21332.0], [54.7, 21337.0], [54.8, 21337.0], [54.9, 21337.0], [55.0, 21337.0], [55.1, 21373.0], [55.2, 21373.0], [55.3, 21373.0], [55.4, 21379.0], [55.5, 21379.0], [55.6, 21379.0], [55.7, 21416.0], [55.8, 21416.0], [55.9, 21416.0], [56.0, 21416.0], [56.1, 21516.0], [56.2, 21516.0], [56.3, 21516.0], [56.4, 21527.0], [56.5, 21527.0], [56.6, 21527.0], [56.7, 21552.0], [56.8, 21552.0], [56.9, 21552.0], [57.0, 21552.0], [57.1, 21565.0], [57.2, 21565.0], [57.3, 21565.0], [57.4, 21603.0], [57.5, 21603.0], [57.6, 21603.0], [57.7, 21603.0], [57.8, 21603.0], [57.9, 21603.0], [58.0, 21603.0], [58.1, 21686.0], [58.2, 21686.0], [58.3, 21686.0], [58.4, 21686.0], [58.5, 21686.0], [58.6, 21686.0], [58.7, 21698.0], [58.8, 21698.0], [58.9, 21698.0], [59.0, 21698.0], [59.1, 21737.0], [59.2, 21737.0], [59.3, 21737.0], [59.4, 21783.0], [59.5, 21783.0], [59.6, 21783.0], [59.7, 21826.0], [59.8, 21826.0], [59.9, 21826.0], [60.0, 21826.0], [60.1, 21874.0], [60.2, 21874.0], [60.3, 21874.0], [60.4, 21900.0], [60.5, 21900.0], [60.6, 21900.0], [60.7, 21920.0], [60.8, 21920.0], [60.9, 21920.0], [61.0, 21920.0], [61.1, 21930.0], [61.2, 21930.0], [61.3, 21930.0], [61.4, 21966.0], [61.5, 21966.0], [61.6, 21966.0], [61.7, 21991.0], [61.8, 21991.0], [61.9, 21991.0], [62.0, 21991.0], [62.1, 22011.0], [62.2, 22011.0], [62.3, 22011.0], [62.4, 22033.0], [62.5, 22033.0], [62.6, 22033.0], [62.7, 22037.0], [62.8, 22037.0], [62.9, 22037.0], [63.0, 22037.0], [63.1, 22052.0], [63.2, 22052.0], [63.3, 22052.0], [63.4, 22066.0], [63.5, 22066.0], [63.6, 22066.0], [63.7, 22118.0], [63.8, 22118.0], [63.9, 22118.0], [64.0, 22118.0], [64.1, 22131.0], [64.2, 22131.0], [64.3, 22131.0], [64.4, 22140.0], [64.5, 22140.0], [64.6, 22140.0], [64.7, 22141.0], [64.8, 22141.0], [64.9, 22141.0], [65.0, 22141.0], [65.1, 22150.0], [65.2, 22150.0], [65.3, 22150.0], [65.4, 22155.0], [65.5, 22155.0], [65.6, 22155.0], [65.7, 22292.0], [65.8, 22292.0], [65.9, 22292.0], [66.0, 22292.0], [66.1, 22340.0], [66.2, 22340.0], [66.3, 22340.0], [66.4, 22362.0], [66.5, 22362.0], [66.6, 22362.0], [66.7, 22375.0], [66.8, 22375.0], [66.9, 22375.0], [67.0, 22375.0], [67.1, 22408.0], [67.2, 22408.0], [67.3, 22408.0], [67.4, 22443.0], [67.5, 22443.0], [67.6, 22443.0], [67.7, 22505.0], [67.8, 22505.0], [67.9, 22505.0], [68.0, 22505.0], [68.1, 22518.0], [68.2, 22518.0], [68.3, 22518.0], [68.4, 22569.0], [68.5, 22569.0], [68.6, 22569.0], [68.7, 22676.0], [68.8, 22676.0], [68.9, 22676.0], [69.0, 22676.0], [69.1, 22677.0], [69.2, 22677.0], [69.3, 22677.0], [69.4, 22697.0], [69.5, 22697.0], [69.6, 22697.0], [69.7, 22732.0], [69.8, 22732.0], [69.9, 22732.0], [70.0, 22732.0], [70.1, 22755.0], [70.2, 22755.0], [70.3, 22755.0], [70.4, 22809.0], [70.5, 22809.0], [70.6, 22809.0], [70.7, 22813.0], [70.8, 22813.0], [70.9, 22813.0], [71.0, 22813.0], [71.1, 22900.0], [71.2, 22900.0], [71.3, 22900.0], [71.4, 22906.0], [71.5, 22906.0], [71.6, 22906.0], [71.7, 22993.0], [71.8, 22993.0], [71.9, 22993.0], [72.0, 22993.0], [72.1, 23029.0], [72.2, 23029.0], [72.3, 23029.0], [72.4, 23052.0], [72.5, 23052.0], [72.6, 23052.0], [72.7, 23056.0], [72.8, 23056.0], [72.9, 23056.0], [73.0, 23056.0], [73.1, 23158.0], [73.2, 23158.0], [73.3, 23158.0], [73.4, 23230.0], [73.5, 23230.0], [73.6, 23230.0], [73.7, 23315.0], [73.8, 23315.0], [73.9, 23315.0], [74.0, 23315.0], [74.1, 23354.0], [74.2, 23354.0], [74.3, 23354.0], [74.4, 23367.0], [74.5, 23367.0], [74.6, 23367.0], [74.7, 23383.0], [74.8, 23383.0], [74.9, 23383.0], [75.0, 23383.0], [75.1, 23478.0], [75.2, 23478.0], [75.3, 23478.0], [75.4, 23546.0], [75.5, 23546.0], [75.6, 23546.0], [75.7, 23591.0], [75.8, 23591.0], [75.9, 23591.0], [76.0, 23665.0], [76.1, 23665.0], [76.2, 23665.0], [76.3, 23665.0], [76.4, 23695.0], [76.5, 23695.0], [76.6, 23695.0], [76.7, 23702.0], [76.8, 23702.0], [76.9, 23702.0], [77.0, 23749.0], [77.1, 23749.0], [77.2, 23749.0], [77.3, 23749.0], [77.4, 23987.0], [77.5, 23987.0], [77.6, 23987.0], [77.7, 23999.0], [77.8, 23999.0], [77.9, 23999.0], [78.0, 24023.0], [78.1, 24023.0], [78.2, 24023.0], [78.3, 24023.0], [78.4, 24024.0], [78.5, 24024.0], [78.6, 24024.0], [78.7, 24045.0], [78.8, 24045.0], [78.9, 24045.0], [79.0, 24052.0], [79.1, 24052.0], [79.2, 24052.0], [79.3, 24052.0], [79.4, 24063.0], [79.5, 24063.0], [79.6, 24063.0], [79.7, 24147.0], [79.8, 24147.0], [79.9, 24147.0], [80.0, 24233.0], [80.1, 24233.0], [80.2, 24233.0], [80.3, 24233.0], [80.4, 24407.0], [80.5, 24407.0], [80.6, 24407.0], [80.7, 24464.0], [80.8, 24464.0], [80.9, 24464.0], [81.0, 24500.0], [81.1, 24500.0], [81.2, 24500.0], [81.3, 24500.0], [81.4, 24575.0], [81.5, 24575.0], [81.6, 24575.0], [81.7, 24626.0], [81.8, 24626.0], [81.9, 24626.0], [82.0, 24707.0], [82.1, 24707.0], [82.2, 24707.0], [82.3, 24707.0], [82.4, 24888.0], [82.5, 24888.0], [82.6, 24888.0], [82.7, 25002.0], [82.8, 25002.0], [82.9, 25002.0], [83.0, 25106.0], [83.1, 25106.0], [83.2, 25106.0], [83.3, 25106.0], [83.4, 25191.0], [83.5, 25191.0], [83.6, 25191.0], [83.7, 25217.0], [83.8, 25217.0], [83.9, 25217.0], [84.0, 25700.0], [84.1, 25700.0], [84.2, 25700.0], [84.3, 25700.0], [84.4, 26511.0], [84.5, 26511.0], [84.6, 26511.0], [84.7, 26591.0], [84.8, 26591.0], [84.9, 26591.0], [85.0, 26743.0], [85.1, 26743.0], [85.2, 26743.0], [85.3, 26743.0], [85.4, 26748.0], [85.5, 26748.0], [85.6, 26748.0], [85.7, 26799.0], [85.8, 26799.0], [85.9, 26799.0], [86.0, 27038.0], [86.1, 27038.0], [86.2, 27038.0], [86.3, 27038.0], [86.4, 27398.0], [86.5, 27398.0], [86.6, 27398.0], [86.7, 27674.0], [86.8, 27674.0], [86.9, 27674.0], [87.0, 27761.0], [87.1, 27761.0], [87.2, 27761.0], [87.3, 27761.0], [87.4, 28355.0], [87.5, 28355.0], [87.6, 28355.0], [87.7, 28501.0], [87.8, 28501.0], [87.9, 28501.0], [88.0, 28506.0], [88.1, 28506.0], [88.2, 28506.0], [88.3, 28506.0], [88.4, 28593.0], [88.5, 28593.0], [88.6, 28593.0], [88.7, 28635.0], [88.8, 28635.0], [88.9, 28635.0], [89.0, 28939.0], [89.1, 28939.0], [89.2, 28939.0], [89.3, 28939.0], [89.4, 28951.0], [89.5, 28951.0], [89.6, 28951.0], [89.7, 29046.0], [89.8, 29046.0], [89.9, 29046.0], [90.0, 29303.0], [90.1, 29303.0], [90.2, 29303.0], [90.3, 29303.0], [90.4, 29801.0], [90.5, 29801.0], [90.6, 29801.0], [90.7, 29901.0], [90.8, 29901.0], [90.9, 29901.0], [91.0, 30070.0], [91.1, 30070.0], [91.2, 30070.0], [91.3, 30070.0], [91.4, 30082.0], [91.5, 30082.0], [91.6, 30082.0], [91.7, 30158.0], [91.8, 30158.0], [91.9, 30158.0], [92.0, 30502.0], [92.1, 30502.0], [92.2, 30502.0], [92.3, 30502.0], [92.4, 31026.0], [92.5, 31026.0], [92.6, 31026.0], [92.7, 31095.0], [92.8, 31095.0], [92.9, 31095.0], [93.0, 31283.0], [93.1, 31283.0], [93.2, 31283.0], [93.3, 31283.0], [93.4, 31298.0], [93.5, 31298.0], [93.6, 31298.0], [93.7, 31308.0], [93.8, 31308.0], [93.9, 31308.0], [94.0, 31344.0], [94.1, 31344.0], [94.2, 31344.0], [94.3, 31344.0], [94.4, 31434.0], [94.5, 31434.0], [94.6, 31434.0], [94.7, 31469.0], [94.8, 31469.0], [94.9, 31469.0], [95.0, 31524.0], [95.1, 31524.0], [95.2, 31524.0], [95.3, 31524.0], [95.4, 31893.0], [95.5, 31893.0], [95.6, 31893.0], [95.7, 31995.0], [95.8, 31995.0], [95.9, 31995.0], [96.0, 32182.0], [96.1, 32182.0], [96.2, 32182.0], [96.3, 32182.0], [96.4, 32194.0], [96.5, 32194.0], [96.6, 32194.0], [96.7, 32250.0], [96.8, 32250.0], [96.9, 32250.0], [97.0, 32276.0], [97.1, 32276.0], [97.2, 32276.0], [97.3, 32276.0], [97.4, 32629.0], [97.5, 32629.0], [97.6, 32629.0], [97.7, 32641.0], [97.8, 32641.0], [97.9, 32641.0], [98.0, 32862.0], [98.1, 32862.0], [98.2, 32862.0], [98.3, 32862.0], [98.4, 33373.0], [98.5, 33373.0], [98.6, 33373.0], [98.7, 35213.0], [98.8, 35213.0], [98.9, 35213.0], [99.0, 35505.0], [99.1, 35505.0], [99.2, 35505.0], [99.3, 35505.0], [99.4, 36474.0], [99.5, 36474.0], [99.6, 36474.0], [99.7, 37538.0], [99.8, 37538.0], [99.9, 37538.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[0.0, 19912.0], [0.1, 19912.0], [0.2, 19912.0], [0.3, 19912.0], [0.4, 19912.0], [0.5, 19912.0], [0.6, 19912.0], [0.7, 19912.0], [0.8, 19912.0], [0.9, 19912.0], [1.0, 19912.0], [1.1, 19912.0], [1.2, 19912.0], [1.3, 19912.0], [1.4, 19912.0], [1.5, 19912.0], [1.6, 19912.0], [1.7, 19912.0], [1.8, 19912.0], [1.9, 19912.0], [2.0, 19912.0], [2.1, 19912.0], [2.2, 19912.0], [2.3, 19912.0], [2.4, 19912.0], [2.5, 19912.0], [2.6, 19912.0], [2.7, 19912.0], [2.8, 19912.0], [2.9, 19912.0], [3.0, 19912.0], [3.1, 19912.0], [3.2, 19912.0], [3.3, 19912.0], [3.4, 19912.0], [3.5, 19912.0], [3.6, 19912.0], [3.7, 19912.0], [3.8, 19912.0], [3.9, 19912.0], [4.0, 19912.0], [4.1, 19912.0], [4.2, 19912.0], [4.3, 19912.0], [4.4, 19912.0], [4.5, 19912.0], [4.6, 19912.0], [4.7, 19912.0], [4.8, 19912.0], [4.9, 19912.0], [5.0, 19912.0], [5.1, 19912.0], [5.2, 19912.0], [5.3, 19912.0], [5.4, 19912.0], [5.5, 19912.0], [5.6, 19912.0], [5.7, 19912.0], [5.8, 19912.0], [5.9, 19912.0], [6.0, 19912.0], [6.1, 19912.0], [6.2, 19912.0], [6.3, 19912.0], [6.4, 19912.0], [6.5, 19912.0], [6.6, 19912.0], [6.7, 19912.0], [6.8, 19912.0], [6.9, 19912.0], [7.0, 19912.0], [7.1, 19912.0], [7.2, 19912.0], [7.3, 19912.0], [7.4, 19912.0], [7.5, 19912.0], [7.6, 19912.0], [7.7, 19912.0], [7.8, 19912.0], [7.9, 19912.0], [8.0, 19912.0], [8.1, 19912.0], [8.2, 19912.0], [8.3, 19912.0], [8.4, 19912.0], [8.5, 19912.0], [8.6, 19912.0], [8.7, 19912.0], [8.8, 19912.0], [8.9, 19912.0], [9.0, 19912.0], [9.1, 19912.0], [9.2, 19912.0], [9.3, 19912.0], [9.4, 19912.0], [9.5, 19912.0], [9.6, 19912.0], [9.7, 19912.0], [9.8, 19912.0], [9.9, 19912.0], [10.0, 19912.0], [10.1, 19912.0], [10.2, 19912.0], [10.3, 19912.0], [10.4, 19912.0], [10.5, 19912.0], [10.6, 19912.0], [10.7, 19912.0], [10.8, 19912.0], [10.9, 19912.0], [11.0, 19912.0], [11.1, 19912.0], [11.2, 19912.0], [11.3, 19912.0], [11.4, 19912.0], [11.5, 19912.0], [11.6, 19912.0], [11.7, 19912.0], [11.8, 19912.0], [11.9, 19912.0], [12.0, 19912.0], [12.1, 19912.0], [12.2, 19912.0], [12.3, 19912.0], [12.4, 19912.0], [12.5, 19912.0], [12.6, 19912.0], [12.7, 19912.0], [12.8, 19912.0], [12.9, 19912.0], [13.0, 19912.0], [13.1, 19912.0], [13.2, 19912.0], [13.3, 19912.0], [13.4, 19912.0], [13.5, 19912.0], [13.6, 19912.0], [13.7, 19912.0], [13.8, 19912.0], [13.9, 19912.0], [14.0, 19912.0], [14.1, 19912.0], [14.2, 19912.0], [14.3, 19912.0], [14.4, 19912.0], [14.5, 19912.0], [14.6, 19912.0], [14.7, 19912.0], [14.8, 19912.0], [14.9, 19912.0], [15.0, 19912.0], [15.1, 19912.0], [15.2, 19912.0], [15.3, 19912.0], [15.4, 19912.0], [15.5, 19912.0], [15.6, 19912.0], [15.7, 19912.0], [15.8, 19912.0], [15.9, 19912.0], [16.0, 19912.0], [16.1, 19912.0], [16.2, 19912.0], [16.3, 19912.0], [16.4, 19912.0], [16.5, 19912.0], [16.6, 19912.0], [16.7, 19912.0], [16.8, 19912.0], [16.9, 19912.0], [17.0, 19912.0], [17.1, 19912.0], [17.2, 19912.0], [17.3, 19912.0], [17.4, 19912.0], [17.5, 19912.0], [17.6, 19912.0], [17.7, 19912.0], [17.8, 19912.0], [17.9, 19912.0], [18.0, 19912.0], [18.1, 19912.0], [18.2, 19912.0], [18.3, 19912.0], [18.4, 19912.0], [18.5, 19912.0], [18.6, 19912.0], [18.7, 19912.0], [18.8, 19912.0], [18.9, 19912.0], [19.0, 19912.0], [19.1, 19912.0], [19.2, 19912.0], [19.3, 19912.0], [19.4, 19912.0], [19.5, 19912.0], [19.6, 19912.0], [19.7, 19912.0], [19.8, 19912.0], [19.9, 19912.0], [20.0, 19912.0], [20.1, 19912.0], [20.2, 19912.0], [20.3, 19912.0], [20.4, 19912.0], [20.5, 19912.0], [20.6, 19912.0], [20.7, 19912.0], [20.8, 19912.0], [20.9, 19912.0], [21.0, 19912.0], [21.1, 19912.0], [21.2, 19912.0], [21.3, 19912.0], [21.4, 19912.0], [21.5, 19912.0], [21.6, 19912.0], [21.7, 19912.0], [21.8, 19912.0], [21.9, 19912.0], [22.0, 19912.0], [22.1, 19912.0], [22.2, 19912.0], [22.3, 19912.0], [22.4, 19912.0], [22.5, 19912.0], [22.6, 19912.0], [22.7, 19912.0], [22.8, 19912.0], [22.9, 19912.0], [23.0, 19912.0], [23.1, 19912.0], [23.2, 19912.0], [23.3, 19912.0], [23.4, 19912.0], [23.5, 19912.0], [23.6, 19912.0], [23.7, 19912.0], [23.8, 19912.0], [23.9, 19912.0], [24.0, 19912.0], [24.1, 19912.0], [24.2, 19912.0], [24.3, 19912.0], [24.4, 19912.0], [24.5, 19912.0], [24.6, 19912.0], [24.7, 19912.0], [24.8, 19912.0], [24.9, 19912.0], [25.0, 19912.0], [25.1, 19912.0], [25.2, 19912.0], [25.3, 19912.0], [25.4, 19912.0], [25.5, 19912.0], [25.6, 19912.0], [25.7, 19912.0], [25.8, 19912.0], [25.9, 19912.0], [26.0, 19912.0], [26.1, 19912.0], [26.2, 19912.0], [26.3, 19912.0], [26.4, 19912.0], [26.5, 19912.0], [26.6, 19912.0], [26.7, 19912.0], [26.8, 19912.0], [26.9, 19912.0], [27.0, 19912.0], [27.1, 19912.0], [27.2, 19912.0], [27.3, 19912.0], [27.4, 19912.0], [27.5, 19912.0], [27.6, 19912.0], [27.7, 19912.0], [27.8, 19912.0], [27.9, 19912.0], [28.0, 19912.0], [28.1, 19912.0], [28.2, 19912.0], [28.3, 19912.0], [28.4, 19912.0], [28.5, 19912.0], [28.6, 19912.0], [28.7, 19912.0], [28.8, 19912.0], [28.9, 19912.0], [29.0, 19912.0], [29.1, 19912.0], [29.2, 19912.0], [29.3, 19912.0], [29.4, 19912.0], [29.5, 19912.0], [29.6, 19912.0], [29.7, 19912.0], [29.8, 19912.0], [29.9, 19912.0], [30.0, 19912.0], [30.1, 19912.0], [30.2, 19912.0], [30.3, 19912.0], [30.4, 19912.0], [30.5, 19912.0], [30.6, 19912.0], [30.7, 19912.0], [30.8, 19912.0], [30.9, 19912.0], [31.0, 19912.0], [31.1, 19912.0], [31.2, 19912.0], [31.3, 19912.0], [31.4, 19912.0], [31.5, 19912.0], [31.6, 19912.0], [31.7, 19912.0], [31.8, 19912.0], [31.9, 19912.0], [32.0, 19912.0], [32.1, 19912.0], [32.2, 19912.0], [32.3, 19912.0], [32.4, 19912.0], [32.5, 19912.0], [32.6, 19912.0], [32.7, 19912.0], [32.8, 19912.0], [32.9, 19912.0], [33.0, 19912.0], [33.1, 19912.0], [33.2, 19912.0], [33.3, 19912.0], [33.4, 19912.0], [33.5, 19912.0], [33.6, 19912.0], [33.7, 19912.0], [33.8, 19912.0], [33.9, 19912.0], [34.0, 19912.0], [34.1, 19912.0], [34.2, 19912.0], [34.3, 19912.0], [34.4, 19912.0], [34.5, 19912.0], [34.6, 19912.0], [34.7, 19912.0], [34.8, 19912.0], [34.9, 19912.0], [35.0, 19912.0], [35.1, 19912.0], [35.2, 19912.0], [35.3, 19912.0], [35.4, 19912.0], [35.5, 19912.0], [35.6, 19912.0], [35.7, 19912.0], [35.8, 19912.0], [35.9, 19912.0], [36.0, 19912.0], [36.1, 19912.0], [36.2, 19912.0], [36.3, 19912.0], [36.4, 19912.0], [36.5, 19912.0], [36.6, 19912.0], [36.7, 19912.0], [36.8, 19912.0], [36.9, 19912.0], [37.0, 19912.0], [37.1, 19912.0], [37.2, 19912.0], [37.3, 19912.0], [37.4, 19912.0], [37.5, 19912.0], [37.6, 19912.0], [37.7, 19912.0], [37.8, 19912.0], [37.9, 19912.0], [38.0, 19912.0], [38.1, 19912.0], [38.2, 19912.0], [38.3, 19912.0], [38.4, 19912.0], [38.5, 19912.0], [38.6, 19912.0], [38.7, 19912.0], [38.8, 19912.0], [38.9, 19912.0], [39.0, 19912.0], [39.1, 19912.0], [39.2, 19912.0], [39.3, 19912.0], [39.4, 19912.0], [39.5, 19912.0], [39.6, 19912.0], [39.7, 19912.0], [39.8, 19912.0], [39.9, 19912.0], [40.0, 19912.0], [40.1, 19912.0], [40.2, 19912.0], [40.3, 19912.0], [40.4, 19912.0], [40.5, 19912.0], [40.6, 19912.0], [40.7, 19912.0], [40.8, 19912.0], [40.9, 19912.0], [41.0, 19912.0], [41.1, 19912.0], [41.2, 19912.0], [41.3, 19912.0], [41.4, 19912.0], [41.5, 19912.0], [41.6, 19912.0], [41.7, 19912.0], [41.8, 19912.0], [41.9, 19912.0], [42.0, 19912.0], [42.1, 19912.0], [42.2, 19912.0], [42.3, 19912.0], [42.4, 19912.0], [42.5, 19912.0], [42.6, 19912.0], [42.7, 19912.0], [42.8, 19912.0], [42.9, 19912.0], [43.0, 19912.0], [43.1, 19912.0], [43.2, 19912.0], [43.3, 19912.0], [43.4, 19912.0], [43.5, 19912.0], [43.6, 19912.0], [43.7, 19912.0], [43.8, 19912.0], [43.9, 19912.0], [44.0, 19912.0], [44.1, 19912.0], [44.2, 19912.0], [44.3, 19912.0], [44.4, 19912.0], [44.5, 19912.0], [44.6, 19912.0], [44.7, 19912.0], [44.8, 19912.0], [44.9, 19912.0], [45.0, 19912.0], [45.1, 19912.0], [45.2, 19912.0], [45.3, 19912.0], [45.4, 19912.0], [45.5, 19912.0], [45.6, 19912.0], [45.7, 19912.0], [45.8, 19912.0], [45.9, 19912.0], [46.0, 19912.0], [46.1, 19912.0], [46.2, 19912.0], [46.3, 19912.0], [46.4, 19912.0], [46.5, 19912.0], [46.6, 19912.0], [46.7, 19912.0], [46.8, 19912.0], [46.9, 19912.0], [47.0, 19912.0], [47.1, 19912.0], [47.2, 19912.0], [47.3, 19912.0], [47.4, 19912.0], [47.5, 19912.0], [47.6, 19912.0], [47.7, 19912.0], [47.8, 19912.0], [47.9, 19912.0], [48.0, 19912.0], [48.1, 19912.0], [48.2, 19912.0], [48.3, 19912.0], [48.4, 19912.0], [48.5, 19912.0], [48.6, 19912.0], [48.7, 19912.0], [48.8, 19912.0], [48.9, 19912.0], [49.0, 19912.0], [49.1, 19912.0], [49.2, 19912.0], [49.3, 19912.0], [49.4, 19912.0], [49.5, 19912.0], [49.6, 19912.0], [49.7, 19912.0], [49.8, 19912.0], [49.9, 19912.0], [50.0, 19912.0], [50.1, 19912.0], [50.2, 19912.0], [50.3, 19912.0], [50.4, 19912.0], [50.5, 19912.0], [50.6, 19912.0], [50.7, 19912.0], [50.8, 19912.0], [50.9, 19912.0], [51.0, 19912.0], [51.1, 19912.0], [51.2, 19912.0], [51.3, 19912.0], [51.4, 19912.0], [51.5, 19912.0], [51.6, 19912.0], [51.7, 19912.0], [51.8, 19912.0], [51.9, 19912.0], [52.0, 19912.0], [52.1, 19912.0], [52.2, 19912.0], [52.3, 19912.0], [52.4, 19912.0], [52.5, 19912.0], [52.6, 19912.0], [52.7, 19912.0], [52.8, 19912.0], [52.9, 19912.0], [53.0, 19912.0], [53.1, 19912.0], [53.2, 19912.0], [53.3, 19912.0], [53.4, 19912.0], [53.5, 19912.0], [53.6, 19912.0], [53.7, 19912.0], [53.8, 19912.0], [53.9, 19912.0], [54.0, 19912.0], [54.1, 19912.0], [54.2, 19912.0], [54.3, 19912.0], [54.4, 19912.0], [54.5, 19912.0], [54.6, 19912.0], [54.7, 19912.0], [54.8, 19912.0], [54.9, 19912.0], [55.0, 19912.0], [55.1, 19912.0], [55.2, 19912.0], [55.3, 19912.0], [55.4, 19912.0], [55.5, 19912.0], [55.6, 19912.0], [55.7, 19912.0], [55.8, 19912.0], [55.9, 19912.0], [56.0, 19912.0], [56.1, 19912.0], [56.2, 19912.0], [56.3, 19912.0], [56.4, 19912.0], [56.5, 19912.0], [56.6, 19912.0], [56.7, 19912.0], [56.8, 19912.0], [56.9, 19912.0], [57.0, 19912.0], [57.1, 19912.0], [57.2, 19912.0], [57.3, 19912.0], [57.4, 19912.0], [57.5, 19912.0], [57.6, 19912.0], [57.7, 19912.0], [57.8, 19912.0], [57.9, 19912.0], [58.0, 19912.0], [58.1, 19912.0], [58.2, 19912.0], [58.3, 19912.0], [58.4, 19912.0], [58.5, 19912.0], [58.6, 19912.0], [58.7, 19912.0], [58.8, 19912.0], [58.9, 19912.0], [59.0, 19912.0], [59.1, 19912.0], [59.2, 19912.0], [59.3, 19912.0], [59.4, 19912.0], [59.5, 19912.0], [59.6, 19912.0], [59.7, 19912.0], [59.8, 19912.0], [59.9, 19912.0], [60.0, 19912.0], [60.1, 19912.0], [60.2, 19912.0], [60.3, 19912.0], [60.4, 19912.0], [60.5, 19912.0], [60.6, 19912.0], [60.7, 19912.0], [60.8, 19912.0], [60.9, 19912.0], [61.0, 19912.0], [61.1, 19912.0], [61.2, 19912.0], [61.3, 19912.0], [61.4, 19912.0], [61.5, 19912.0], [61.6, 19912.0], [61.7, 19912.0], [61.8, 19912.0], [61.9, 19912.0], [62.0, 19912.0], [62.1, 19912.0], [62.2, 19912.0], [62.3, 19912.0], [62.4, 19912.0], [62.5, 19912.0], [62.6, 19912.0], [62.7, 19912.0], [62.8, 19912.0], [62.9, 19912.0], [63.0, 19912.0], [63.1, 19912.0], [63.2, 19912.0], [63.3, 19912.0], [63.4, 19912.0], [63.5, 19912.0], [63.6, 19912.0], [63.7, 19912.0], [63.8, 19912.0], [63.9, 19912.0], [64.0, 19912.0], [64.1, 19912.0], [64.2, 19912.0], [64.3, 19912.0], [64.4, 19912.0], [64.5, 19912.0], [64.6, 19912.0], [64.7, 19912.0], [64.8, 19912.0], [64.9, 19912.0], [65.0, 19912.0], [65.1, 19912.0], [65.2, 19912.0], [65.3, 19912.0], [65.4, 19912.0], [65.5, 19912.0], [65.6, 19912.0], [65.7, 19912.0], [65.8, 19912.0], [65.9, 19912.0], [66.0, 19912.0], [66.1, 19912.0], [66.2, 19912.0], [66.3, 19912.0], [66.4, 19912.0], [66.5, 19912.0], [66.6, 19912.0], [66.7, 19912.0], [66.8, 19912.0], [66.9, 19912.0], [67.0, 19912.0], [67.1, 19912.0], [67.2, 19912.0], [67.3, 19912.0], [67.4, 19912.0], [67.5, 19912.0], [67.6, 19912.0], [67.7, 19912.0], [67.8, 19912.0], [67.9, 19912.0], [68.0, 19912.0], [68.1, 19912.0], [68.2, 19912.0], [68.3, 19912.0], [68.4, 19912.0], [68.5, 19912.0], [68.6, 19912.0], [68.7, 19912.0], [68.8, 19912.0], [68.9, 19912.0], [69.0, 19912.0], [69.1, 19912.0], [69.2, 19912.0], [69.3, 19912.0], [69.4, 19912.0], [69.5, 19912.0], [69.6, 19912.0], [69.7, 19912.0], [69.8, 19912.0], [69.9, 19912.0], [70.0, 19912.0], [70.1, 19912.0], [70.2, 19912.0], [70.3, 19912.0], [70.4, 19912.0], [70.5, 19912.0], [70.6, 19912.0], [70.7, 19912.0], [70.8, 19912.0], [70.9, 19912.0], [71.0, 19912.0], [71.1, 19912.0], [71.2, 19912.0], [71.3, 19912.0], [71.4, 19912.0], [71.5, 19912.0], [71.6, 19912.0], [71.7, 19912.0], [71.8, 19912.0], [71.9, 19912.0], [72.0, 19912.0], [72.1, 19912.0], [72.2, 19912.0], [72.3, 19912.0], [72.4, 19912.0], [72.5, 19912.0], [72.6, 19912.0], [72.7, 19912.0], [72.8, 19912.0], [72.9, 19912.0], [73.0, 19912.0], [73.1, 19912.0], [73.2, 19912.0], [73.3, 19912.0], [73.4, 19912.0], [73.5, 19912.0], [73.6, 19912.0], [73.7, 19912.0], [73.8, 19912.0], [73.9, 19912.0], [74.0, 19912.0], [74.1, 19912.0], [74.2, 19912.0], [74.3, 19912.0], [74.4, 19912.0], [74.5, 19912.0], [74.6, 19912.0], [74.7, 19912.0], [74.8, 19912.0], [74.9, 19912.0], [75.0, 19912.0], [75.1, 19912.0], [75.2, 19912.0], [75.3, 19912.0], [75.4, 19912.0], [75.5, 19912.0], [75.6, 19912.0], [75.7, 19912.0], [75.8, 19912.0], [75.9, 19912.0], [76.0, 19912.0], [76.1, 19912.0], [76.2, 19912.0], [76.3, 19912.0], [76.4, 19912.0], [76.5, 19912.0], [76.6, 19912.0], [76.7, 19912.0], [76.8, 19912.0], [76.9, 19912.0], [77.0, 19912.0], [77.1, 19912.0], [77.2, 19912.0], [77.3, 19912.0], [77.4, 19912.0], [77.5, 19912.0], [77.6, 19912.0], [77.7, 19912.0], [77.8, 19912.0], [77.9, 19912.0], [78.0, 19912.0], [78.1, 19912.0], [78.2, 19912.0], [78.3, 19912.0], [78.4, 19912.0], [78.5, 19912.0], [78.6, 19912.0], [78.7, 19912.0], [78.8, 19912.0], [78.9, 19912.0], [79.0, 19912.0], [79.1, 19912.0], [79.2, 19912.0], [79.3, 19912.0], [79.4, 19912.0], [79.5, 19912.0], [79.6, 19912.0], [79.7, 19912.0], [79.8, 19912.0], [79.9, 19912.0], [80.0, 19912.0], [80.1, 19912.0], [80.2, 19912.0], [80.3, 19912.0], [80.4, 19912.0], [80.5, 19912.0], [80.6, 19912.0], [80.7, 19912.0], [80.8, 19912.0], [80.9, 19912.0], [81.0, 19912.0], [81.1, 19912.0], [81.2, 19912.0], [81.3, 19912.0], [81.4, 19912.0], [81.5, 19912.0], [81.6, 19912.0], [81.7, 19912.0], [81.8, 19912.0], [81.9, 19912.0], [82.0, 19912.0], [82.1, 19912.0], [82.2, 19912.0], [82.3, 19912.0], [82.4, 19912.0], [82.5, 19912.0], [82.6, 19912.0], [82.7, 19912.0], [82.8, 19912.0], [82.9, 19912.0], [83.0, 19912.0], [83.1, 19912.0], [83.2, 19912.0], [83.3, 19912.0], [83.4, 19912.0], [83.5, 19912.0], [83.6, 19912.0], [83.7, 19912.0], [83.8, 19912.0], [83.9, 19912.0], [84.0, 19912.0], [84.1, 19912.0], [84.2, 19912.0], [84.3, 19912.0], [84.4, 19912.0], [84.5, 19912.0], [84.6, 19912.0], [84.7, 19912.0], [84.8, 19912.0], [84.9, 19912.0], [85.0, 19912.0], [85.1, 19912.0], [85.2, 19912.0], [85.3, 19912.0], [85.4, 19912.0], [85.5, 19912.0], [85.6, 19912.0], [85.7, 19912.0], [85.8, 19912.0], [85.9, 19912.0], [86.0, 19912.0], [86.1, 19912.0], [86.2, 19912.0], [86.3, 19912.0], [86.4, 19912.0], [86.5, 19912.0], [86.6, 19912.0], [86.7, 19912.0], [86.8, 19912.0], [86.9, 19912.0], [87.0, 19912.0], [87.1, 19912.0], [87.2, 19912.0], [87.3, 19912.0], [87.4, 19912.0], [87.5, 19912.0], [87.6, 19912.0], [87.7, 19912.0], [87.8, 19912.0], [87.9, 19912.0], [88.0, 19912.0], [88.1, 19912.0], [88.2, 19912.0], [88.3, 19912.0], [88.4, 19912.0], [88.5, 19912.0], [88.6, 19912.0], [88.7, 19912.0], [88.8, 19912.0], [88.9, 19912.0], [89.0, 19912.0], [89.1, 19912.0], [89.2, 19912.0], [89.3, 19912.0], [89.4, 19912.0], [89.5, 19912.0], [89.6, 19912.0], [89.7, 19912.0], [89.8, 19912.0], [89.9, 19912.0], [90.0, 19912.0], [90.1, 19912.0], [90.2, 19912.0], [90.3, 19912.0], [90.4, 19912.0], [90.5, 19912.0], [90.6, 19912.0], [90.7, 19912.0], [90.8, 19912.0], [90.9, 19912.0], [91.0, 19912.0], [91.1, 19912.0], [91.2, 19912.0], [91.3, 19912.0], [91.4, 19912.0], [91.5, 19912.0], [91.6, 19912.0], [91.7, 19912.0], [91.8, 19912.0], [91.9, 19912.0], [92.0, 19912.0], [92.1, 19912.0], [92.2, 19912.0], [92.3, 19912.0], [92.4, 19912.0], [92.5, 19912.0], [92.6, 19912.0], [92.7, 19912.0], [92.8, 19912.0], [92.9, 19912.0], [93.0, 19912.0], [93.1, 19912.0], [93.2, 19912.0], [93.3, 19912.0], [93.4, 19912.0], [93.5, 19912.0], [93.6, 19912.0], [93.7, 19912.0], [93.8, 19912.0], [93.9, 19912.0], [94.0, 19912.0], [94.1, 19912.0], [94.2, 19912.0], [94.3, 19912.0], [94.4, 19912.0], [94.5, 19912.0], [94.6, 19912.0], [94.7, 19912.0], [94.8, 19912.0], [94.9, 19912.0], [95.0, 19912.0], [95.1, 19912.0], [95.2, 19912.0], [95.3, 19912.0], [95.4, 19912.0], [95.5, 19912.0], [95.6, 19912.0], [95.7, 19912.0], [95.8, 19912.0], [95.9, 19912.0], [96.0, 19912.0], [96.1, 19912.0], [96.2, 19912.0], [96.3, 19912.0], [96.4, 19912.0], [96.5, 19912.0], [96.6, 19912.0], [96.7, 19912.0], [96.8, 19912.0], [96.9, 19912.0], [97.0, 19912.0], [97.1, 19912.0], [97.2, 19912.0], [97.3, 19912.0], [97.4, 19912.0], [97.5, 19912.0], [97.6, 19912.0], [97.7, 19912.0], [97.8, 19912.0], [97.9, 19912.0], [98.0, 19912.0], [98.1, 19912.0], [98.2, 19912.0], [98.3, 19912.0], [98.4, 19912.0], [98.5, 19912.0], [98.6, 19912.0], [98.7, 19912.0], [98.8, 19912.0], [98.9, 19912.0], [99.0, 19912.0], [99.1, 19912.0], [99.2, 19912.0], [99.3, 19912.0], [99.4, 19912.0], [99.5, 19912.0], [99.6, 19912.0], [99.7, 19912.0], [99.8, 19912.0], [99.9, 19912.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 600.0, "maxY": 246.0, "series": [{"data": [[600.0, 1.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[32900.0, 6.0], [33300.0, 11.0], [33700.0, 4.0], [34100.0, 1.0], [34500.0, 1.0], [1500.0, 1.0], [3200.0, 1.0], [3400.0, 2.0], [3600.0, 1.0], [3900.0, 1.0], [4300.0, 1.0], [4100.0, 2.0], [4500.0, 3.0], [4600.0, 1.0], [4400.0, 1.0], [4700.0, 2.0], [5100.0, 1.0], [5000.0, 3.0], [4900.0, 1.0], [5200.0, 2.0], [5300.0, 1.0], [5400.0, 3.0], [5500.0, 1.0], [5700.0, 5.0], [5800.0, 2.0], [6100.0, 5.0], [6000.0, 3.0], [5900.0, 2.0], [6300.0, 2.0], [6200.0, 2.0], [6500.0, 10.0], [6600.0, 8.0], [6400.0, 5.0], [6800.0, 5.0], [6900.0, 7.0], [6700.0, 6.0], [7100.0, 6.0], [7000.0, 9.0], [7200.0, 10.0], [7400.0, 6.0], [7300.0, 7.0], [7500.0, 12.0], [7600.0, 11.0], [7700.0, 9.0], [7800.0, 11.0], [7900.0, 4.0], [8100.0, 11.0], [8000.0, 11.0], [8600.0, 11.0], [8200.0, 9.0], [8300.0, 12.0], [8400.0, 11.0], [8500.0, 11.0], [8700.0, 7.0], [8800.0, 10.0], [9000.0, 14.0], [9100.0, 13.0], [9200.0, 9.0], [8900.0, 15.0], [9300.0, 8.0], [9500.0, 8.0], [9700.0, 10.0], [9600.0, 4.0], [9400.0, 8.0], [9800.0, 5.0], [9900.0, 13.0], [10000.0, 9.0], [10200.0, 7.0], [10100.0, 2.0], [10300.0, 7.0], [10400.0, 7.0], [10700.0, 6.0], [10500.0, 7.0], [10600.0, 5.0], [10900.0, 4.0], [10800.0, 5.0], [11200.0, 9.0], [11100.0, 3.0], [11000.0, 3.0], [11500.0, 9.0], [11300.0, 6.0], [11600.0, 8.0], [11400.0, 8.0], [11700.0, 11.0], [12200.0, 33.0], [12100.0, 18.0], [12000.0, 12.0], [11900.0, 9.0], [11800.0, 7.0], [12600.0, 64.0], [12700.0, 83.0], [12400.0, 56.0], [12500.0, 55.0], [12300.0, 36.0], [12800.0, 96.0], [12900.0, 114.0], [13100.0, 148.0], [13200.0, 223.0], [13300.0, 190.0], [13000.0, 110.0], [13500.0, 246.0], [13600.0, 194.0], [13400.0, 142.0], [13800.0, 165.0], [13700.0, 187.0], [14000.0, 163.0], [14100.0, 121.0], [13900.0, 186.0], [14300.0, 134.0], [14200.0, 105.0], [14400.0, 121.0], [14600.0, 116.0], [14500.0, 122.0], [14700.0, 133.0], [14800.0, 110.0], [14900.0, 90.0], [15000.0, 101.0], [15100.0, 96.0], [15300.0, 46.0], [15200.0, 60.0], [15500.0, 22.0], [15700.0, 7.0], [15800.0, 8.0], [15400.0, 26.0], [15600.0, 7.0], [16200.0, 1.0], [16000.0, 3.0], [15900.0, 4.0], [16100.0, 1.0], [16300.0, 1.0], [16600.0, 5.0], [17200.0, 3.0], [16800.0, 4.0], [17400.0, 1.0], [16400.0, 1.0], [17800.0, 1.0], [18400.0, 1.0], [17600.0, 2.0], [18600.0, 1.0], [25400.0, 2.0], [26400.0, 5.0], [25800.0, 3.0], [26000.0, 4.0], [26200.0, 2.0], [26600.0, 2.0], [25600.0, 1.0], [27400.0, 3.0], [26800.0, 3.0], [27000.0, 3.0], [27600.0, 3.0], [27200.0, 1.0], [27800.0, 2.0], [28200.0, 8.0], [28400.0, 11.0], [28000.0, 4.0], [28600.0, 6.0], [28800.0, 7.0], [29000.0, 8.0], [29400.0, 3.0], [29200.0, 17.0], [29600.0, 11.0], [29800.0, 7.0], [30000.0, 6.0], [30200.0, 12.0], [30400.0, 10.0], [30600.0, 5.0], [31200.0, 9.0], [30800.0, 6.0], [31000.0, 7.0], [31400.0, 3.0], [31600.0, 3.0], [32200.0, 9.0], [32000.0, 5.0], [32400.0, 6.0], [31800.0, 1.0], [32600.0, 5.0], [32800.0, 6.0], [33200.0, 5.0], [33600.0, 1.0], [34400.0, 1.0], [33100.0, 5.0], [33500.0, 4.0], [33900.0, 1.0], [16500.0, 4.0], [16700.0, 2.0], [17100.0, 1.0], [17300.0, 2.0], [17500.0, 1.0], [17900.0, 1.0], [17700.0, 2.0], [18100.0, 2.0], [19500.0, 1.0], [20700.0, 1.0], [21500.0, 1.0], [24700.0, 1.0], [25500.0, 4.0], [25700.0, 3.0], [25900.0, 1.0], [26300.0, 2.0], [26500.0, 5.0], [26100.0, 1.0], [26700.0, 5.0], [26900.0, 4.0], [27100.0, 4.0], [27300.0, 1.0], [27500.0, 2.0], [27900.0, 3.0], [27700.0, 7.0], [28100.0, 9.0], [28300.0, 12.0], [28500.0, 12.0], [29500.0, 14.0], [28700.0, 10.0], [28900.0, 9.0], [29100.0, 10.0], [29300.0, 12.0], [29900.0, 18.0], [29700.0, 11.0], [30100.0, 10.0], [30300.0, 10.0], [30500.0, 8.0], [30700.0, 6.0], [30900.0, 9.0], [31100.0, 8.0], [31700.0, 3.0], [31300.0, 6.0], [31500.0, 2.0], [31900.0, 6.0], [32700.0, 5.0], [32500.0, 3.0], [32300.0, 5.0], [33000.0, 7.0], [33400.0, 2.0], [33800.0, 1.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[58800.0, 1.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[33300.0, 1.0], [35500.0, 1.0], [37500.0, 1.0], [8700.0, 2.0], [8200.0, 1.0], [9200.0, 1.0], [9000.0, 1.0], [9300.0, 1.0], [9800.0, 1.0], [10500.0, 1.0], [11200.0, 1.0], [11600.0, 1.0], [11400.0, 2.0], [11500.0, 1.0], [12200.0, 1.0], [12700.0, 1.0], [12500.0, 1.0], [12800.0, 2.0], [13200.0, 3.0], [12900.0, 2.0], [13300.0, 1.0], [13100.0, 2.0], [13000.0, 1.0], [13500.0, 3.0], [13400.0, 1.0], [13700.0, 1.0], [13800.0, 1.0], [13600.0, 1.0], [14000.0, 1.0], [14200.0, 1.0], [14100.0, 1.0], [14500.0, 1.0], [14600.0, 3.0], [14700.0, 1.0], [14400.0, 1.0], [15200.0, 2.0], [15300.0, 3.0], [15000.0, 1.0], [15100.0, 1.0], [15400.0, 4.0], [15800.0, 2.0], [15600.0, 1.0], [15500.0, 2.0], [15700.0, 1.0], [16200.0, 1.0], [15900.0, 2.0], [16300.0, 2.0], [16000.0, 5.0], [16100.0, 5.0], [17200.0, 2.0], [16700.0, 3.0], [16800.0, 3.0], [17000.0, 1.0], [16900.0, 1.0], [17400.0, 6.0], [17300.0, 3.0], [16500.0, 2.0], [16600.0, 1.0], [17100.0, 7.0], [16400.0, 1.0], [18300.0, 2.0], [17500.0, 4.0], [17600.0, 4.0], [18100.0, 3.0], [17700.0, 1.0], [18400.0, 2.0], [17900.0, 4.0], [18000.0, 3.0], [19000.0, 3.0], [18800.0, 3.0], [19400.0, 1.0], [18900.0, 1.0], [19300.0, 2.0], [18700.0, 1.0], [18600.0, 1.0], [18500.0, 1.0], [19500.0, 3.0], [19700.0, 2.0], [20400.0, 2.0], [20300.0, 1.0], [19800.0, 1.0], [19600.0, 1.0], [21300.0, 4.0], [20600.0, 1.0], [20900.0, 3.0], [21500.0, 4.0], [20700.0, 3.0], [21000.0, 1.0], [21400.0, 1.0], [21200.0, 2.0], [21100.0, 2.0], [22400.0, 2.0], [21600.0, 5.0], [22300.0, 3.0], [21700.0, 2.0], [22000.0, 5.0], [21900.0, 5.0], [22200.0, 1.0], [22100.0, 6.0], [22500.0, 3.0], [21800.0, 2.0], [23300.0, 4.0], [22600.0, 3.0], [23000.0, 3.0], [22900.0, 3.0], [23500.0, 2.0], [22700.0, 2.0], [22800.0, 2.0], [23400.0, 1.0], [23100.0, 1.0], [23200.0, 1.0], [24000.0, 5.0], [23900.0, 2.0], [24400.0, 2.0], [24100.0, 1.0], [23600.0, 2.0], [23700.0, 2.0], [24200.0, 1.0], [24500.0, 2.0], [25200.0, 1.0], [25100.0, 2.0], [25000.0, 1.0], [24800.0, 1.0], [24700.0, 1.0], [24600.0, 1.0], [26500.0, 2.0], [25700.0, 1.0], [27300.0, 1.0], [27600.0, 1.0], [26700.0, 3.0], [27000.0, 1.0], [28300.0, 1.0], [27700.0, 1.0], [28600.0, 1.0], [28500.0, 3.0], [29000.0, 1.0], [28900.0, 2.0], [29300.0, 1.0], [29900.0, 1.0], [29800.0, 1.0], [30000.0, 2.0], [30500.0, 1.0], [30100.0, 1.0], [31200.0, 2.0], [31000.0, 2.0], [31300.0, 2.0], [31400.0, 2.0], [31500.0, 1.0], [32600.0, 2.0], [31900.0, 1.0], [32200.0, 2.0], [31800.0, 1.0], [32100.0, 2.0], [32800.0, 1.0], [36400.0, 1.0], [35200.0, 1.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[19900.0, 1.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 58800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 5302.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 5302.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68528822E12, "maxY": 500.0, "series": [{"data": [[1.68528846E12, 1.0]], "isOverall": false, "label": "tearDown consumers", "isController": false}, {"data": [[1.6852884E12, 500.0], [1.68528846E12, 379.4522058823531], [1.68528834E12, 500.0]], "isOverall": false, "label": "Producers", "isController": false}, {"data": [[1.68528828E12, 300.0], [1.68528834E12, 236.14527027027023]], "isOverall": false, "label": "Consumers", "isController": false}, {"data": [[1.68528822E12, 1.0]], "isOverall": false, "label": "setUp", "isController": false}, {"data": [[1.68528828E12, 1.0]], "isOverall": false, "label": "setUp consumers", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68528846E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 689.0, "minX": 1.0, "maxY": 58889.0, "series": [{"data": [[2.0, 689.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[2.0, 689.0]], "isOverall": false, "label": "create message-Aggregated", "isController": false}, {"data": [[2.0, 4168.0], [3.0, 7055.0], [4.0, 8340.0], [5.0, 7002.0], [6.0, 5077.0], [7.0, 8139.0], [8.0, 4112.0], [9.0, 3621.0], [10.0, 6192.0], [11.0, 8207.0], [12.0, 7515.0], [13.0, 7580.0], [14.0, 6919.0], [15.0, 8572.0], [16.0, 6915.0], [17.0, 8531.0], [18.0, 8639.0], [19.0, 7521.0], [20.0, 7519.0], [21.0, 6909.0], [22.0, 5834.0], [23.0, 4732.0], [24.0, 5968.0], [25.0, 6001.0], [26.0, 4913.0], [27.0, 4415.0], [28.0, 5019.0], [29.0, 7135.0], [30.0, 3221.0], [31.0, 7578.0], [33.0, 8051.0], [32.0, 5705.0], [35.0, 1594.0], [34.0, 5704.0], [37.0, 7544.5], [39.0, 6711.0], [38.0, 6713.0], [41.0, 6216.0], [42.0, 9039.0], [45.0, 6632.0], [44.0, 5938.0], [47.0, 6634.0], [46.0, 3425.0], [49.0, 3424.0], [48.0, 8505.0], [51.0, 4708.0], [50.0, 6584.0], [53.0, 3938.0], [52.0, 9314.0], [55.0, 6147.0], [54.0, 5781.0], [57.0, 4666.0], [56.0, 8813.0], [59.0, 6538.0], [58.0, 7665.0], [61.0, 7944.0], [60.0, 6537.0], [63.0, 5513.0], [62.0, 8532.0], [67.0, 6512.0], [65.0, 6518.0], [64.0, 8026.0], [71.0, 5421.0], [70.0, 7577.0], [69.0, 7138.0], [68.0, 7227.0], [74.0, 6428.0], [73.0, 9457.0], [72.0, 8045.0], [79.0, 6460.0], [78.0, 8046.0], [77.0, 6731.0], [76.0, 7405.5], [83.0, 6643.0], [82.0, 4571.0], [81.0, 6427.0], [80.0, 5453.0], [87.0, 4500.0], [86.0, 4566.0], [85.0, 5358.0], [91.0, 7369.0], [90.0, 8253.5], [88.0, 7485.0], [95.0, 7747.0], [94.0, 5718.0], [92.0, 4323.0], [98.0, 6136.0], [97.0, 7787.0], [96.0, 7315.0], [103.0, 7718.0], [102.0, 6135.0], [101.0, 8485.0], [100.0, 6963.0], [107.0, 8801.0], [106.0, 7267.0], [105.0, 7575.0], [104.0, 7676.0], [111.0, 7825.0], [110.0, 8116.0], [109.0, 8438.0], [108.0, 8602.0], [115.0, 8618.0], [114.0, 8332.0], [113.0, 8335.0], [112.0, 8592.0], [119.0, 8177.0], [118.0, 8249.0], [117.0, 8249.0], [116.0, 7874.0], [122.0, 7798.0], [121.0, 8895.0], [120.0, 8384.0], [127.0, 9077.0], [126.0, 7141.0], [125.0, 5995.0], [124.0, 7117.5], [135.0, 8955.0], [134.0, 8626.0], [133.0, 8401.0], [132.0, 8667.0], [131.0, 8685.0], [130.0, 7550.0], [129.0, 5157.0], [128.0, 8219.0], [143.0, 8712.0], [142.0, 8092.0], [141.0, 8588.0], [139.0, 8109.0], [138.0, 8784.0], [137.0, 8956.0], [136.0, 8151.0], [151.0, 8807.5], [149.0, 8368.0], [148.0, 9174.0], [147.0, 9294.0], [146.0, 9161.0], [145.0, 8707.0], [144.0, 8340.0], [159.0, 8334.0], [158.0, 9286.0], [157.0, 8525.0], [156.0, 8456.0], [155.0, 9056.0], [154.0, 8776.0], [152.0, 8892.0], [167.0, 8815.0], [166.0, 8919.0], [165.0, 8779.5], [163.0, 8933.0], [162.0, 8674.0], [161.0, 9579.0], [160.0, 8706.0], [175.0, 9449.0], [174.0, 8744.0], [173.0, 8617.0], [172.0, 9510.0], [171.0, 8937.0], [170.0, 9019.0], [169.0, 8733.0], [168.0, 8409.0], [183.0, 8127.0], [182.0, 8449.0], [181.0, 8240.0], [180.0, 9180.0], [179.0, 8634.5], [177.0, 8971.0], [176.0, 8867.0], [190.0, 8705.0], [189.0, 8583.0], [188.0, 7937.0], [187.0, 8525.0], [186.0, 8285.0], [185.0, 9078.0], [184.0, 8207.0], [199.0, 9149.0], [198.0, 12214.0], [196.0, 8183.0], [195.0, 8453.0], [194.0, 9195.0], [193.0, 8931.0], [192.0, 9096.0], [207.0, 9682.0], [206.0, 8924.0], [205.0, 8928.0], [204.0, 9120.0], [203.0, 9017.0], [202.0, 9126.0], [201.0, 8590.0], [200.0, 8953.0], [215.0, 12114.0], [214.0, 9045.0], [213.0, 8909.0], [212.0, 9123.0], [211.0, 9357.0], [210.0, 9371.0], [209.0, 9231.0], [208.0, 9149.0], [223.0, 9574.0], [222.0, 8809.0], [221.0, 9576.0], [220.0, 9057.0], [219.0, 9355.0], [218.0, 9095.0], [217.0, 9480.0], [216.0, 9212.0], [231.0, 9422.0], [230.0, 9372.0], [229.0, 9153.0], [228.0, 10093.0], [227.0, 9553.0], [226.0, 9430.0], [225.0, 9105.0], [224.0, 9431.0], [239.0, 9761.0], [238.0, 9502.0], [237.0, 10617.0], [236.0, 9787.0], [235.0, 9912.0], [234.0, 9520.0], [233.0, 9375.0], [232.0, 9668.0], [247.0, 9508.5], [245.0, 9713.0], [244.0, 10006.0], [243.0, 9443.0], [242.0, 9669.0], [241.0, 9896.5], [255.0, 10869.0], [254.0, 9799.0], [253.0, 9206.0], [252.0, 10115.0], [251.0, 8913.5], [249.0, 10237.0], [248.0, 9700.0], [270.0, 9233.0], [271.0, 10300.0], [269.0, 10370.0], [268.0, 9686.0], [266.0, 10410.0], [265.0, 9941.0], [264.0, 9421.0], [263.0, 10250.0], [257.0, 10057.0], [256.0, 9795.0], [259.0, 9951.0], [258.0, 9907.0], [262.0, 9856.0], [261.0, 10252.0], [260.0, 10352.0], [285.0, 10381.0], [286.0, 11009.0], [284.0, 10306.0], [274.0, 9855.0], [273.0, 10155.5], [283.0, 9781.0], [282.0, 10505.0], [281.0, 9912.0], [280.0, 10416.0], [278.0, 10525.0], [277.0, 11226.0], [276.0, 10201.5], [302.0, 11215.0], [303.0, 10688.0], [301.0, 10007.0], [300.0, 10713.0], [299.0, 18196.0], [298.0, 17652.0], [297.0, 10593.0], [296.0, 10409.0], [295.0, 11001.0], [289.0, 9996.0], [288.0, 10508.0], [291.0, 10505.0], [290.0, 9677.0], [294.0, 18157.0], [293.0, 10585.0], [292.0, 10900.0], [318.0, 11213.0], [319.0, 11604.0], [317.0, 11212.0], [316.0, 11604.0], [315.0, 10564.5], [313.0, 11115.0], [312.0, 10495.0], [311.0, 9817.0], [305.0, 10813.0], [304.0, 10814.0], [307.0, 10701.0], [306.0, 9206.0], [310.0, 10965.0], [309.0, 17736.0], [308.0, 13990.5], [334.0, 11305.0], [335.0, 15082.0], [333.0, 16604.0], [332.0, 15019.666666666666], [331.0, 10903.0], [330.0, 12637.666666666666], [328.0, 10503.0], [327.0, 10401.0], [321.0, 10309.0], [320.0, 16332.0], [323.0, 10603.0], [322.0, 11412.0], [326.0, 10602.0], [325.0, 11499.0], [324.0, 11283.0], [350.0, 15395.0], [351.0, 12216.0], [349.0, 10712.0], [348.0, 17361.0], [347.0, 15298.0], [346.0, 17345.0], [345.0, 11419.0], [344.0, 11866.0], [343.0, 14055.0], [336.0, 13409.0], [339.0, 13080.0], [337.0, 11300.0], [342.0, 11519.0], [341.0, 10619.0], [340.0, 11786.0], [366.0, 12514.0], [367.0, 11878.0], [365.0, 12213.0], [364.0, 14098.0], [363.0, 11434.0], [362.0, 13233.0], [361.0, 15057.0], [360.0, 11540.0], [359.0, 11508.0], [353.0, 15919.0], [352.0, 11182.0], [355.0, 11784.0], [354.0, 12188.0], [358.0, 11751.0], [357.0, 13212.0], [356.0, 11784.0], [382.0, 12516.5], [383.0, 12573.0], [380.0, 8330.0], [371.0, 11283.0], [370.0, 12431.0], [369.0, 12901.0], [368.0, 14606.0], [379.0, 12435.0], [378.0, 11633.0], [377.0, 15509.0], [375.0, 12487.0], [374.0, 11988.0], [373.0, 14524.5], [372.0, 12183.0], [398.0, 16843.0], [399.0, 15043.8], [397.0, 14558.0], [396.0, 14808.0], [395.0, 13795.5], [393.0, 14463.0], [392.0, 13146.0], [391.0, 15643.5], [385.0, 12255.0], [384.0, 16464.0], [387.0, 14896.0], [386.0, 12242.0], [390.0, 11519.0], [389.0, 13125.0], [388.0, 12747.0], [413.0, 15391.0], [414.0, 14962.0], [412.0, 13733.0], [403.0, 15184.0], [402.0, 14385.0], [401.0, 14726.0], [400.0, 14933.0], [411.0, 14110.0], [410.0, 13395.0], [409.0, 13738.0], [408.0, 14715.0], [407.0, 14841.5], [406.0, 13911.0], [405.0, 13871.0], [404.0, 13939.0], [430.0, 13860.5], [431.0, 14161.0], [429.0, 14434.0], [428.0, 14651.0], [427.0, 14107.0], [426.0, 14800.666666666666], [425.0, 13927.25], [424.0, 13647.0], [423.0, 14933.0], [417.0, 12985.0], [416.0, 14255.0], [419.0, 12878.0], [418.0, 14194.0], [422.0, 13275.0], [421.0, 14057.5], [420.0, 13217.0], [446.0, 14255.0], [447.0, 14314.5], [444.0, 14142.0], [435.0, 14465.5], [434.0, 14097.5], [433.0, 14367.0], [432.0, 14038.333333333334], [443.0, 13793.0], [442.0, 14276.666666666666], [441.0, 14508.0], [440.0, 13577.0], [439.0, 14062.0], [438.0, 14013.5], [437.0, 10957.5], [436.0, 13294.0], [462.0, 13623.333333333334], [463.0, 14131.5], [461.0, 14107.5], [460.0, 14374.333333333334], [459.0, 14068.0], [458.0, 14001.0], [457.0, 14276.57142857143], [456.0, 14314.75], [455.0, 14635.0], [449.0, 14255.0], [448.0, 13625.5], [451.0, 14643.5], [450.0, 14595.0], [454.0, 13909.0], [453.0, 14167.666666666666], [452.0, 14012.333333333334], [478.0, 13453.5], [479.0, 14093.5], [477.0, 13497.0], [476.0, 13518.0], [475.0, 14246.333333333334], [474.0, 13596.6], [473.0, 14161.0], [472.0, 14186.5], [471.0, 14402.0], [465.0, 14330.5], [464.0, 13970.0], [467.0, 13773.25], [466.0, 13884.5], [470.0, 13756.0], [469.0, 13663.0], [468.0, 13824.0], [494.0, 13377.0], [495.0, 13630.499999999996], [493.0, 13573.833333333332], [492.0, 13416.75], [491.0, 13586.0], [490.0, 13445.0], [489.0, 13371.0], [488.0, 13611.0], [487.0, 13558.5], [481.0, 14028.777777777777], [480.0, 13807.5], [483.0, 13794.833333333334], [482.0, 13913.5], [486.0, 13501.0], [485.0, 13897.333333333334], [484.0, 13287.0], [499.0, 13618.708333333332], [510.0, 14409.625], [511.0, 14784.0], [508.0, 14607.0], [506.0, 14566.333333333334], [504.0, 14604.0], [503.0, 14670.0], [502.0, 14913.5], [500.0, 13705.813029315954], [498.0, 13613.0], [497.0, 13393.777777777777], [496.0, 13583.764705882353], [538.0, 13353.666666666666], [543.0, 14282.0], [537.0, 13983.0], [536.0, 14437.0], [534.0, 15773.0], [532.0, 14304.0], [530.0, 14812.0], [528.0, 14290.142857142857], [527.0, 14920.25], [512.0, 14690.444444444445], [514.0, 14444.0], [513.0, 14261.0], [519.0, 14377.5], [518.0, 14752.75], [525.0, 14726.571428571428], [524.0, 14225.000000000002], [523.0, 14539.5], [522.0, 14616.0], [520.0, 14668.099999999999], [561.0, 15170.5], [572.0, 14068.0], [571.0, 14487.8], [569.0, 14268.0], [568.0, 14142.333333333334], [558.0, 15344.0], [545.0, 13930.333333333334], [549.0, 16001.0], [547.0, 14055.0], [556.0, 14780.5], [553.0, 14164.5], [567.0, 14581.0], [566.0, 13705.5], [565.0, 14171.0], [560.0, 14554.0], [601.0, 15082.615384615383], [595.0, 14951.4], [605.0, 14610.333333333334], [604.0, 14909.000000000002], [603.0, 14920.61111111111], [591.0, 15018.166666666668], [576.0, 14303.875], [580.0, 13908.666666666666], [579.0, 13372.0], [582.0, 15047.857142857143], [581.0, 14545.666666666666], [590.0, 14990.25], [589.0, 15145.777777777776], [588.0, 15006.0], [586.0, 14795.322580645161], [585.0, 14957.048387096775], [584.0, 14912.208333333334], [599.0, 15059.083333333334], [598.0, 15048.666666666666], [597.0, 14899.42857142857], [594.0, 15006.777777777777], [593.0, 14684.363636363636], [638.0, 14734.0], [620.0, 14550.0], [619.0, 14629.785714285714], [612.0, 15053.0], [611.0, 14922.846153846152], [608.0, 14974.884615384615], [671.0, 14251.571428571428], [655.0, 14344.375], [650.0, 14400.0], [646.0, 14257.0], [645.0, 14528.0], [703.0, 13754.0], [701.0, 13912.833333333334], [692.0, 13924.0], [690.0, 13855.0], [688.0, 13969.5], [687.0, 14139.666666666666], [676.0, 14074.0], [730.0, 12890.0], [733.0, 12882.25], [729.0, 12984.5], [725.0, 12902.0], [722.0, 13191.0], [720.0, 13286.0], [718.0, 13195.0], [714.0, 13313.75], [711.0, 14046.0], [710.0, 13490.5], [707.0, 13695.0], [706.0, 13669.0], [765.0, 10412.0], [763.0, 10680.5], [761.0, 10912.5], [760.0, 11433.166666666668], [756.0, 12238.0], [752.0, 12191.666666666666], [738.0, 12691.0], [788.0, 32636.0], [795.0, 27988.0], [793.0, 27417.714285714286], [773.0, 9900.0], [771.0, 10087.0], [769.0, 10333.0], [791.0, 29404.298305084725], [790.0, 31397.104166666668], [789.0, 27159.5], [787.0, 29410.679999999997], [785.0, 28428.0], [784.0, 19710.405405405407], [783.0, 12271.395348837206], [782.0, 7576.705882352942], [780.0, 8031.0], [779.0, 8461.142857142857], [778.0, 9080.4], [776.0, 9412.0], [800.0, 26378.072727272727], [1.0, 5061.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[521.0943999999987, 14966.878599999982]], "isOverall": false, "label": "Produce Kafka message for user-Aggregated", "isController": false}, {"data": [[1.0, 58889.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.0, 58889.0]], "isOverall": false, "label": "Create + subscribe consumers-Aggregated", "isController": false}, {"data": [[606.0, 23749.0], [603.0, 26089.666666666668], [601.0, 24134.5], [604.0, 25814.0], [594.0, 29827.0], [595.0, 31344.0], [593.0, 24888.0], [598.0, 24375.0], [599.0, 24424.0], [600.0, 31095.0], [591.0, 25002.0], [582.0, 32527.500000000004], [581.0, 32641.0], [577.0, 28939.0], [590.0, 32862.0], [586.0, 30821.666666666668], [585.0, 29616.125], [584.0, 31847.5], [608.0, 27655.625], [614.0, 23158.0], [620.0, 22899.5], [612.0, 28570.5], [611.0, 28593.0], [661.0, 22809.0], [650.0, 22577.666666666668], [651.0, 23478.0], [655.0, 22697.0], [681.0, 28355.0], [696.0, 24705.5], [676.0, 27761.0], [689.0, 21874.0], [672.0, 29046.0], [731.0, 25191.0], [711.0, 21930.0], [706.0, 21557.5], [710.0, 24263.0], [707.0, 26511.0], [761.0, 18350.0], [765.0, 19619.0], [760.0, 20513.5], [756.0, 22443.5], [737.0, 20465.0], [787.0, 18642.0], [793.0, 11695.5], [773.0, 20377.0], [769.0, 17496.0], [771.0, 17364.5], [791.0, 14111.142857142853], [790.0, 16565.69230769231], [789.0, 17922.285714285714], [784.0, 17739.300000000003], [786.0, 17903.0], [783.0, 21028.55714285714], [785.0, 18684.25], [782.0, 20175.818181818184], [779.0, 17812.833333333332], [778.0, 17988.333333333332], [776.0, 22155.0], [780.0, 18050.0], [800.0, 9128.57142857143]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[736.9966666666671, 20527.989999999994]], "isOverall": false, "label": "Consume Kafka message for user - receive latency-Aggregated", "isController": false}, {"data": [[1.0, 19912.0]], "isOverall": false, "label": "Close consumers", "isController": false}, {"data": [[1.0, 19912.0]], "isOverall": false, "label": "Close consumers-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 800.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.68528822E12, "maxY": 640.6166666666667, "series": [{"data": [[1.6852884E12, 640.6166666666667], [1.68528828E12, 0.0], [1.68528846E12, 308.26666666666665], [1.68528834E12, 459.68333333333334], [1.68528822E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6852884E12, 0.0], [1.68528828E12, 0.0], [1.68528846E12, 0.0], [1.68528834E12, 0.0], [1.68528822E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68528846E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 689.0, "minX": 1.68528822E12, "maxY": 58889.0, "series": [{"data": [[1.68528822E12, 689.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.6852884E12, 13472.596638655465], [1.68528846E12, 12372.879595588232], [1.68528834E12, 18722.688673531185]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68528828E12, 58889.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.68528828E12, 8705.0], [1.68528834E12, 20687.76013513515]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68528846E12, 19912.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68528846E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68528822E12, "maxY": 4.9E-324, "series": [{"data": [[1.68528822E12, 0.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.6852884E12, 0.0], [1.68528846E12, 0.0], [1.68528834E12, 0.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68528828E12, 0.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.68528828E12, 0.0], [1.68528834E12, 0.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68528846E12, 0.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68528846E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68528822E12, "maxY": 4.9E-324, "series": [{"data": [[1.68528822E12, 0.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.6852884E12, 0.0], [1.68528846E12, 0.0], [1.68528834E12, 0.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68528828E12, 0.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.68528828E12, 0.0], [1.68528834E12, 0.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68528846E12, 0.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68528846E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 689.0, "minX": 1.68528822E12, "maxY": 58889.0, "series": [{"data": [[1.6852884E12, 19526.0], [1.68528828E12, 58889.0], [1.68528846E12, 21582.0], [1.68528834E12, 37538.0], [1.68528822E12, 689.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6852884E12, 14292.0], [1.68528828E12, 58889.0], [1.68528846E12, 14807.0], [1.68528834E12, 30534.6], [1.68528822E12, 689.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6852884E12, 15068.14], [1.68528828E12, 58889.0], [1.68528846E12, 17488.999999999985], [1.68528834E12, 33440.56], [1.68528822E12, 689.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6852884E12, 14545.0], [1.68528828E12, 58889.0], [1.68528846E12, 15118.5], [1.68528834E12, 32224.6], [1.68528822E12, 689.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6852884E12, 11299.0], [1.68528828E12, 8299.0], [1.68528846E12, 1594.0], [1.68528834E12, 5769.0], [1.68528822E12, 689.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6852884E12, 13464.0], [1.68528828E12, 8738.0], [1.68528846E12, 13603.0], [1.68528834E12, 15133.0], [1.68528822E12, 689.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68528846E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 8465.0, "minX": 1.0, "maxY": 32420.0, "series": [{"data": [[3.0, 11034.5], [4.0, 8727.5], [5.0, 12679.5], [6.0, 13176.0], [8.0, 12913.0], [9.0, 14107.0], [10.0, 13245.5], [11.0, 14217.0], [12.0, 13520.0], [13.0, 13558.0], [14.0, 13298.0], [15.0, 13713.0], [16.0, 13375.5], [17.0, 13249.0], [18.0, 13292.5], [19.0, 13113.0], [20.0, 13792.5], [21.0, 15458.0], [22.0, 20280.5], [23.0, 13631.0], [25.0, 14060.5], [26.0, 13006.0], [28.0, 18318.0], [29.0, 16229.5], [30.0, 19653.5], [31.0, 13882.0], [33.0, 22292.0], [32.0, 13583.0], [34.0, 13253.0], [35.0, 13638.0], [37.0, 13210.0], [36.0, 13499.5], [39.0, 14127.5], [38.0, 13034.0], [41.0, 27913.0], [40.0, 13626.0], [42.0, 18826.0], [43.0, 13941.0], [45.0, 14699.0], [44.0, 13873.0], [47.0, 13625.0], [49.0, 14161.0], [51.0, 14085.5], [53.0, 14097.5], [54.0, 22689.0], [55.0, 13506.0], [56.0, 13902.5], [57.0, 12213.0], [58.0, 13625.0], [61.0, 13577.0], [63.0, 14744.0], [66.0, 14798.5], [65.0, 12995.0], [64.0, 13348.5], [70.0, 13844.5], [68.0, 13564.0], [69.0, 13586.0], [75.0, 28488.0], [74.0, 10075.0], [72.0, 14180.0], [73.0, 12725.0], [79.0, 14895.0], [77.0, 13604.0], [81.0, 13401.0], [86.0, 14890.5], [87.0, 10802.0], [88.0, 13998.5], [93.0, 30356.0], [95.0, 32420.0], [98.0, 14813.5], [100.0, 8465.0], [113.0, 29325.0], [1.0, 15233.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 113.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[3.0, 0.0], [4.0, 0.0], [5.0, 0.0], [6.0, 0.0], [8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [16.0, 0.0], [17.0, 0.0], [18.0, 0.0], [19.0, 0.0], [20.0, 0.0], [21.0, 0.0], [22.0, 0.0], [23.0, 0.0], [25.0, 0.0], [26.0, 0.0], [28.0, 0.0], [29.0, 0.0], [30.0, 0.0], [31.0, 0.0], [33.0, 0.0], [32.0, 0.0], [34.0, 0.0], [35.0, 0.0], [37.0, 0.0], [36.0, 0.0], [39.0, 0.0], [38.0, 0.0], [41.0, 0.0], [40.0, 0.0], [42.0, 0.0], [43.0, 0.0], [45.0, 0.0], [44.0, 0.0], [47.0, 0.0], [49.0, 0.0], [51.0, 0.0], [53.0, 0.0], [54.0, 0.0], [55.0, 0.0], [56.0, 0.0], [57.0, 0.0], [58.0, 0.0], [61.0, 0.0], [63.0, 0.0], [66.0, 0.0], [65.0, 0.0], [64.0, 0.0], [70.0, 0.0], [68.0, 0.0], [69.0, 0.0], [75.0, 0.0], [74.0, 0.0], [72.0, 0.0], [73.0, 0.0], [79.0, 0.0], [77.0, 0.0], [81.0, 0.0], [86.0, 0.0], [87.0, 0.0], [88.0, 0.0], [93.0, 0.0], [95.0, 0.0], [98.0, 0.0], [100.0, 0.0], [113.0, 0.0], [1.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 113.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68528822E12, "maxY": 37.68333333333333, "series": [{"data": [[1.6852884E12, 37.68333333333333], [1.68528828E12, 13.333333333333334], [1.68528846E12, 9.816666666666666], [1.68528834E12, 27.516666666666666], [1.68528822E12, 0.03333333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68528846E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68528822E12, "maxY": 37.68333333333333, "series": [{"data": [[1.6852884E12, 37.68333333333333], [1.68528828E12, 0.08333333333333333], [1.68528846E12, 18.15], [1.68528834E12, 32.45], [1.68528822E12, 0.016666666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68528846E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68528822E12, "maxY": 37.68333333333333, "series": [{"data": [[1.68528828E12, 0.06666666666666667], [1.68528834E12, 4.933333333333334]], "isOverall": false, "label": "Consume Kafka message for user - receive latency-success", "isController": false}, {"data": [[1.68528822E12, 0.016666666666666666]], "isOverall": false, "label": "create message-success", "isController": false}, {"data": [[1.68528828E12, 0.016666666666666666]], "isOverall": false, "label": "Create + subscribe consumers-success", "isController": false}, {"data": [[1.6852884E12, 37.68333333333333], [1.68528846E12, 18.133333333333333], [1.68528834E12, 27.516666666666666]], "isOverall": false, "label": "Produce Kafka message for user-success", "isController": false}, {"data": [[1.68528846E12, 0.016666666666666666]], "isOverall": false, "label": "Close consumers-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68528846E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68528822E12, "maxY": 37.68333333333333, "series": [{"data": [[1.6852884E12, 37.68333333333333], [1.68528828E12, 0.08333333333333333], [1.68528846E12, 18.15], [1.68528834E12, 32.45], [1.68528822E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68528846E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

