/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 864.0, "minX": 0.0, "maxY": 99318.0, "series": [{"data": [[0.0, 864.0], [0.1, 864.0], [0.2, 864.0], [0.3, 864.0], [0.4, 864.0], [0.5, 864.0], [0.6, 864.0], [0.7, 864.0], [0.8, 864.0], [0.9, 864.0], [1.0, 864.0], [1.1, 864.0], [1.2, 864.0], [1.3, 864.0], [1.4, 864.0], [1.5, 864.0], [1.6, 864.0], [1.7, 864.0], [1.8, 864.0], [1.9, 864.0], [2.0, 864.0], [2.1, 864.0], [2.2, 864.0], [2.3, 864.0], [2.4, 864.0], [2.5, 864.0], [2.6, 864.0], [2.7, 864.0], [2.8, 864.0], [2.9, 864.0], [3.0, 864.0], [3.1, 864.0], [3.2, 864.0], [3.3, 864.0], [3.4, 864.0], [3.5, 864.0], [3.6, 864.0], [3.7, 864.0], [3.8, 864.0], [3.9, 864.0], [4.0, 864.0], [4.1, 864.0], [4.2, 864.0], [4.3, 864.0], [4.4, 864.0], [4.5, 864.0], [4.6, 864.0], [4.7, 864.0], [4.8, 864.0], [4.9, 864.0], [5.0, 864.0], [5.1, 864.0], [5.2, 864.0], [5.3, 864.0], [5.4, 864.0], [5.5, 864.0], [5.6, 864.0], [5.7, 864.0], [5.8, 864.0], [5.9, 864.0], [6.0, 864.0], [6.1, 864.0], [6.2, 864.0], [6.3, 864.0], [6.4, 864.0], [6.5, 864.0], [6.6, 864.0], [6.7, 864.0], [6.8, 864.0], [6.9, 864.0], [7.0, 864.0], [7.1, 864.0], [7.2, 864.0], [7.3, 864.0], [7.4, 864.0], [7.5, 864.0], [7.6, 864.0], [7.7, 864.0], [7.8, 864.0], [7.9, 864.0], [8.0, 864.0], [8.1, 864.0], [8.2, 864.0], [8.3, 864.0], [8.4, 864.0], [8.5, 864.0], [8.6, 864.0], [8.7, 864.0], [8.8, 864.0], [8.9, 864.0], [9.0, 864.0], [9.1, 864.0], [9.2, 864.0], [9.3, 864.0], [9.4, 864.0], [9.5, 864.0], [9.6, 864.0], [9.7, 864.0], [9.8, 864.0], [9.9, 864.0], [10.0, 864.0], [10.1, 864.0], [10.2, 864.0], [10.3, 864.0], [10.4, 864.0], [10.5, 864.0], [10.6, 864.0], [10.7, 864.0], [10.8, 864.0], [10.9, 864.0], [11.0, 864.0], [11.1, 864.0], [11.2, 864.0], [11.3, 864.0], [11.4, 864.0], [11.5, 864.0], [11.6, 864.0], [11.7, 864.0], [11.8, 864.0], [11.9, 864.0], [12.0, 864.0], [12.1, 864.0], [12.2, 864.0], [12.3, 864.0], [12.4, 864.0], [12.5, 864.0], [12.6, 864.0], [12.7, 864.0], [12.8, 864.0], [12.9, 864.0], [13.0, 864.0], [13.1, 864.0], [13.2, 864.0], [13.3, 864.0], [13.4, 864.0], [13.5, 864.0], [13.6, 864.0], [13.7, 864.0], [13.8, 864.0], [13.9, 864.0], [14.0, 864.0], [14.1, 864.0], [14.2, 864.0], [14.3, 864.0], [14.4, 864.0], [14.5, 864.0], [14.6, 864.0], [14.7, 864.0], [14.8, 864.0], [14.9, 864.0], [15.0, 864.0], [15.1, 864.0], [15.2, 864.0], [15.3, 864.0], [15.4, 864.0], [15.5, 864.0], [15.6, 864.0], [15.7, 864.0], [15.8, 864.0], [15.9, 864.0], [16.0, 864.0], [16.1, 864.0], [16.2, 864.0], [16.3, 864.0], [16.4, 864.0], [16.5, 864.0], [16.6, 864.0], [16.7, 864.0], [16.8, 864.0], [16.9, 864.0], [17.0, 864.0], [17.1, 864.0], [17.2, 864.0], [17.3, 864.0], [17.4, 864.0], [17.5, 864.0], [17.6, 864.0], [17.7, 864.0], [17.8, 864.0], [17.9, 864.0], [18.0, 864.0], [18.1, 864.0], [18.2, 864.0], [18.3, 864.0], [18.4, 864.0], [18.5, 864.0], [18.6, 864.0], [18.7, 864.0], [18.8, 864.0], [18.9, 864.0], [19.0, 864.0], [19.1, 864.0], [19.2, 864.0], [19.3, 864.0], [19.4, 864.0], [19.5, 864.0], [19.6, 864.0], [19.7, 864.0], [19.8, 864.0], [19.9, 864.0], [20.0, 864.0], [20.1, 864.0], [20.2, 864.0], [20.3, 864.0], [20.4, 864.0], [20.5, 864.0], [20.6, 864.0], [20.7, 864.0], [20.8, 864.0], [20.9, 864.0], [21.0, 864.0], [21.1, 864.0], [21.2, 864.0], [21.3, 864.0], [21.4, 864.0], [21.5, 864.0], [21.6, 864.0], [21.7, 864.0], [21.8, 864.0], [21.9, 864.0], [22.0, 864.0], [22.1, 864.0], [22.2, 864.0], [22.3, 864.0], [22.4, 864.0], [22.5, 864.0], [22.6, 864.0], [22.7, 864.0], [22.8, 864.0], [22.9, 864.0], [23.0, 864.0], [23.1, 864.0], [23.2, 864.0], [23.3, 864.0], [23.4, 864.0], [23.5, 864.0], [23.6, 864.0], [23.7, 864.0], [23.8, 864.0], [23.9, 864.0], [24.0, 864.0], [24.1, 864.0], [24.2, 864.0], [24.3, 864.0], [24.4, 864.0], [24.5, 864.0], [24.6, 864.0], [24.7, 864.0], [24.8, 864.0], [24.9, 864.0], [25.0, 864.0], [25.1, 864.0], [25.2, 864.0], [25.3, 864.0], [25.4, 864.0], [25.5, 864.0], [25.6, 864.0], [25.7, 864.0], [25.8, 864.0], [25.9, 864.0], [26.0, 864.0], [26.1, 864.0], [26.2, 864.0], [26.3, 864.0], [26.4, 864.0], [26.5, 864.0], [26.6, 864.0], [26.7, 864.0], [26.8, 864.0], [26.9, 864.0], [27.0, 864.0], [27.1, 864.0], [27.2, 864.0], [27.3, 864.0], [27.4, 864.0], [27.5, 864.0], [27.6, 864.0], [27.7, 864.0], [27.8, 864.0], [27.9, 864.0], [28.0, 864.0], [28.1, 864.0], [28.2, 864.0], [28.3, 864.0], [28.4, 864.0], [28.5, 864.0], [28.6, 864.0], [28.7, 864.0], [28.8, 864.0], [28.9, 864.0], [29.0, 864.0], [29.1, 864.0], [29.2, 864.0], [29.3, 864.0], [29.4, 864.0], [29.5, 864.0], [29.6, 864.0], [29.7, 864.0], [29.8, 864.0], [29.9, 864.0], [30.0, 864.0], [30.1, 864.0], [30.2, 864.0], [30.3, 864.0], [30.4, 864.0], [30.5, 864.0], [30.6, 864.0], [30.7, 864.0], [30.8, 864.0], [30.9, 864.0], [31.0, 864.0], [31.1, 864.0], [31.2, 864.0], [31.3, 864.0], [31.4, 864.0], [31.5, 864.0], [31.6, 864.0], [31.7, 864.0], [31.8, 864.0], [31.9, 864.0], [32.0, 864.0], [32.1, 864.0], [32.2, 864.0], [32.3, 864.0], [32.4, 864.0], [32.5, 864.0], [32.6, 864.0], [32.7, 864.0], [32.8, 864.0], [32.9, 864.0], [33.0, 864.0], [33.1, 864.0], [33.2, 864.0], [33.3, 864.0], [33.4, 864.0], [33.5, 864.0], [33.6, 864.0], [33.7, 864.0], [33.8, 864.0], [33.9, 864.0], [34.0, 864.0], [34.1, 864.0], [34.2, 864.0], [34.3, 864.0], [34.4, 864.0], [34.5, 864.0], [34.6, 864.0], [34.7, 864.0], [34.8, 864.0], [34.9, 864.0], [35.0, 864.0], [35.1, 864.0], [35.2, 864.0], [35.3, 864.0], [35.4, 864.0], [35.5, 864.0], [35.6, 864.0], [35.7, 864.0], [35.8, 864.0], [35.9, 864.0], [36.0, 864.0], [36.1, 864.0], [36.2, 864.0], [36.3, 864.0], [36.4, 864.0], [36.5, 864.0], [36.6, 864.0], [36.7, 864.0], [36.8, 864.0], [36.9, 864.0], [37.0, 864.0], [37.1, 864.0], [37.2, 864.0], [37.3, 864.0], [37.4, 864.0], [37.5, 864.0], [37.6, 864.0], [37.7, 864.0], [37.8, 864.0], [37.9, 864.0], [38.0, 864.0], [38.1, 864.0], [38.2, 864.0], [38.3, 864.0], [38.4, 864.0], [38.5, 864.0], [38.6, 864.0], [38.7, 864.0], [38.8, 864.0], [38.9, 864.0], [39.0, 864.0], [39.1, 864.0], [39.2, 864.0], [39.3, 864.0], [39.4, 864.0], [39.5, 864.0], [39.6, 864.0], [39.7, 864.0], [39.8, 864.0], [39.9, 864.0], [40.0, 864.0], [40.1, 864.0], [40.2, 864.0], [40.3, 864.0], [40.4, 864.0], [40.5, 864.0], [40.6, 864.0], [40.7, 864.0], [40.8, 864.0], [40.9, 864.0], [41.0, 864.0], [41.1, 864.0], [41.2, 864.0], [41.3, 864.0], [41.4, 864.0], [41.5, 864.0], [41.6, 864.0], [41.7, 864.0], [41.8, 864.0], [41.9, 864.0], [42.0, 864.0], [42.1, 864.0], [42.2, 864.0], [42.3, 864.0], [42.4, 864.0], [42.5, 864.0], [42.6, 864.0], [42.7, 864.0], [42.8, 864.0], [42.9, 864.0], [43.0, 864.0], [43.1, 864.0], [43.2, 864.0], [43.3, 864.0], [43.4, 864.0], [43.5, 864.0], [43.6, 864.0], [43.7, 864.0], [43.8, 864.0], [43.9, 864.0], [44.0, 864.0], [44.1, 864.0], [44.2, 864.0], [44.3, 864.0], [44.4, 864.0], [44.5, 864.0], [44.6, 864.0], [44.7, 864.0], [44.8, 864.0], [44.9, 864.0], [45.0, 864.0], [45.1, 864.0], [45.2, 864.0], [45.3, 864.0], [45.4, 864.0], [45.5, 864.0], [45.6, 864.0], [45.7, 864.0], [45.8, 864.0], [45.9, 864.0], [46.0, 864.0], [46.1, 864.0], [46.2, 864.0], [46.3, 864.0], [46.4, 864.0], [46.5, 864.0], [46.6, 864.0], [46.7, 864.0], [46.8, 864.0], [46.9, 864.0], [47.0, 864.0], [47.1, 864.0], [47.2, 864.0], [47.3, 864.0], [47.4, 864.0], [47.5, 864.0], [47.6, 864.0], [47.7, 864.0], [47.8, 864.0], [47.9, 864.0], [48.0, 864.0], [48.1, 864.0], [48.2, 864.0], [48.3, 864.0], [48.4, 864.0], [48.5, 864.0], [48.6, 864.0], [48.7, 864.0], [48.8, 864.0], [48.9, 864.0], [49.0, 864.0], [49.1, 864.0], [49.2, 864.0], [49.3, 864.0], [49.4, 864.0], [49.5, 864.0], [49.6, 864.0], [49.7, 864.0], [49.8, 864.0], [49.9, 864.0], [50.0, 864.0], [50.1, 864.0], [50.2, 864.0], [50.3, 864.0], [50.4, 864.0], [50.5, 864.0], [50.6, 864.0], [50.7, 864.0], [50.8, 864.0], [50.9, 864.0], [51.0, 864.0], [51.1, 864.0], [51.2, 864.0], [51.3, 864.0], [51.4, 864.0], [51.5, 864.0], [51.6, 864.0], [51.7, 864.0], [51.8, 864.0], [51.9, 864.0], [52.0, 864.0], [52.1, 864.0], [52.2, 864.0], [52.3, 864.0], [52.4, 864.0], [52.5, 864.0], [52.6, 864.0], [52.7, 864.0], [52.8, 864.0], [52.9, 864.0], [53.0, 864.0], [53.1, 864.0], [53.2, 864.0], [53.3, 864.0], [53.4, 864.0], [53.5, 864.0], [53.6, 864.0], [53.7, 864.0], [53.8, 864.0], [53.9, 864.0], [54.0, 864.0], [54.1, 864.0], [54.2, 864.0], [54.3, 864.0], [54.4, 864.0], [54.5, 864.0], [54.6, 864.0], [54.7, 864.0], [54.8, 864.0], [54.9, 864.0], [55.0, 864.0], [55.1, 864.0], [55.2, 864.0], [55.3, 864.0], [55.4, 864.0], [55.5, 864.0], [55.6, 864.0], [55.7, 864.0], [55.8, 864.0], [55.9, 864.0], [56.0, 864.0], [56.1, 864.0], [56.2, 864.0], [56.3, 864.0], [56.4, 864.0], [56.5, 864.0], [56.6, 864.0], [56.7, 864.0], [56.8, 864.0], [56.9, 864.0], [57.0, 864.0], [57.1, 864.0], [57.2, 864.0], [57.3, 864.0], [57.4, 864.0], [57.5, 864.0], [57.6, 864.0], [57.7, 864.0], [57.8, 864.0], [57.9, 864.0], [58.0, 864.0], [58.1, 864.0], [58.2, 864.0], [58.3, 864.0], [58.4, 864.0], [58.5, 864.0], [58.6, 864.0], [58.7, 864.0], [58.8, 864.0], [58.9, 864.0], [59.0, 864.0], [59.1, 864.0], [59.2, 864.0], [59.3, 864.0], [59.4, 864.0], [59.5, 864.0], [59.6, 864.0], [59.7, 864.0], [59.8, 864.0], [59.9, 864.0], [60.0, 864.0], [60.1, 864.0], [60.2, 864.0], [60.3, 864.0], [60.4, 864.0], [60.5, 864.0], [60.6, 864.0], [60.7, 864.0], [60.8, 864.0], [60.9, 864.0], [61.0, 864.0], [61.1, 864.0], [61.2, 864.0], [61.3, 864.0], [61.4, 864.0], [61.5, 864.0], [61.6, 864.0], [61.7, 864.0], [61.8, 864.0], [61.9, 864.0], [62.0, 864.0], [62.1, 864.0], [62.2, 864.0], [62.3, 864.0], [62.4, 864.0], [62.5, 864.0], [62.6, 864.0], [62.7, 864.0], [62.8, 864.0], [62.9, 864.0], [63.0, 864.0], [63.1, 864.0], [63.2, 864.0], [63.3, 864.0], [63.4, 864.0], [63.5, 864.0], [63.6, 864.0], [63.7, 864.0], [63.8, 864.0], [63.9, 864.0], [64.0, 864.0], [64.1, 864.0], [64.2, 864.0], [64.3, 864.0], [64.4, 864.0], [64.5, 864.0], [64.6, 864.0], [64.7, 864.0], [64.8, 864.0], [64.9, 864.0], [65.0, 864.0], [65.1, 864.0], [65.2, 864.0], [65.3, 864.0], [65.4, 864.0], [65.5, 864.0], [65.6, 864.0], [65.7, 864.0], [65.8, 864.0], [65.9, 864.0], [66.0, 864.0], [66.1, 864.0], [66.2, 864.0], [66.3, 864.0], [66.4, 864.0], [66.5, 864.0], [66.6, 864.0], [66.7, 864.0], [66.8, 864.0], [66.9, 864.0], [67.0, 864.0], [67.1, 864.0], [67.2, 864.0], [67.3, 864.0], [67.4, 864.0], [67.5, 864.0], [67.6, 864.0], [67.7, 864.0], [67.8, 864.0], [67.9, 864.0], [68.0, 864.0], [68.1, 864.0], [68.2, 864.0], [68.3, 864.0], [68.4, 864.0], [68.5, 864.0], [68.6, 864.0], [68.7, 864.0], [68.8, 864.0], [68.9, 864.0], [69.0, 864.0], [69.1, 864.0], [69.2, 864.0], [69.3, 864.0], [69.4, 864.0], [69.5, 864.0], [69.6, 864.0], [69.7, 864.0], [69.8, 864.0], [69.9, 864.0], [70.0, 864.0], [70.1, 864.0], [70.2, 864.0], [70.3, 864.0], [70.4, 864.0], [70.5, 864.0], [70.6, 864.0], [70.7, 864.0], [70.8, 864.0], [70.9, 864.0], [71.0, 864.0], [71.1, 864.0], [71.2, 864.0], [71.3, 864.0], [71.4, 864.0], [71.5, 864.0], [71.6, 864.0], [71.7, 864.0], [71.8, 864.0], [71.9, 864.0], [72.0, 864.0], [72.1, 864.0], [72.2, 864.0], [72.3, 864.0], [72.4, 864.0], [72.5, 864.0], [72.6, 864.0], [72.7, 864.0], [72.8, 864.0], [72.9, 864.0], [73.0, 864.0], [73.1, 864.0], [73.2, 864.0], [73.3, 864.0], [73.4, 864.0], [73.5, 864.0], [73.6, 864.0], [73.7, 864.0], [73.8, 864.0], [73.9, 864.0], [74.0, 864.0], [74.1, 864.0], [74.2, 864.0], [74.3, 864.0], [74.4, 864.0], [74.5, 864.0], [74.6, 864.0], [74.7, 864.0], [74.8, 864.0], [74.9, 864.0], [75.0, 864.0], [75.1, 864.0], [75.2, 864.0], [75.3, 864.0], [75.4, 864.0], [75.5, 864.0], [75.6, 864.0], [75.7, 864.0], [75.8, 864.0], [75.9, 864.0], [76.0, 864.0], [76.1, 864.0], [76.2, 864.0], [76.3, 864.0], [76.4, 864.0], [76.5, 864.0], [76.6, 864.0], [76.7, 864.0], [76.8, 864.0], [76.9, 864.0], [77.0, 864.0], [77.1, 864.0], [77.2, 864.0], [77.3, 864.0], [77.4, 864.0], [77.5, 864.0], [77.6, 864.0], [77.7, 864.0], [77.8, 864.0], [77.9, 864.0], [78.0, 864.0], [78.1, 864.0], [78.2, 864.0], [78.3, 864.0], [78.4, 864.0], [78.5, 864.0], [78.6, 864.0], [78.7, 864.0], [78.8, 864.0], [78.9, 864.0], [79.0, 864.0], [79.1, 864.0], [79.2, 864.0], [79.3, 864.0], [79.4, 864.0], [79.5, 864.0], [79.6, 864.0], [79.7, 864.0], [79.8, 864.0], [79.9, 864.0], [80.0, 864.0], [80.1, 864.0], [80.2, 864.0], [80.3, 864.0], [80.4, 864.0], [80.5, 864.0], [80.6, 864.0], [80.7, 864.0], [80.8, 864.0], [80.9, 864.0], [81.0, 864.0], [81.1, 864.0], [81.2, 864.0], [81.3, 864.0], [81.4, 864.0], [81.5, 864.0], [81.6, 864.0], [81.7, 864.0], [81.8, 864.0], [81.9, 864.0], [82.0, 864.0], [82.1, 864.0], [82.2, 864.0], [82.3, 864.0], [82.4, 864.0], [82.5, 864.0], [82.6, 864.0], [82.7, 864.0], [82.8, 864.0], [82.9, 864.0], [83.0, 864.0], [83.1, 864.0], [83.2, 864.0], [83.3, 864.0], [83.4, 864.0], [83.5, 864.0], [83.6, 864.0], [83.7, 864.0], [83.8, 864.0], [83.9, 864.0], [84.0, 864.0], [84.1, 864.0], [84.2, 864.0], [84.3, 864.0], [84.4, 864.0], [84.5, 864.0], [84.6, 864.0], [84.7, 864.0], [84.8, 864.0], [84.9, 864.0], [85.0, 864.0], [85.1, 864.0], [85.2, 864.0], [85.3, 864.0], [85.4, 864.0], [85.5, 864.0], [85.6, 864.0], [85.7, 864.0], [85.8, 864.0], [85.9, 864.0], [86.0, 864.0], [86.1, 864.0], [86.2, 864.0], [86.3, 864.0], [86.4, 864.0], [86.5, 864.0], [86.6, 864.0], [86.7, 864.0], [86.8, 864.0], [86.9, 864.0], [87.0, 864.0], [87.1, 864.0], [87.2, 864.0], [87.3, 864.0], [87.4, 864.0], [87.5, 864.0], [87.6, 864.0], [87.7, 864.0], [87.8, 864.0], [87.9, 864.0], [88.0, 864.0], [88.1, 864.0], [88.2, 864.0], [88.3, 864.0], [88.4, 864.0], [88.5, 864.0], [88.6, 864.0], [88.7, 864.0], [88.8, 864.0], [88.9, 864.0], [89.0, 864.0], [89.1, 864.0], [89.2, 864.0], [89.3, 864.0], [89.4, 864.0], [89.5, 864.0], [89.6, 864.0], [89.7, 864.0], [89.8, 864.0], [89.9, 864.0], [90.0, 864.0], [90.1, 864.0], [90.2, 864.0], [90.3, 864.0], [90.4, 864.0], [90.5, 864.0], [90.6, 864.0], [90.7, 864.0], [90.8, 864.0], [90.9, 864.0], [91.0, 864.0], [91.1, 864.0], [91.2, 864.0], [91.3, 864.0], [91.4, 864.0], [91.5, 864.0], [91.6, 864.0], [91.7, 864.0], [91.8, 864.0], [91.9, 864.0], [92.0, 864.0], [92.1, 864.0], [92.2, 864.0], [92.3, 864.0], [92.4, 864.0], [92.5, 864.0], [92.6, 864.0], [92.7, 864.0], [92.8, 864.0], [92.9, 864.0], [93.0, 864.0], [93.1, 864.0], [93.2, 864.0], [93.3, 864.0], [93.4, 864.0], [93.5, 864.0], [93.6, 864.0], [93.7, 864.0], [93.8, 864.0], [93.9, 864.0], [94.0, 864.0], [94.1, 864.0], [94.2, 864.0], [94.3, 864.0], [94.4, 864.0], [94.5, 864.0], [94.6, 864.0], [94.7, 864.0], [94.8, 864.0], [94.9, 864.0], [95.0, 864.0], [95.1, 864.0], [95.2, 864.0], [95.3, 864.0], [95.4, 864.0], [95.5, 864.0], [95.6, 864.0], [95.7, 864.0], [95.8, 864.0], [95.9, 864.0], [96.0, 864.0], [96.1, 864.0], [96.2, 864.0], [96.3, 864.0], [96.4, 864.0], [96.5, 864.0], [96.6, 864.0], [96.7, 864.0], [96.8, 864.0], [96.9, 864.0], [97.0, 864.0], [97.1, 864.0], [97.2, 864.0], [97.3, 864.0], [97.4, 864.0], [97.5, 864.0], [97.6, 864.0], [97.7, 864.0], [97.8, 864.0], [97.9, 864.0], [98.0, 864.0], [98.1, 864.0], [98.2, 864.0], [98.3, 864.0], [98.4, 864.0], [98.5, 864.0], [98.6, 864.0], [98.7, 864.0], [98.8, 864.0], [98.9, 864.0], [99.0, 864.0], [99.1, 864.0], [99.2, 864.0], [99.3, 864.0], [99.4, 864.0], [99.5, 864.0], [99.6, 864.0], [99.7, 864.0], [99.8, 864.0], [99.9, 864.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[0.0, 1353.0], [0.1, 1489.0], [0.2, 1616.0], [0.3, 1876.0], [0.4, 1914.0], [0.5, 2221.0], [0.6, 2356.0], [0.7, 3360.0], [0.8, 3501.0], [0.9, 3605.0], [1.0, 3630.0], [1.1, 3667.0], [1.2, 3689.0], [1.3, 3703.0], [1.4, 3724.0], [1.5, 3802.0], [1.6, 3918.0], [1.7, 3936.0], [1.8, 3971.0], [1.9, 3979.0], [2.0, 4006.0], [2.1, 4339.0], [2.2, 4785.0], [2.3, 5003.0], [2.4, 5399.0], [2.5, 5591.0], [2.6, 5965.0], [2.7, 6186.0], [2.8, 6543.0], [2.9, 6843.0], [3.0, 6889.0], [3.1, 6959.0], [3.2, 7340.0], [3.3, 7421.0], [3.4, 7541.0], [3.5, 7635.0], [3.6, 7756.0], [3.7, 7821.0], [3.8, 7850.0], [3.9, 7878.0], [4.0, 7989.0], [4.1, 8126.0], [4.2, 8375.0], [4.3, 8518.0], [4.4, 8608.0], [4.5, 8803.0], [4.6, 8900.0], [4.7, 8964.0], [4.8, 9158.0], [4.9, 9225.0], [5.0, 9399.0], [5.1, 9561.0], [5.2, 9622.0], [5.3, 9737.0], [5.4, 9898.0], [5.5, 9994.0], [5.6, 10032.0], [5.7, 10085.0], [5.8, 10111.0], [5.9, 10172.0], [6.0, 10243.0], [6.1, 10382.0], [6.2, 10467.0], [6.3, 10511.0], [6.4, 10522.0], [6.5, 10536.0], [6.6, 10637.0], [6.7, 10701.0], [6.8, 10775.0], [6.9, 10901.0], [7.0, 10947.0], [7.1, 11055.0], [7.2, 11157.0], [7.3, 11311.0], [7.4, 11395.0], [7.5, 11512.0], [7.6, 11711.0], [7.7, 11818.0], [7.8, 12133.0], [7.9, 12375.0], [8.0, 12539.0], [8.1, 12860.0], [8.2, 13031.0], [8.3, 13396.0], [8.4, 13519.0], [8.5, 13651.0], [8.6, 13778.0], [8.7, 13891.0], [8.8, 13997.0], [8.9, 14084.0], [9.0, 14180.0], [9.1, 14313.0], [9.2, 14381.0], [9.3, 14521.0], [9.4, 14581.0], [9.5, 14688.0], [9.6, 14910.0], [9.7, 15163.0], [9.8, 15290.0], [9.9, 15379.0], [10.0, 15471.0], [10.1, 15526.0], [10.2, 15626.0], [10.3, 15673.0], [10.4, 15745.0], [10.5, 15857.0], [10.6, 15948.0], [10.7, 16000.0], [10.8, 16100.0], [10.9, 16168.0], [11.0, 16230.0], [11.1, 16298.0], [11.2, 16352.0], [11.3, 16427.0], [11.4, 16509.0], [11.5, 16620.0], [11.6, 16802.0], [11.7, 16855.0], [11.8, 16933.0], [11.9, 17045.0], [12.0, 17170.0], [12.1, 17289.0], [12.2, 17357.0], [12.3, 17461.0], [12.4, 17542.0], [12.5, 17632.0], [12.6, 17803.0], [12.7, 17899.0], [12.8, 18054.0], [12.9, 18223.0], [13.0, 18575.0], [13.1, 18726.0], [13.2, 18904.0], [13.3, 18957.0], [13.4, 19130.0], [13.5, 19214.0], [13.6, 19402.0], [13.7, 19575.0], [13.8, 19676.0], [13.9, 19743.0], [14.0, 19847.0], [14.1, 19940.0], [14.2, 20048.0], [14.3, 20155.0], [14.4, 20271.0], [14.5, 20351.0], [14.6, 20412.0], [14.7, 20487.0], [14.8, 20527.0], [14.9, 20566.0], [15.0, 20584.0], [15.1, 20704.0], [15.2, 20760.0], [15.3, 20858.0], [15.4, 20896.0], [15.5, 20923.0], [15.6, 20974.0], [15.7, 21012.0], [15.8, 21036.0], [15.9, 21079.0], [16.0, 21128.0], [16.1, 21151.0], [16.2, 21197.0], [16.3, 21286.0], [16.4, 21348.0], [16.5, 21389.0], [16.6, 21432.0], [16.7, 21441.0], [16.8, 21463.0], [16.9, 21516.0], [17.0, 21545.0], [17.1, 21597.0], [17.2, 21679.0], [17.3, 21712.0], [17.4, 21781.0], [17.5, 21793.0], [17.6, 21841.0], [17.7, 21867.0], [17.8, 21943.0], [17.9, 21968.0], [18.0, 22145.0], [18.1, 22360.0], [18.2, 22468.0], [18.3, 22578.0], [18.4, 22663.0], [18.5, 22679.0], [18.6, 22736.0], [18.7, 22755.0], [18.8, 22804.0], [18.9, 22828.0], [19.0, 22846.0], [19.1, 22888.0], [19.2, 22955.0], [19.3, 23060.0], [19.4, 23127.0], [19.5, 23221.0], [19.6, 23257.0], [19.7, 23277.0], [19.8, 23314.0], [19.9, 23348.0], [20.0, 23466.0], [20.1, 23530.0], [20.2, 23555.0], [20.3, 23589.0], [20.4, 23612.0], [20.5, 23624.0], [20.6, 23630.0], [20.7, 23633.0], [20.8, 23637.0], [20.9, 23641.0], [21.0, 23668.0], [21.1, 23679.0], [21.2, 23682.0], [21.3, 23687.0], [21.4, 23704.0], [21.5, 23719.0], [21.6, 23762.0], [21.7, 23830.0], [21.8, 23880.0], [21.9, 23891.0], [22.0, 23908.0], [22.1, 23925.0], [22.2, 23932.0], [22.3, 23940.0], [22.4, 23947.0], [22.5, 23970.0], [22.6, 23982.0], [22.7, 23990.0], [22.8, 24003.0], [22.9, 24023.0], [23.0, 24088.0], [23.1, 24101.0], [23.2, 24113.0], [23.3, 24150.0], [23.4, 24158.0], [23.5, 24172.0], [23.6, 24226.0], [23.7, 24272.0], [23.8, 24393.0], [23.9, 24469.0], [24.0, 25010.0], [24.1, 25130.0], [24.2, 25305.0], [24.3, 25413.0], [24.4, 25528.0], [24.5, 25766.0], [24.6, 25973.0], [24.7, 26065.0], [24.8, 26105.0], [24.9, 26172.0], [25.0, 26235.0], [25.1, 26270.0], [25.2, 26342.0], [25.3, 26458.0], [25.4, 26642.0], [25.5, 26665.0], [25.6, 26744.0], [25.7, 26830.0], [25.8, 26893.0], [25.9, 26935.0], [26.0, 27006.0], [26.1, 27076.0], [26.2, 27144.0], [26.3, 27178.0], [26.4, 27346.0], [26.5, 27383.0], [26.6, 27513.0], [26.7, 27597.0], [26.8, 27674.0], [26.9, 27689.0], [27.0, 27814.0], [27.1, 27875.0], [27.2, 27980.0], [27.3, 28018.0], [27.4, 28031.0], [27.5, 28050.0], [27.6, 28142.0], [27.7, 28217.0], [27.8, 28279.0], [27.9, 28327.0], [28.0, 28384.0], [28.1, 28452.0], [28.2, 28476.0], [28.3, 28531.0], [28.4, 28540.0], [28.5, 28545.0], [28.6, 28550.0], [28.7, 28625.0], [28.8, 28644.0], [28.9, 28688.0], [29.0, 28695.0], [29.1, 28697.0], [29.2, 28703.0], [29.3, 28708.0], [29.4, 28712.0], [29.5, 28713.0], [29.6, 28719.0], [29.7, 28726.0], [29.8, 28796.0], [29.9, 28809.0], [30.0, 28822.0], [30.1, 28839.0], [30.2, 28843.0], [30.3, 28848.0], [30.4, 28881.0], [30.5, 28892.0], [30.6, 28906.0], [30.7, 28933.0], [30.8, 28941.0], [30.9, 28959.0], [31.0, 28975.0], [31.1, 28988.0], [31.2, 28996.0], [31.3, 29001.0], [31.4, 29005.0], [31.5, 29010.0], [31.6, 29010.0], [31.7, 29012.0], [31.8, 29013.0], [31.9, 29017.0], [32.0, 29019.0], [32.1, 29021.0], [32.2, 29026.0], [32.3, 29047.0], [32.4, 29083.0], [32.5, 29097.0], [32.6, 29108.0], [32.7, 29110.0], [32.8, 29115.0], [32.9, 29141.0], [33.0, 29174.0], [33.1, 29247.0], [33.2, 29266.0], [33.3, 29282.0], [33.4, 29307.0], [33.5, 29312.0], [33.6, 29316.0], [33.7, 29320.0], [33.8, 29324.0], [33.9, 29356.0], [34.0, 29407.0], [34.1, 29434.0], [34.2, 29439.0], [34.3, 29442.0], [34.4, 29451.0], [34.5, 29464.0], [34.6, 29505.0], [34.7, 29537.0], [34.8, 29553.0], [34.9, 29581.0], [35.0, 29624.0], [35.1, 29652.0], [35.2, 29705.0], [35.3, 29729.0], [35.4, 29766.0], [35.5, 29782.0], [35.6, 29804.0], [35.7, 29846.0], [35.8, 29865.0], [35.9, 29881.0], [36.0, 29902.0], [36.1, 29910.0], [36.2, 29930.0], [36.3, 29944.0], [36.4, 29958.0], [36.5, 29978.0], [36.6, 30001.0], [36.7, 30058.0], [36.8, 30116.0], [36.9, 30147.0], [37.0, 30199.0], [37.1, 30221.0], [37.2, 30223.0], [37.3, 30227.0], [37.4, 30237.0], [37.5, 30242.0], [37.6, 30263.0], [37.7, 30286.0], [37.8, 30314.0], [37.9, 30334.0], [38.0, 30353.0], [38.1, 30356.0], [38.2, 30361.0], [38.3, 30365.0], [38.4, 30368.0], [38.5, 30374.0], [38.6, 30381.0], [38.7, 30385.0], [38.8, 30420.0], [38.9, 30437.0], [39.0, 30470.0], [39.1, 30482.0], [39.2, 30529.0], [39.3, 30568.0], [39.4, 30601.0], [39.5, 30625.0], [39.6, 30634.0], [39.7, 30657.0], [39.8, 30662.0], [39.9, 30670.0], [40.0, 30676.0], [40.1, 30686.0], [40.2, 30695.0], [40.3, 30700.0], [40.4, 30708.0], [40.5, 30713.0], [40.6, 30720.0], [40.7, 30736.0], [40.8, 30751.0], [40.9, 30760.0], [41.0, 30796.0], [41.1, 30819.0], [41.2, 30827.0], [41.3, 30857.0], [41.4, 30877.0], [41.5, 30894.0], [41.6, 30938.0], [41.7, 30957.0], [41.8, 30959.0], [41.9, 30961.0], [42.0, 30967.0], [42.1, 30986.0], [42.2, 31028.0], [42.3, 31050.0], [42.4, 31078.0], [42.5, 31092.0], [42.6, 31121.0], [42.7, 31128.0], [42.8, 31131.0], [42.9, 31153.0], [43.0, 31164.0], [43.1, 31167.0], [43.2, 31172.0], [43.3, 31193.0], [43.4, 31229.0], [43.5, 31257.0], [43.6, 31301.0], [43.7, 31335.0], [43.8, 31373.0], [43.9, 31451.0], [44.0, 31465.0], [44.1, 31471.0], [44.2, 31480.0], [44.3, 31503.0], [44.4, 31526.0], [44.5, 31535.0], [44.6, 31538.0], [44.7, 31541.0], [44.8, 31542.0], [44.9, 31546.0], [45.0, 31547.0], [45.1, 31550.0], [45.2, 31551.0], [45.3, 31553.0], [45.4, 31554.0], [45.5, 31558.0], [45.6, 31561.0], [45.7, 31563.0], [45.8, 31566.0], [45.9, 31568.0], [46.0, 31573.0], [46.1, 31576.0], [46.2, 31581.0], [46.3, 31585.0], [46.4, 31590.0], [46.5, 31594.0], [46.6, 31597.0], [46.7, 31606.0], [46.8, 31655.0], [46.9, 31664.0], [47.0, 31670.0], [47.1, 31671.0], [47.2, 31674.0], [47.3, 31678.0], [47.4, 31682.0], [47.5, 31687.0], [47.6, 31692.0], [47.7, 31705.0], [47.8, 31728.0], [47.9, 31732.0], [48.0, 31736.0], [48.1, 31740.0], [48.2, 31742.0], [48.3, 31744.0], [48.4, 31751.0], [48.5, 31753.0], [48.6, 31755.0], [48.7, 31756.0], [48.8, 31761.0], [48.9, 31764.0], [49.0, 31766.0], [49.1, 31771.0], [49.2, 31773.0], [49.3, 31780.0], [49.4, 31791.0], [49.5, 31801.0], [49.6, 31809.0], [49.7, 31815.0], [49.8, 31842.0], [49.9, 31883.0], [50.0, 31939.0], [50.1, 31973.0], [50.2, 31981.0], [50.3, 32034.0], [50.4, 32064.0], [50.5, 32075.0], [50.6, 32088.0], [50.7, 32108.0], [50.8, 32240.0], [50.9, 32371.0], [51.0, 32374.0], [51.1, 32379.0], [51.2, 32387.0], [51.3, 32393.0], [51.4, 32403.0], [51.5, 32414.0], [51.6, 32445.0], [51.7, 32538.0], [51.8, 32587.0], [51.9, 32617.0], [52.0, 32635.0], [52.1, 32645.0], [52.2, 32659.0], [52.3, 32672.0], [52.4, 32682.0], [52.5, 32713.0], [52.6, 32732.0], [52.7, 32743.0], [52.8, 32754.0], [52.9, 32760.0], [53.0, 32766.0], [53.1, 32785.0], [53.2, 32814.0], [53.3, 32827.0], [53.4, 32842.0], [53.5, 32855.0], [53.6, 32870.0], [53.7, 32896.0], [53.8, 32923.0], [53.9, 32990.0], [54.0, 33066.0], [54.1, 33325.0], [54.2, 33435.0], [54.3, 33519.0], [54.4, 33570.0], [54.5, 33669.0], [54.6, 33797.0], [54.7, 33854.0], [54.8, 34025.0], [54.9, 34053.0], [55.0, 34142.0], [55.1, 34221.0], [55.2, 34309.0], [55.3, 34366.0], [55.4, 34430.0], [55.5, 34453.0], [55.6, 34469.0], [55.7, 34523.0], [55.8, 34590.0], [55.9, 34626.0], [56.0, 34649.0], [56.1, 34668.0], [56.2, 34702.0], [56.3, 34712.0], [56.4, 34749.0], [56.5, 34757.0], [56.6, 34770.0], [56.7, 34785.0], [56.8, 34805.0], [56.9, 34840.0], [57.0, 34861.0], [57.1, 34884.0], [57.2, 34900.0], [57.3, 34929.0], [57.4, 35047.0], [57.5, 35124.0], [57.6, 35193.0], [57.7, 35223.0], [57.8, 35229.0], [57.9, 35236.0], [58.0, 35244.0], [58.1, 35247.0], [58.2, 35257.0], [58.3, 35262.0], [58.4, 35266.0], [58.5, 35270.0], [58.6, 35275.0], [58.7, 35284.0], [58.8, 35287.0], [58.9, 35289.0], [59.0, 35295.0], [59.1, 35299.0], [59.2, 35302.0], [59.3, 35306.0], [59.4, 35316.0], [59.5, 35322.0], [59.6, 35328.0], [59.7, 35332.0], [59.8, 35342.0], [59.9, 35349.0], [60.0, 35354.0], [60.1, 35359.0], [60.2, 35371.0], [60.3, 35379.0], [60.4, 35385.0], [60.5, 35395.0], [60.6, 35413.0], [60.7, 35426.0], [60.8, 35431.0], [60.9, 35437.0], [61.0, 35443.0], [61.1, 35446.0], [61.2, 35447.0], [61.3, 35452.0], [61.4, 35456.0], [61.5, 35460.0], [61.6, 35462.0], [61.7, 35465.0], [61.8, 35467.0], [61.9, 35470.0], [62.0, 35472.0], [62.1, 35475.0], [62.2, 35479.0], [62.3, 35480.0], [62.4, 35482.0], [62.5, 35484.0], [62.6, 35487.0], [62.7, 35489.0], [62.8, 35491.0], [62.9, 35493.0], [63.0, 35497.0], [63.1, 35502.0], [63.2, 35505.0], [63.3, 35515.0], [63.4, 35518.0], [63.5, 35523.0], [63.6, 35530.0], [63.7, 35577.0], [63.8, 35621.0], [63.9, 35630.0], [64.0, 35636.0], [64.1, 35681.0], [64.2, 35701.0], [64.3, 35713.0], [64.4, 35746.0], [64.5, 35781.0], [64.6, 35808.0], [64.7, 35818.0], [64.8, 35824.0], [64.9, 35840.0], [65.0, 35850.0], [65.1, 35859.0], [65.2, 35880.0], [65.3, 35924.0], [65.4, 35959.0], [65.5, 35966.0], [65.6, 35971.0], [65.7, 35973.0], [65.8, 35974.0], [65.9, 35975.0], [66.0, 35978.0], [66.1, 35980.0], [66.2, 35983.0], [66.3, 35985.0], [66.4, 35989.0], [66.5, 35990.0], [66.6, 35992.0], [66.7, 35993.0], [66.8, 35995.0], [66.9, 35997.0], [67.0, 35998.0], [67.1, 36000.0], [67.2, 36004.0], [67.3, 36008.0], [67.4, 36012.0], [67.5, 36016.0], [67.6, 36028.0], [67.7, 36048.0], [67.8, 36220.0], [67.9, 36318.0], [68.0, 36375.0], [68.1, 36565.0], [68.2, 36658.0], [68.3, 36811.0], [68.4, 36822.0], [68.5, 36840.0], [68.6, 36880.0], [68.7, 36914.0], [68.8, 36957.0], [68.9, 36997.0], [69.0, 37020.0], [69.1, 37047.0], [69.2, 37069.0], [69.3, 37204.0], [69.4, 37372.0], [69.5, 37525.0], [69.6, 37905.0], [69.7, 37992.0], [69.8, 38142.0], [69.9, 38147.0], [70.0, 38150.0], [70.1, 38153.0], [70.2, 38156.0], [70.3, 38158.0], [70.4, 38159.0], [70.5, 38162.0], [70.6, 38166.0], [70.7, 38169.0], [70.8, 38173.0], [70.9, 38175.0], [71.0, 38178.0], [71.1, 38184.0], [71.2, 38188.0], [71.3, 38410.0], [71.4, 39092.0], [71.5, 39438.0], [71.6, 40499.0], [71.7, 41832.0], [71.8, 42352.0], [71.9, 42496.0], [72.0, 42722.0], [72.1, 43193.0], [72.2, 43429.0], [72.3, 43690.0], [72.4, 43735.0], [72.5, 43795.0], [72.6, 43838.0], [72.7, 43914.0], [72.8, 43961.0], [72.9, 44114.0], [73.0, 44219.0], [73.1, 44322.0], [73.2, 44398.0], [73.3, 44485.0], [73.4, 44692.0], [73.5, 44844.0], [73.6, 44908.0], [73.7, 44953.0], [73.8, 45040.0], [73.9, 45197.0], [74.0, 45288.0], [74.1, 45330.0], [74.2, 45351.0], [74.3, 45381.0], [74.4, 45418.0], [74.5, 45455.0], [74.6, 45466.0], [74.7, 45493.0], [74.8, 45525.0], [74.9, 45547.0], [75.0, 45606.0], [75.1, 45633.0], [75.2, 45670.0], [75.3, 45749.0], [75.4, 45780.0], [75.5, 45820.0], [75.6, 45894.0], [75.7, 45975.0], [75.8, 46021.0], [75.9, 46055.0], [76.0, 46070.0], [76.1, 46157.0], [76.2, 46314.0], [76.3, 46384.0], [76.4, 46419.0], [76.5, 46456.0], [76.6, 46488.0], [76.7, 46538.0], [76.8, 46615.0], [76.9, 46670.0], [77.0, 46816.0], [77.1, 46828.0], [77.2, 46912.0], [77.3, 47014.0], [77.4, 47135.0], [77.5, 47145.0], [77.6, 47160.0], [77.7, 47166.0], [77.8, 47173.0], [77.9, 47179.0], [78.0, 47185.0], [78.1, 47197.0], [78.2, 47203.0], [78.3, 47228.0], [78.4, 47347.0], [78.5, 47474.0], [78.6, 47564.0], [78.7, 47684.0], [78.8, 47702.0], [78.9, 47748.0], [79.0, 47836.0], [79.1, 47875.0], [79.2, 47957.0], [79.3, 47983.0], [79.4, 48006.0], [79.5, 48059.0], [79.6, 48114.0], [79.7, 48161.0], [79.8, 48218.0], [79.9, 48247.0], [80.0, 48294.0], [80.1, 48357.0], [80.2, 48400.0], [80.3, 48471.0], [80.4, 48498.0], [80.5, 48523.0], [80.6, 48557.0], [80.7, 48581.0], [80.8, 48603.0], [80.9, 48637.0], [81.0, 48658.0], [81.1, 48684.0], [81.2, 48716.0], [81.3, 48792.0], [81.4, 48831.0], [81.5, 48844.0], [81.6, 48851.0], [81.7, 48925.0], [81.8, 48981.0], [81.9, 48988.0], [82.0, 49006.0], [82.1, 49042.0], [82.2, 49085.0], [82.3, 49119.0], [82.4, 49144.0], [82.5, 49153.0], [82.6, 49166.0], [82.7, 49171.0], [82.8, 49176.0], [82.9, 49187.0], [83.0, 49195.0], [83.1, 49203.0], [83.2, 49208.0], [83.3, 49215.0], [83.4, 49221.0], [83.5, 49227.0], [83.6, 49241.0], [83.7, 49274.0], [83.8, 49328.0], [83.9, 49366.0], [84.0, 49403.0], [84.1, 49428.0], [84.2, 49510.0], [84.3, 49548.0], [84.4, 49589.0], [84.5, 49593.0], [84.6, 49603.0], [84.7, 49613.0], [84.8, 49619.0], [84.9, 49655.0], [85.0, 49691.0], [85.1, 49723.0], [85.2, 49756.0], [85.3, 49823.0], [85.4, 49860.0], [85.5, 49882.0], [85.6, 49891.0], [85.7, 49928.0], [85.8, 49961.0], [85.9, 50043.0], [86.0, 50079.0], [86.1, 50139.0], [86.2, 50215.0], [86.3, 50329.0], [86.4, 50395.0], [86.5, 50472.0], [86.6, 50592.0], [86.7, 50633.0], [86.8, 50872.0], [86.9, 51008.0], [87.0, 51175.0], [87.1, 51204.0], [87.2, 51338.0], [87.3, 51501.0], [87.4, 51519.0], [87.5, 51526.0], [87.6, 51535.0], [87.7, 51550.0], [87.8, 51575.0], [87.9, 51614.0], [88.0, 51655.0], [88.1, 51759.0], [88.2, 51836.0], [88.3, 51851.0], [88.4, 51864.0], [88.5, 51871.0], [88.6, 51885.0], [88.7, 51897.0], [88.8, 51903.0], [88.9, 51919.0], [89.0, 51936.0], [89.1, 51960.0], [89.2, 51969.0], [89.3, 51981.0], [89.4, 51991.0], [89.5, 51999.0], [89.6, 52030.0], [89.7, 52083.0], [89.8, 52132.0], [89.9, 52172.0], [90.0, 52226.0], [90.1, 52316.0], [90.2, 52337.0], [90.3, 52370.0], [90.4, 52377.0], [90.5, 52391.0], [90.6, 52408.0], [90.7, 52411.0], [90.8, 52420.0], [90.9, 52425.0], [91.0, 52428.0], [91.1, 52433.0], [91.2, 52450.0], [91.3, 52463.0], [91.4, 52470.0], [91.5, 52487.0], [91.6, 52502.0], [91.7, 52551.0], [91.8, 52628.0], [91.9, 52640.0], [92.0, 52706.0], [92.1, 52755.0], [92.2, 52764.0], [92.3, 52771.0], [92.4, 52776.0], [92.5, 52789.0], [92.6, 52801.0], [92.7, 52808.0], [92.8, 52828.0], [92.9, 52839.0], [93.0, 52857.0], [93.1, 52879.0], [93.2, 52898.0], [93.3, 52947.0], [93.4, 52960.0], [93.5, 52981.0], [93.6, 52989.0], [93.7, 52995.0], [93.8, 53010.0], [93.9, 53028.0], [94.0, 53062.0], [94.1, 53095.0], [94.2, 53124.0], [94.3, 53152.0], [94.4, 53157.0], [94.5, 53161.0], [94.6, 53165.0], [94.7, 53169.0], [94.8, 53193.0], [94.9, 53381.0], [95.0, 53583.0], [95.1, 53672.0], [95.2, 53689.0], [95.3, 53846.0], [95.4, 53881.0], [95.5, 53915.0], [95.6, 54131.0], [95.7, 54177.0], [95.8, 54181.0], [95.9, 54439.0], [96.0, 54593.0], [96.1, 54602.0], [96.2, 54607.0], [96.3, 54656.0], [96.4, 54744.0], [96.5, 54984.0], [96.6, 55114.0], [96.7, 55315.0], [96.8, 55330.0], [96.9, 55335.0], [97.0, 55340.0], [97.1, 55342.0], [97.2, 55347.0], [97.3, 55400.0], [97.4, 55544.0], [97.5, 55767.0], [97.6, 55804.0], [97.7, 55820.0], [97.8, 55950.0], [97.9, 56022.0], [98.0, 56043.0], [98.1, 56054.0], [98.2, 56090.0], [98.3, 56202.0], [98.4, 56323.0], [98.5, 56331.0], [98.6, 56337.0], [98.7, 56348.0], [98.8, 56400.0], [98.9, 56597.0], [99.0, 56895.0], [99.1, 57916.0], [99.2, 57982.0], [99.3, 58161.0], [99.4, 58275.0], [99.5, 58499.0], [99.6, 58507.0], [99.7, 58516.0], [99.8, 58559.0], [99.9, 58631.0], [100.0, 59525.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[0.0, 83169.0], [0.1, 83169.0], [0.2, 83169.0], [0.3, 83169.0], [0.4, 83169.0], [0.5, 83169.0], [0.6, 83169.0], [0.7, 83169.0], [0.8, 83169.0], [0.9, 83169.0], [1.0, 83169.0], [1.1, 83169.0], [1.2, 83169.0], [1.3, 83169.0], [1.4, 83169.0], [1.5, 83169.0], [1.6, 83169.0], [1.7, 83169.0], [1.8, 83169.0], [1.9, 83169.0], [2.0, 83169.0], [2.1, 83169.0], [2.2, 83169.0], [2.3, 83169.0], [2.4, 83169.0], [2.5, 83169.0], [2.6, 83169.0], [2.7, 83169.0], [2.8, 83169.0], [2.9, 83169.0], [3.0, 83169.0], [3.1, 83169.0], [3.2, 83169.0], [3.3, 83169.0], [3.4, 83169.0], [3.5, 83169.0], [3.6, 83169.0], [3.7, 83169.0], [3.8, 83169.0], [3.9, 83169.0], [4.0, 83169.0], [4.1, 83169.0], [4.2, 83169.0], [4.3, 83169.0], [4.4, 83169.0], [4.5, 83169.0], [4.6, 83169.0], [4.7, 83169.0], [4.8, 83169.0], [4.9, 83169.0], [5.0, 83169.0], [5.1, 83169.0], [5.2, 83169.0], [5.3, 83169.0], [5.4, 83169.0], [5.5, 83169.0], [5.6, 83169.0], [5.7, 83169.0], [5.8, 83169.0], [5.9, 83169.0], [6.0, 83169.0], [6.1, 83169.0], [6.2, 83169.0], [6.3, 83169.0], [6.4, 83169.0], [6.5, 83169.0], [6.6, 83169.0], [6.7, 83169.0], [6.8, 83169.0], [6.9, 83169.0], [7.0, 83169.0], [7.1, 83169.0], [7.2, 83169.0], [7.3, 83169.0], [7.4, 83169.0], [7.5, 83169.0], [7.6, 83169.0], [7.7, 83169.0], [7.8, 83169.0], [7.9, 83169.0], [8.0, 83169.0], [8.1, 83169.0], [8.2, 83169.0], [8.3, 83169.0], [8.4, 83169.0], [8.5, 83169.0], [8.6, 83169.0], [8.7, 83169.0], [8.8, 83169.0], [8.9, 83169.0], [9.0, 83169.0], [9.1, 83169.0], [9.2, 83169.0], [9.3, 83169.0], [9.4, 83169.0], [9.5, 83169.0], [9.6, 83169.0], [9.7, 83169.0], [9.8, 83169.0], [9.9, 83169.0], [10.0, 83169.0], [10.1, 83169.0], [10.2, 83169.0], [10.3, 83169.0], [10.4, 83169.0], [10.5, 83169.0], [10.6, 83169.0], [10.7, 83169.0], [10.8, 83169.0], [10.9, 83169.0], [11.0, 83169.0], [11.1, 83169.0], [11.2, 83169.0], [11.3, 83169.0], [11.4, 83169.0], [11.5, 83169.0], [11.6, 83169.0], [11.7, 83169.0], [11.8, 83169.0], [11.9, 83169.0], [12.0, 83169.0], [12.1, 83169.0], [12.2, 83169.0], [12.3, 83169.0], [12.4, 83169.0], [12.5, 83169.0], [12.6, 83169.0], [12.7, 83169.0], [12.8, 83169.0], [12.9, 83169.0], [13.0, 83169.0], [13.1, 83169.0], [13.2, 83169.0], [13.3, 83169.0], [13.4, 83169.0], [13.5, 83169.0], [13.6, 83169.0], [13.7, 83169.0], [13.8, 83169.0], [13.9, 83169.0], [14.0, 83169.0], [14.1, 83169.0], [14.2, 83169.0], [14.3, 83169.0], [14.4, 83169.0], [14.5, 83169.0], [14.6, 83169.0], [14.7, 83169.0], [14.8, 83169.0], [14.9, 83169.0], [15.0, 83169.0], [15.1, 83169.0], [15.2, 83169.0], [15.3, 83169.0], [15.4, 83169.0], [15.5, 83169.0], [15.6, 83169.0], [15.7, 83169.0], [15.8, 83169.0], [15.9, 83169.0], [16.0, 83169.0], [16.1, 83169.0], [16.2, 83169.0], [16.3, 83169.0], [16.4, 83169.0], [16.5, 83169.0], [16.6, 83169.0], [16.7, 83169.0], [16.8, 83169.0], [16.9, 83169.0], [17.0, 83169.0], [17.1, 83169.0], [17.2, 83169.0], [17.3, 83169.0], [17.4, 83169.0], [17.5, 83169.0], [17.6, 83169.0], [17.7, 83169.0], [17.8, 83169.0], [17.9, 83169.0], [18.0, 83169.0], [18.1, 83169.0], [18.2, 83169.0], [18.3, 83169.0], [18.4, 83169.0], [18.5, 83169.0], [18.6, 83169.0], [18.7, 83169.0], [18.8, 83169.0], [18.9, 83169.0], [19.0, 83169.0], [19.1, 83169.0], [19.2, 83169.0], [19.3, 83169.0], [19.4, 83169.0], [19.5, 83169.0], [19.6, 83169.0], [19.7, 83169.0], [19.8, 83169.0], [19.9, 83169.0], [20.0, 83169.0], [20.1, 83169.0], [20.2, 83169.0], [20.3, 83169.0], [20.4, 83169.0], [20.5, 83169.0], [20.6, 83169.0], [20.7, 83169.0], [20.8, 83169.0], [20.9, 83169.0], [21.0, 83169.0], [21.1, 83169.0], [21.2, 83169.0], [21.3, 83169.0], [21.4, 83169.0], [21.5, 83169.0], [21.6, 83169.0], [21.7, 83169.0], [21.8, 83169.0], [21.9, 83169.0], [22.0, 83169.0], [22.1, 83169.0], [22.2, 83169.0], [22.3, 83169.0], [22.4, 83169.0], [22.5, 83169.0], [22.6, 83169.0], [22.7, 83169.0], [22.8, 83169.0], [22.9, 83169.0], [23.0, 83169.0], [23.1, 83169.0], [23.2, 83169.0], [23.3, 83169.0], [23.4, 83169.0], [23.5, 83169.0], [23.6, 83169.0], [23.7, 83169.0], [23.8, 83169.0], [23.9, 83169.0], [24.0, 83169.0], [24.1, 83169.0], [24.2, 83169.0], [24.3, 83169.0], [24.4, 83169.0], [24.5, 83169.0], [24.6, 83169.0], [24.7, 83169.0], [24.8, 83169.0], [24.9, 83169.0], [25.0, 83169.0], [25.1, 83169.0], [25.2, 83169.0], [25.3, 83169.0], [25.4, 83169.0], [25.5, 83169.0], [25.6, 83169.0], [25.7, 83169.0], [25.8, 83169.0], [25.9, 83169.0], [26.0, 83169.0], [26.1, 83169.0], [26.2, 83169.0], [26.3, 83169.0], [26.4, 83169.0], [26.5, 83169.0], [26.6, 83169.0], [26.7, 83169.0], [26.8, 83169.0], [26.9, 83169.0], [27.0, 83169.0], [27.1, 83169.0], [27.2, 83169.0], [27.3, 83169.0], [27.4, 83169.0], [27.5, 83169.0], [27.6, 83169.0], [27.7, 83169.0], [27.8, 83169.0], [27.9, 83169.0], [28.0, 83169.0], [28.1, 83169.0], [28.2, 83169.0], [28.3, 83169.0], [28.4, 83169.0], [28.5, 83169.0], [28.6, 83169.0], [28.7, 83169.0], [28.8, 83169.0], [28.9, 83169.0], [29.0, 83169.0], [29.1, 83169.0], [29.2, 83169.0], [29.3, 83169.0], [29.4, 83169.0], [29.5, 83169.0], [29.6, 83169.0], [29.7, 83169.0], [29.8, 83169.0], [29.9, 83169.0], [30.0, 83169.0], [30.1, 83169.0], [30.2, 83169.0], [30.3, 83169.0], [30.4, 83169.0], [30.5, 83169.0], [30.6, 83169.0], [30.7, 83169.0], [30.8, 83169.0], [30.9, 83169.0], [31.0, 83169.0], [31.1, 83169.0], [31.2, 83169.0], [31.3, 83169.0], [31.4, 83169.0], [31.5, 83169.0], [31.6, 83169.0], [31.7, 83169.0], [31.8, 83169.0], [31.9, 83169.0], [32.0, 83169.0], [32.1, 83169.0], [32.2, 83169.0], [32.3, 83169.0], [32.4, 83169.0], [32.5, 83169.0], [32.6, 83169.0], [32.7, 83169.0], [32.8, 83169.0], [32.9, 83169.0], [33.0, 83169.0], [33.1, 83169.0], [33.2, 83169.0], [33.3, 83169.0], [33.4, 83169.0], [33.5, 83169.0], [33.6, 83169.0], [33.7, 83169.0], [33.8, 83169.0], [33.9, 83169.0], [34.0, 83169.0], [34.1, 83169.0], [34.2, 83169.0], [34.3, 83169.0], [34.4, 83169.0], [34.5, 83169.0], [34.6, 83169.0], [34.7, 83169.0], [34.8, 83169.0], [34.9, 83169.0], [35.0, 83169.0], [35.1, 83169.0], [35.2, 83169.0], [35.3, 83169.0], [35.4, 83169.0], [35.5, 83169.0], [35.6, 83169.0], [35.7, 83169.0], [35.8, 83169.0], [35.9, 83169.0], [36.0, 83169.0], [36.1, 83169.0], [36.2, 83169.0], [36.3, 83169.0], [36.4, 83169.0], [36.5, 83169.0], [36.6, 83169.0], [36.7, 83169.0], [36.8, 83169.0], [36.9, 83169.0], [37.0, 83169.0], [37.1, 83169.0], [37.2, 83169.0], [37.3, 83169.0], [37.4, 83169.0], [37.5, 83169.0], [37.6, 83169.0], [37.7, 83169.0], [37.8, 83169.0], [37.9, 83169.0], [38.0, 83169.0], [38.1, 83169.0], [38.2, 83169.0], [38.3, 83169.0], [38.4, 83169.0], [38.5, 83169.0], [38.6, 83169.0], [38.7, 83169.0], [38.8, 83169.0], [38.9, 83169.0], [39.0, 83169.0], [39.1, 83169.0], [39.2, 83169.0], [39.3, 83169.0], [39.4, 83169.0], [39.5, 83169.0], [39.6, 83169.0], [39.7, 83169.0], [39.8, 83169.0], [39.9, 83169.0], [40.0, 83169.0], [40.1, 83169.0], [40.2, 83169.0], [40.3, 83169.0], [40.4, 83169.0], [40.5, 83169.0], [40.6, 83169.0], [40.7, 83169.0], [40.8, 83169.0], [40.9, 83169.0], [41.0, 83169.0], [41.1, 83169.0], [41.2, 83169.0], [41.3, 83169.0], [41.4, 83169.0], [41.5, 83169.0], [41.6, 83169.0], [41.7, 83169.0], [41.8, 83169.0], [41.9, 83169.0], [42.0, 83169.0], [42.1, 83169.0], [42.2, 83169.0], [42.3, 83169.0], [42.4, 83169.0], [42.5, 83169.0], [42.6, 83169.0], [42.7, 83169.0], [42.8, 83169.0], [42.9, 83169.0], [43.0, 83169.0], [43.1, 83169.0], [43.2, 83169.0], [43.3, 83169.0], [43.4, 83169.0], [43.5, 83169.0], [43.6, 83169.0], [43.7, 83169.0], [43.8, 83169.0], [43.9, 83169.0], [44.0, 83169.0], [44.1, 83169.0], [44.2, 83169.0], [44.3, 83169.0], [44.4, 83169.0], [44.5, 83169.0], [44.6, 83169.0], [44.7, 83169.0], [44.8, 83169.0], [44.9, 83169.0], [45.0, 83169.0], [45.1, 83169.0], [45.2, 83169.0], [45.3, 83169.0], [45.4, 83169.0], [45.5, 83169.0], [45.6, 83169.0], [45.7, 83169.0], [45.8, 83169.0], [45.9, 83169.0], [46.0, 83169.0], [46.1, 83169.0], [46.2, 83169.0], [46.3, 83169.0], [46.4, 83169.0], [46.5, 83169.0], [46.6, 83169.0], [46.7, 83169.0], [46.8, 83169.0], [46.9, 83169.0], [47.0, 83169.0], [47.1, 83169.0], [47.2, 83169.0], [47.3, 83169.0], [47.4, 83169.0], [47.5, 83169.0], [47.6, 83169.0], [47.7, 83169.0], [47.8, 83169.0], [47.9, 83169.0], [48.0, 83169.0], [48.1, 83169.0], [48.2, 83169.0], [48.3, 83169.0], [48.4, 83169.0], [48.5, 83169.0], [48.6, 83169.0], [48.7, 83169.0], [48.8, 83169.0], [48.9, 83169.0], [49.0, 83169.0], [49.1, 83169.0], [49.2, 83169.0], [49.3, 83169.0], [49.4, 83169.0], [49.5, 83169.0], [49.6, 83169.0], [49.7, 83169.0], [49.8, 83169.0], [49.9, 83169.0], [50.0, 83169.0], [50.1, 83169.0], [50.2, 83169.0], [50.3, 83169.0], [50.4, 83169.0], [50.5, 83169.0], [50.6, 83169.0], [50.7, 83169.0], [50.8, 83169.0], [50.9, 83169.0], [51.0, 83169.0], [51.1, 83169.0], [51.2, 83169.0], [51.3, 83169.0], [51.4, 83169.0], [51.5, 83169.0], [51.6, 83169.0], [51.7, 83169.0], [51.8, 83169.0], [51.9, 83169.0], [52.0, 83169.0], [52.1, 83169.0], [52.2, 83169.0], [52.3, 83169.0], [52.4, 83169.0], [52.5, 83169.0], [52.6, 83169.0], [52.7, 83169.0], [52.8, 83169.0], [52.9, 83169.0], [53.0, 83169.0], [53.1, 83169.0], [53.2, 83169.0], [53.3, 83169.0], [53.4, 83169.0], [53.5, 83169.0], [53.6, 83169.0], [53.7, 83169.0], [53.8, 83169.0], [53.9, 83169.0], [54.0, 83169.0], [54.1, 83169.0], [54.2, 83169.0], [54.3, 83169.0], [54.4, 83169.0], [54.5, 83169.0], [54.6, 83169.0], [54.7, 83169.0], [54.8, 83169.0], [54.9, 83169.0], [55.0, 83169.0], [55.1, 83169.0], [55.2, 83169.0], [55.3, 83169.0], [55.4, 83169.0], [55.5, 83169.0], [55.6, 83169.0], [55.7, 83169.0], [55.8, 83169.0], [55.9, 83169.0], [56.0, 83169.0], [56.1, 83169.0], [56.2, 83169.0], [56.3, 83169.0], [56.4, 83169.0], [56.5, 83169.0], [56.6, 83169.0], [56.7, 83169.0], [56.8, 83169.0], [56.9, 83169.0], [57.0, 83169.0], [57.1, 83169.0], [57.2, 83169.0], [57.3, 83169.0], [57.4, 83169.0], [57.5, 83169.0], [57.6, 83169.0], [57.7, 83169.0], [57.8, 83169.0], [57.9, 83169.0], [58.0, 83169.0], [58.1, 83169.0], [58.2, 83169.0], [58.3, 83169.0], [58.4, 83169.0], [58.5, 83169.0], [58.6, 83169.0], [58.7, 83169.0], [58.8, 83169.0], [58.9, 83169.0], [59.0, 83169.0], [59.1, 83169.0], [59.2, 83169.0], [59.3, 83169.0], [59.4, 83169.0], [59.5, 83169.0], [59.6, 83169.0], [59.7, 83169.0], [59.8, 83169.0], [59.9, 83169.0], [60.0, 83169.0], [60.1, 83169.0], [60.2, 83169.0], [60.3, 83169.0], [60.4, 83169.0], [60.5, 83169.0], [60.6, 83169.0], [60.7, 83169.0], [60.8, 83169.0], [60.9, 83169.0], [61.0, 83169.0], [61.1, 83169.0], [61.2, 83169.0], [61.3, 83169.0], [61.4, 83169.0], [61.5, 83169.0], [61.6, 83169.0], [61.7, 83169.0], [61.8, 83169.0], [61.9, 83169.0], [62.0, 83169.0], [62.1, 83169.0], [62.2, 83169.0], [62.3, 83169.0], [62.4, 83169.0], [62.5, 83169.0], [62.6, 83169.0], [62.7, 83169.0], [62.8, 83169.0], [62.9, 83169.0], [63.0, 83169.0], [63.1, 83169.0], [63.2, 83169.0], [63.3, 83169.0], [63.4, 83169.0], [63.5, 83169.0], [63.6, 83169.0], [63.7, 83169.0], [63.8, 83169.0], [63.9, 83169.0], [64.0, 83169.0], [64.1, 83169.0], [64.2, 83169.0], [64.3, 83169.0], [64.4, 83169.0], [64.5, 83169.0], [64.6, 83169.0], [64.7, 83169.0], [64.8, 83169.0], [64.9, 83169.0], [65.0, 83169.0], [65.1, 83169.0], [65.2, 83169.0], [65.3, 83169.0], [65.4, 83169.0], [65.5, 83169.0], [65.6, 83169.0], [65.7, 83169.0], [65.8, 83169.0], [65.9, 83169.0], [66.0, 83169.0], [66.1, 83169.0], [66.2, 83169.0], [66.3, 83169.0], [66.4, 83169.0], [66.5, 83169.0], [66.6, 83169.0], [66.7, 83169.0], [66.8, 83169.0], [66.9, 83169.0], [67.0, 83169.0], [67.1, 83169.0], [67.2, 83169.0], [67.3, 83169.0], [67.4, 83169.0], [67.5, 83169.0], [67.6, 83169.0], [67.7, 83169.0], [67.8, 83169.0], [67.9, 83169.0], [68.0, 83169.0], [68.1, 83169.0], [68.2, 83169.0], [68.3, 83169.0], [68.4, 83169.0], [68.5, 83169.0], [68.6, 83169.0], [68.7, 83169.0], [68.8, 83169.0], [68.9, 83169.0], [69.0, 83169.0], [69.1, 83169.0], [69.2, 83169.0], [69.3, 83169.0], [69.4, 83169.0], [69.5, 83169.0], [69.6, 83169.0], [69.7, 83169.0], [69.8, 83169.0], [69.9, 83169.0], [70.0, 83169.0], [70.1, 83169.0], [70.2, 83169.0], [70.3, 83169.0], [70.4, 83169.0], [70.5, 83169.0], [70.6, 83169.0], [70.7, 83169.0], [70.8, 83169.0], [70.9, 83169.0], [71.0, 83169.0], [71.1, 83169.0], [71.2, 83169.0], [71.3, 83169.0], [71.4, 83169.0], [71.5, 83169.0], [71.6, 83169.0], [71.7, 83169.0], [71.8, 83169.0], [71.9, 83169.0], [72.0, 83169.0], [72.1, 83169.0], [72.2, 83169.0], [72.3, 83169.0], [72.4, 83169.0], [72.5, 83169.0], [72.6, 83169.0], [72.7, 83169.0], [72.8, 83169.0], [72.9, 83169.0], [73.0, 83169.0], [73.1, 83169.0], [73.2, 83169.0], [73.3, 83169.0], [73.4, 83169.0], [73.5, 83169.0], [73.6, 83169.0], [73.7, 83169.0], [73.8, 83169.0], [73.9, 83169.0], [74.0, 83169.0], [74.1, 83169.0], [74.2, 83169.0], [74.3, 83169.0], [74.4, 83169.0], [74.5, 83169.0], [74.6, 83169.0], [74.7, 83169.0], [74.8, 83169.0], [74.9, 83169.0], [75.0, 83169.0], [75.1, 83169.0], [75.2, 83169.0], [75.3, 83169.0], [75.4, 83169.0], [75.5, 83169.0], [75.6, 83169.0], [75.7, 83169.0], [75.8, 83169.0], [75.9, 83169.0], [76.0, 83169.0], [76.1, 83169.0], [76.2, 83169.0], [76.3, 83169.0], [76.4, 83169.0], [76.5, 83169.0], [76.6, 83169.0], [76.7, 83169.0], [76.8, 83169.0], [76.9, 83169.0], [77.0, 83169.0], [77.1, 83169.0], [77.2, 83169.0], [77.3, 83169.0], [77.4, 83169.0], [77.5, 83169.0], [77.6, 83169.0], [77.7, 83169.0], [77.8, 83169.0], [77.9, 83169.0], [78.0, 83169.0], [78.1, 83169.0], [78.2, 83169.0], [78.3, 83169.0], [78.4, 83169.0], [78.5, 83169.0], [78.6, 83169.0], [78.7, 83169.0], [78.8, 83169.0], [78.9, 83169.0], [79.0, 83169.0], [79.1, 83169.0], [79.2, 83169.0], [79.3, 83169.0], [79.4, 83169.0], [79.5, 83169.0], [79.6, 83169.0], [79.7, 83169.0], [79.8, 83169.0], [79.9, 83169.0], [80.0, 83169.0], [80.1, 83169.0], [80.2, 83169.0], [80.3, 83169.0], [80.4, 83169.0], [80.5, 83169.0], [80.6, 83169.0], [80.7, 83169.0], [80.8, 83169.0], [80.9, 83169.0], [81.0, 83169.0], [81.1, 83169.0], [81.2, 83169.0], [81.3, 83169.0], [81.4, 83169.0], [81.5, 83169.0], [81.6, 83169.0], [81.7, 83169.0], [81.8, 83169.0], [81.9, 83169.0], [82.0, 83169.0], [82.1, 83169.0], [82.2, 83169.0], [82.3, 83169.0], [82.4, 83169.0], [82.5, 83169.0], [82.6, 83169.0], [82.7, 83169.0], [82.8, 83169.0], [82.9, 83169.0], [83.0, 83169.0], [83.1, 83169.0], [83.2, 83169.0], [83.3, 83169.0], [83.4, 83169.0], [83.5, 83169.0], [83.6, 83169.0], [83.7, 83169.0], [83.8, 83169.0], [83.9, 83169.0], [84.0, 83169.0], [84.1, 83169.0], [84.2, 83169.0], [84.3, 83169.0], [84.4, 83169.0], [84.5, 83169.0], [84.6, 83169.0], [84.7, 83169.0], [84.8, 83169.0], [84.9, 83169.0], [85.0, 83169.0], [85.1, 83169.0], [85.2, 83169.0], [85.3, 83169.0], [85.4, 83169.0], [85.5, 83169.0], [85.6, 83169.0], [85.7, 83169.0], [85.8, 83169.0], [85.9, 83169.0], [86.0, 83169.0], [86.1, 83169.0], [86.2, 83169.0], [86.3, 83169.0], [86.4, 83169.0], [86.5, 83169.0], [86.6, 83169.0], [86.7, 83169.0], [86.8, 83169.0], [86.9, 83169.0], [87.0, 83169.0], [87.1, 83169.0], [87.2, 83169.0], [87.3, 83169.0], [87.4, 83169.0], [87.5, 83169.0], [87.6, 83169.0], [87.7, 83169.0], [87.8, 83169.0], [87.9, 83169.0], [88.0, 83169.0], [88.1, 83169.0], [88.2, 83169.0], [88.3, 83169.0], [88.4, 83169.0], [88.5, 83169.0], [88.6, 83169.0], [88.7, 83169.0], [88.8, 83169.0], [88.9, 83169.0], [89.0, 83169.0], [89.1, 83169.0], [89.2, 83169.0], [89.3, 83169.0], [89.4, 83169.0], [89.5, 83169.0], [89.6, 83169.0], [89.7, 83169.0], [89.8, 83169.0], [89.9, 83169.0], [90.0, 83169.0], [90.1, 83169.0], [90.2, 83169.0], [90.3, 83169.0], [90.4, 83169.0], [90.5, 83169.0], [90.6, 83169.0], [90.7, 83169.0], [90.8, 83169.0], [90.9, 83169.0], [91.0, 83169.0], [91.1, 83169.0], [91.2, 83169.0], [91.3, 83169.0], [91.4, 83169.0], [91.5, 83169.0], [91.6, 83169.0], [91.7, 83169.0], [91.8, 83169.0], [91.9, 83169.0], [92.0, 83169.0], [92.1, 83169.0], [92.2, 83169.0], [92.3, 83169.0], [92.4, 83169.0], [92.5, 83169.0], [92.6, 83169.0], [92.7, 83169.0], [92.8, 83169.0], [92.9, 83169.0], [93.0, 83169.0], [93.1, 83169.0], [93.2, 83169.0], [93.3, 83169.0], [93.4, 83169.0], [93.5, 83169.0], [93.6, 83169.0], [93.7, 83169.0], [93.8, 83169.0], [93.9, 83169.0], [94.0, 83169.0], [94.1, 83169.0], [94.2, 83169.0], [94.3, 83169.0], [94.4, 83169.0], [94.5, 83169.0], [94.6, 83169.0], [94.7, 83169.0], [94.8, 83169.0], [94.9, 83169.0], [95.0, 83169.0], [95.1, 83169.0], [95.2, 83169.0], [95.3, 83169.0], [95.4, 83169.0], [95.5, 83169.0], [95.6, 83169.0], [95.7, 83169.0], [95.8, 83169.0], [95.9, 83169.0], [96.0, 83169.0], [96.1, 83169.0], [96.2, 83169.0], [96.3, 83169.0], [96.4, 83169.0], [96.5, 83169.0], [96.6, 83169.0], [96.7, 83169.0], [96.8, 83169.0], [96.9, 83169.0], [97.0, 83169.0], [97.1, 83169.0], [97.2, 83169.0], [97.3, 83169.0], [97.4, 83169.0], [97.5, 83169.0], [97.6, 83169.0], [97.7, 83169.0], [97.8, 83169.0], [97.9, 83169.0], [98.0, 83169.0], [98.1, 83169.0], [98.2, 83169.0], [98.3, 83169.0], [98.4, 83169.0], [98.5, 83169.0], [98.6, 83169.0], [98.7, 83169.0], [98.8, 83169.0], [98.9, 83169.0], [99.0, 83169.0], [99.1, 83169.0], [99.2, 83169.0], [99.3, 83169.0], [99.4, 83169.0], [99.5, 83169.0], [99.6, 83169.0], [99.7, 83169.0], [99.8, 83169.0], [99.9, 83169.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[0.0, 12709.0], [0.1, 12709.0], [0.2, 12709.0], [0.3, 12709.0], [0.4, 13142.0], [0.5, 13142.0], [0.6, 13142.0], [0.7, 13980.0], [0.8, 13980.0], [0.9, 13980.0], [1.0, 15478.0], [1.1, 15478.0], [1.2, 15478.0], [1.3, 15478.0], [1.4, 15512.0], [1.5, 15512.0], [1.6, 15512.0], [1.7, 15718.0], [1.8, 15718.0], [1.9, 15718.0], [2.0, 16599.0], [2.1, 16599.0], [2.2, 16599.0], [2.3, 16599.0], [2.4, 16687.0], [2.5, 16687.0], [2.6, 16687.0], [2.7, 16736.0], [2.8, 16736.0], [2.9, 16736.0], [3.0, 16889.0], [3.1, 16889.0], [3.2, 16889.0], [3.3, 16889.0], [3.4, 17213.0], [3.5, 17213.0], [3.6, 17213.0], [3.7, 17633.0], [3.8, 17633.0], [3.9, 17633.0], [4.0, 18069.0], [4.1, 18069.0], [4.2, 18069.0], [4.3, 18069.0], [4.4, 18474.0], [4.5, 18474.0], [4.6, 18474.0], [4.7, 18838.0], [4.8, 18838.0], [4.9, 18838.0], [5.0, 19031.0], [5.1, 19031.0], [5.2, 19031.0], [5.3, 19031.0], [5.4, 19189.0], [5.5, 19189.0], [5.6, 19189.0], [5.7, 19665.0], [5.8, 19665.0], [5.9, 19665.0], [6.0, 20096.0], [6.1, 20096.0], [6.2, 20096.0], [6.3, 20096.0], [6.4, 20304.0], [6.5, 20304.0], [6.6, 20304.0], [6.7, 20431.0], [6.8, 20431.0], [6.9, 20431.0], [7.0, 20496.0], [7.1, 20496.0], [7.2, 20496.0], [7.3, 20496.0], [7.4, 20584.0], [7.5, 20584.0], [7.6, 20584.0], [7.7, 20619.0], [7.8, 20619.0], [7.9, 20619.0], [8.0, 20628.0], [8.1, 20628.0], [8.2, 20628.0], [8.3, 20628.0], [8.4, 20737.0], [8.5, 20737.0], [8.6, 20737.0], [8.7, 20747.0], [8.8, 20747.0], [8.9, 20747.0], [9.0, 20782.0], [9.1, 20782.0], [9.2, 20782.0], [9.3, 20782.0], [9.4, 21035.0], [9.5, 21035.0], [9.6, 21035.0], [9.7, 21050.0], [9.8, 21050.0], [9.9, 21050.0], [10.0, 21099.0], [10.1, 21099.0], [10.2, 21099.0], [10.3, 21099.0], [10.4, 21115.0], [10.5, 21115.0], [10.6, 21115.0], [10.7, 21277.0], [10.8, 21277.0], [10.9, 21277.0], [11.0, 21277.0], [11.1, 21427.0], [11.2, 21427.0], [11.3, 21427.0], [11.4, 21790.0], [11.5, 21790.0], [11.6, 21790.0], [11.7, 22044.0], [11.8, 22044.0], [11.9, 22044.0], [12.0, 22044.0], [12.1, 22106.0], [12.2, 22106.0], [12.3, 22106.0], [12.4, 22183.0], [12.5, 22183.0], [12.6, 22183.0], [12.7, 22457.0], [12.8, 22457.0], [12.9, 22457.0], [13.0, 22457.0], [13.1, 22765.0], [13.2, 22765.0], [13.3, 22765.0], [13.4, 22773.0], [13.5, 22773.0], [13.6, 22773.0], [13.7, 23060.0], [13.8, 23060.0], [13.9, 23060.0], [14.0, 23060.0], [14.1, 23123.0], [14.2, 23123.0], [14.3, 23123.0], [14.4, 23220.0], [14.5, 23220.0], [14.6, 23220.0], [14.7, 23336.0], [14.8, 23336.0], [14.9, 23336.0], [15.0, 23336.0], [15.1, 23907.0], [15.2, 23907.0], [15.3, 23907.0], [15.4, 23970.0], [15.5, 23970.0], [15.6, 23970.0], [15.7, 23981.0], [15.8, 23981.0], [15.9, 23981.0], [16.0, 23981.0], [16.1, 24068.0], [16.2, 24068.0], [16.3, 24068.0], [16.4, 24079.0], [16.5, 24079.0], [16.6, 24079.0], [16.7, 24216.0], [16.8, 24216.0], [16.9, 24216.0], [17.0, 24216.0], [17.1, 24280.0], [17.2, 24280.0], [17.3, 24280.0], [17.4, 24318.0], [17.5, 24318.0], [17.6, 24318.0], [17.7, 24370.0], [17.8, 24370.0], [17.9, 24370.0], [18.0, 24370.0], [18.1, 24491.0], [18.2, 24491.0], [18.3, 24491.0], [18.4, 24567.0], [18.5, 24567.0], [18.6, 24567.0], [18.7, 24580.0], [18.8, 24580.0], [18.9, 24580.0], [19.0, 24588.0], [19.1, 24588.0], [19.2, 24588.0], [19.3, 24588.0], [19.4, 24804.0], [19.5, 24804.0], [19.6, 24804.0], [19.7, 24805.0], [19.8, 24805.0], [19.9, 24805.0], [20.0, 24949.0], [20.1, 24949.0], [20.2, 24949.0], [20.3, 24949.0], [20.4, 24990.0], [20.5, 24990.0], [20.6, 24990.0], [20.7, 25037.0], [20.8, 25037.0], [20.9, 25037.0], [21.0, 25078.0], [21.1, 25078.0], [21.2, 25078.0], [21.3, 25078.0], [21.4, 25254.0], [21.5, 25254.0], [21.6, 25254.0], [21.7, 25293.0], [21.8, 25293.0], [21.9, 25293.0], [22.0, 25358.0], [22.1, 25358.0], [22.2, 25358.0], [22.3, 25358.0], [22.4, 25374.0], [22.5, 25374.0], [22.6, 25374.0], [22.7, 25381.0], [22.8, 25381.0], [22.9, 25381.0], [23.0, 25406.0], [23.1, 25406.0], [23.2, 25406.0], [23.3, 25406.0], [23.4, 25415.0], [23.5, 25415.0], [23.6, 25415.0], [23.7, 25461.0], [23.8, 25461.0], [23.9, 25461.0], [24.0, 25584.0], [24.1, 25584.0], [24.2, 25584.0], [24.3, 25584.0], [24.4, 25602.0], [24.5, 25602.0], [24.6, 25602.0], [24.7, 25698.0], [24.8, 25698.0], [24.9, 25698.0], [25.0, 25700.0], [25.1, 25700.0], [25.2, 25700.0], [25.3, 25700.0], [25.4, 25725.0], [25.5, 25725.0], [25.6, 25725.0], [25.7, 25737.0], [25.8, 25737.0], [25.9, 25737.0], [26.0, 25749.0], [26.1, 25749.0], [26.2, 25749.0], [26.3, 25749.0], [26.4, 25809.0], [26.5, 25809.0], [26.6, 25809.0], [26.7, 25834.0], [26.8, 25834.0], [26.9, 25834.0], [27.0, 25844.0], [27.1, 25844.0], [27.2, 25844.0], [27.3, 25844.0], [27.4, 25876.0], [27.5, 25876.0], [27.6, 25876.0], [27.7, 25950.0], [27.8, 25950.0], [27.9, 25950.0], [28.0, 25962.0], [28.1, 25962.0], [28.2, 25962.0], [28.3, 25962.0], [28.4, 25973.0], [28.5, 25973.0], [28.6, 25973.0], [28.7, 26029.0], [28.8, 26029.0], [28.9, 26029.0], [29.0, 26075.0], [29.1, 26075.0], [29.2, 26075.0], [29.3, 26075.0], [29.4, 26100.0], [29.5, 26100.0], [29.6, 26100.0], [29.7, 26100.0], [29.8, 26100.0], [29.9, 26100.0], [30.0, 26116.0], [30.1, 26116.0], [30.2, 26116.0], [30.3, 26116.0], [30.4, 26151.0], [30.5, 26151.0], [30.6, 26151.0], [30.7, 26153.0], [30.8, 26153.0], [30.9, 26153.0], [31.0, 26207.0], [31.1, 26207.0], [31.2, 26207.0], [31.3, 26207.0], [31.4, 26212.0], [31.5, 26212.0], [31.6, 26212.0], [31.7, 26220.0], [31.8, 26220.0], [31.9, 26220.0], [32.0, 26222.0], [32.1, 26222.0], [32.2, 26222.0], [32.3, 26222.0], [32.4, 26277.0], [32.5, 26277.0], [32.6, 26277.0], [32.7, 26314.0], [32.8, 26314.0], [32.9, 26314.0], [33.0, 26345.0], [33.1, 26345.0], [33.2, 26345.0], [33.3, 26345.0], [33.4, 26348.0], [33.5, 26348.0], [33.6, 26348.0], [33.7, 26358.0], [33.8, 26358.0], [33.9, 26358.0], [34.0, 26389.0], [34.1, 26389.0], [34.2, 26389.0], [34.3, 26389.0], [34.4, 26394.0], [34.5, 26394.0], [34.6, 26394.0], [34.7, 26407.0], [34.8, 26407.0], [34.9, 26407.0], [35.0, 26451.0], [35.1, 26451.0], [35.2, 26451.0], [35.3, 26451.0], [35.4, 26467.0], [35.5, 26467.0], [35.6, 26467.0], [35.7, 26538.0], [35.8, 26538.0], [35.9, 26538.0], [36.0, 26572.0], [36.1, 26572.0], [36.2, 26572.0], [36.3, 26572.0], [36.4, 26576.0], [36.5, 26576.0], [36.6, 26576.0], [36.7, 26610.0], [36.8, 26610.0], [36.9, 26610.0], [37.0, 26614.0], [37.1, 26614.0], [37.2, 26614.0], [37.3, 26614.0], [37.4, 26622.0], [37.5, 26622.0], [37.6, 26622.0], [37.7, 26645.0], [37.8, 26645.0], [37.9, 26645.0], [38.0, 26647.0], [38.1, 26647.0], [38.2, 26647.0], [38.3, 26647.0], [38.4, 26655.0], [38.5, 26655.0], [38.6, 26655.0], [38.7, 26682.0], [38.8, 26682.0], [38.9, 26682.0], [39.0, 26682.0], [39.1, 26696.0], [39.2, 26696.0], [39.3, 26696.0], [39.4, 26744.0], [39.5, 26744.0], [39.6, 26744.0], [39.7, 26744.0], [39.8, 26744.0], [39.9, 26744.0], [40.0, 26744.0], [40.1, 26750.0], [40.2, 26750.0], [40.3, 26750.0], [40.4, 26762.0], [40.5, 26762.0], [40.6, 26762.0], [40.7, 26799.0], [40.8, 26799.0], [40.9, 26799.0], [41.0, 26799.0], [41.1, 26822.0], [41.2, 26822.0], [41.3, 26822.0], [41.4, 26831.0], [41.5, 26831.0], [41.6, 26831.0], [41.7, 26836.0], [41.8, 26836.0], [41.9, 26836.0], [42.0, 26836.0], [42.1, 26841.0], [42.2, 26841.0], [42.3, 26841.0], [42.4, 26856.0], [42.5, 26856.0], [42.6, 26856.0], [42.7, 26879.0], [42.8, 26879.0], [42.9, 26879.0], [43.0, 26879.0], [43.1, 26925.0], [43.2, 26925.0], [43.3, 26925.0], [43.4, 26942.0], [43.5, 26942.0], [43.6, 26942.0], [43.7, 26968.0], [43.8, 26968.0], [43.9, 26968.0], [44.0, 26968.0], [44.1, 26973.0], [44.2, 26973.0], [44.3, 26973.0], [44.4, 27063.0], [44.5, 27063.0], [44.6, 27063.0], [44.7, 27065.0], [44.8, 27065.0], [44.9, 27065.0], [45.0, 27065.0], [45.1, 27144.0], [45.2, 27144.0], [45.3, 27144.0], [45.4, 27144.0], [45.5, 27144.0], [45.6, 27144.0], [45.7, 27158.0], [45.8, 27158.0], [45.9, 27158.0], [46.0, 27158.0], [46.1, 27172.0], [46.2, 27172.0], [46.3, 27172.0], [46.4, 27200.0], [46.5, 27200.0], [46.6, 27200.0], [46.7, 27215.0], [46.8, 27215.0], [46.9, 27215.0], [47.0, 27215.0], [47.1, 27229.0], [47.2, 27229.0], [47.3, 27229.0], [47.4, 27275.0], [47.5, 27275.0], [47.6, 27275.0], [47.7, 27296.0], [47.8, 27296.0], [47.9, 27296.0], [48.0, 27296.0], [48.1, 27317.0], [48.2, 27317.0], [48.3, 27317.0], [48.4, 27350.0], [48.5, 27350.0], [48.6, 27350.0], [48.7, 27371.0], [48.8, 27371.0], [48.9, 27371.0], [49.0, 27371.0], [49.1, 27383.0], [49.2, 27383.0], [49.3, 27383.0], [49.4, 27394.0], [49.5, 27394.0], [49.6, 27394.0], [49.7, 27423.0], [49.8, 27423.0], [49.9, 27423.0], [50.0, 27423.0], [50.1, 27435.0], [50.2, 27435.0], [50.3, 27435.0], [50.4, 27511.0], [50.5, 27511.0], [50.6, 27511.0], [50.7, 27564.0], [50.8, 27564.0], [50.9, 27564.0], [51.0, 27564.0], [51.1, 27603.0], [51.2, 27603.0], [51.3, 27603.0], [51.4, 27638.0], [51.5, 27638.0], [51.6, 27638.0], [51.7, 27674.0], [51.8, 27674.0], [51.9, 27674.0], [52.0, 27674.0], [52.1, 27683.0], [52.2, 27683.0], [52.3, 27683.0], [52.4, 27689.0], [52.5, 27689.0], [52.6, 27689.0], [52.7, 27713.0], [52.8, 27713.0], [52.9, 27713.0], [53.0, 27713.0], [53.1, 27719.0], [53.2, 27719.0], [53.3, 27719.0], [53.4, 27733.0], [53.5, 27733.0], [53.6, 27733.0], [53.7, 27779.0], [53.8, 27779.0], [53.9, 27779.0], [54.0, 27779.0], [54.1, 27779.0], [54.2, 27779.0], [54.3, 27779.0], [54.4, 27798.0], [54.5, 27798.0], [54.6, 27798.0], [54.7, 27884.0], [54.8, 27884.0], [54.9, 27884.0], [55.0, 27884.0], [55.1, 27888.0], [55.2, 27888.0], [55.3, 27888.0], [55.4, 27968.0], [55.5, 27968.0], [55.6, 27968.0], [55.7, 27991.0], [55.8, 27991.0], [55.9, 27991.0], [56.0, 27991.0], [56.1, 27992.0], [56.2, 27992.0], [56.3, 27992.0], [56.4, 28009.0], [56.5, 28009.0], [56.6, 28009.0], [56.7, 28030.0], [56.8, 28030.0], [56.9, 28030.0], [57.0, 28030.0], [57.1, 28034.0], [57.2, 28034.0], [57.3, 28034.0], [57.4, 28061.0], [57.5, 28061.0], [57.6, 28061.0], [57.7, 28091.0], [57.8, 28091.0], [57.9, 28091.0], [58.0, 28091.0], [58.1, 28157.0], [58.2, 28157.0], [58.3, 28157.0], [58.4, 28219.0], [58.5, 28219.0], [58.6, 28219.0], [58.7, 28222.0], [58.8, 28222.0], [58.9, 28222.0], [59.0, 28222.0], [59.1, 28240.0], [59.2, 28240.0], [59.3, 28240.0], [59.4, 28299.0], [59.5, 28299.0], [59.6, 28299.0], [59.7, 28307.0], [59.8, 28307.0], [59.9, 28307.0], [60.0, 28307.0], [60.1, 28340.0], [60.2, 28340.0], [60.3, 28340.0], [60.4, 28441.0], [60.5, 28441.0], [60.6, 28441.0], [60.7, 28455.0], [60.8, 28455.0], [60.9, 28455.0], [61.0, 28455.0], [61.1, 28456.0], [61.2, 28456.0], [61.3, 28456.0], [61.4, 28473.0], [61.5, 28473.0], [61.6, 28473.0], [61.7, 28495.0], [61.8, 28495.0], [61.9, 28495.0], [62.0, 28495.0], [62.1, 28509.0], [62.2, 28509.0], [62.3, 28509.0], [62.4, 28526.0], [62.5, 28526.0], [62.6, 28526.0], [62.7, 28562.0], [62.8, 28562.0], [62.9, 28562.0], [63.0, 28562.0], [63.1, 28573.0], [63.2, 28573.0], [63.3, 28573.0], [63.4, 28583.0], [63.5, 28583.0], [63.6, 28583.0], [63.7, 28594.0], [63.8, 28594.0], [63.9, 28594.0], [64.0, 28594.0], [64.1, 28595.0], [64.2, 28595.0], [64.3, 28595.0], [64.4, 28641.0], [64.5, 28641.0], [64.6, 28641.0], [64.7, 28648.0], [64.8, 28648.0], [64.9, 28648.0], [65.0, 28648.0], [65.1, 28666.0], [65.2, 28666.0], [65.3, 28666.0], [65.4, 28679.0], [65.5, 28679.0], [65.6, 28679.0], [65.7, 28718.0], [65.8, 28718.0], [65.9, 28718.0], [66.0, 28718.0], [66.1, 28718.0], [66.2, 28718.0], [66.3, 28718.0], [66.4, 28723.0], [66.5, 28723.0], [66.6, 28723.0], [66.7, 28758.0], [66.8, 28758.0], [66.9, 28758.0], [67.0, 28758.0], [67.1, 28774.0], [67.2, 28774.0], [67.3, 28774.0], [67.4, 28840.0], [67.5, 28840.0], [67.6, 28840.0], [67.7, 28856.0], [67.8, 28856.0], [67.9, 28856.0], [68.0, 28856.0], [68.1, 28871.0], [68.2, 28871.0], [68.3, 28871.0], [68.4, 28920.0], [68.5, 28920.0], [68.6, 28920.0], [68.7, 28923.0], [68.8, 28923.0], [68.9, 28923.0], [69.0, 28923.0], [69.1, 28943.0], [69.2, 28943.0], [69.3, 28943.0], [69.4, 28978.0], [69.5, 28978.0], [69.6, 28978.0], [69.7, 28981.0], [69.8, 28981.0], [69.9, 28981.0], [70.0, 28981.0], [70.1, 28993.0], [70.2, 28993.0], [70.3, 28993.0], [70.4, 29119.0], [70.5, 29119.0], [70.6, 29119.0], [70.7, 29134.0], [70.8, 29134.0], [70.9, 29134.0], [71.0, 29134.0], [71.1, 29155.0], [71.2, 29155.0], [71.3, 29155.0], [71.4, 29162.0], [71.5, 29162.0], [71.6, 29162.0], [71.7, 29189.0], [71.8, 29189.0], [71.9, 29189.0], [72.0, 29189.0], [72.1, 29191.0], [72.2, 29191.0], [72.3, 29191.0], [72.4, 29211.0], [72.5, 29211.0], [72.6, 29211.0], [72.7, 29224.0], [72.8, 29224.0], [72.9, 29224.0], [73.0, 29224.0], [73.1, 29238.0], [73.2, 29238.0], [73.3, 29238.0], [73.4, 29245.0], [73.5, 29245.0], [73.6, 29245.0], [73.7, 29319.0], [73.8, 29319.0], [73.9, 29319.0], [74.0, 29319.0], [74.1, 29387.0], [74.2, 29387.0], [74.3, 29387.0], [74.4, 29397.0], [74.5, 29397.0], [74.6, 29397.0], [74.7, 29410.0], [74.8, 29410.0], [74.9, 29410.0], [75.0, 29410.0], [75.1, 29421.0], [75.2, 29421.0], [75.3, 29421.0], [75.4, 29427.0], [75.5, 29427.0], [75.6, 29427.0], [75.7, 29438.0], [75.8, 29438.0], [75.9, 29438.0], [76.0, 29477.0], [76.1, 29477.0], [76.2, 29477.0], [76.3, 29477.0], [76.4, 29480.0], [76.5, 29480.0], [76.6, 29480.0], [76.7, 29522.0], [76.8, 29522.0], [76.9, 29522.0], [77.0, 29525.0], [77.1, 29525.0], [77.2, 29525.0], [77.3, 29525.0], [77.4, 29529.0], [77.5, 29529.0], [77.6, 29529.0], [77.7, 29558.0], [77.8, 29558.0], [77.9, 29558.0], [78.0, 29625.0], [78.1, 29625.0], [78.2, 29625.0], [78.3, 29625.0], [78.4, 29702.0], [78.5, 29702.0], [78.6, 29702.0], [78.7, 29743.0], [78.8, 29743.0], [78.9, 29743.0], [79.0, 29749.0], [79.1, 29749.0], [79.2, 29749.0], [79.3, 29749.0], [79.4, 29795.0], [79.5, 29795.0], [79.6, 29795.0], [79.7, 29849.0], [79.8, 29849.0], [79.9, 29849.0], [80.0, 29881.0], [80.1, 29881.0], [80.2, 29881.0], [80.3, 29881.0], [80.4, 29951.0], [80.5, 29951.0], [80.6, 29951.0], [80.7, 30057.0], [80.8, 30057.0], [80.9, 30057.0], [81.0, 30074.0], [81.1, 30074.0], [81.2, 30074.0], [81.3, 30074.0], [81.4, 30076.0], [81.5, 30076.0], [81.6, 30076.0], [81.7, 30100.0], [81.8, 30100.0], [81.9, 30100.0], [82.0, 30115.0], [82.1, 30115.0], [82.2, 30115.0], [82.3, 30115.0], [82.4, 30153.0], [82.5, 30153.0], [82.6, 30153.0], [82.7, 30159.0], [82.8, 30159.0], [82.9, 30159.0], [83.0, 30170.0], [83.1, 30170.0], [83.2, 30170.0], [83.3, 30170.0], [83.4, 30268.0], [83.5, 30268.0], [83.6, 30268.0], [83.7, 30269.0], [83.8, 30269.0], [83.9, 30269.0], [84.0, 30296.0], [84.1, 30296.0], [84.2, 30296.0], [84.3, 30296.0], [84.4, 30414.0], [84.5, 30414.0], [84.6, 30414.0], [84.7, 30417.0], [84.8, 30417.0], [84.9, 30417.0], [85.0, 30435.0], [85.1, 30435.0], [85.2, 30435.0], [85.3, 30435.0], [85.4, 30573.0], [85.5, 30573.0], [85.6, 30573.0], [85.7, 30653.0], [85.8, 30653.0], [85.9, 30653.0], [86.0, 30667.0], [86.1, 30667.0], [86.2, 30667.0], [86.3, 30667.0], [86.4, 30758.0], [86.5, 30758.0], [86.6, 30758.0], [86.7, 30838.0], [86.8, 30838.0], [86.9, 30838.0], [87.0, 31032.0], [87.1, 31032.0], [87.2, 31032.0], [87.3, 31032.0], [87.4, 31250.0], [87.5, 31250.0], [87.6, 31250.0], [87.7, 31295.0], [87.8, 31295.0], [87.9, 31295.0], [88.0, 31320.0], [88.1, 31320.0], [88.2, 31320.0], [88.3, 31320.0], [88.4, 31515.0], [88.5, 31515.0], [88.6, 31515.0], [88.7, 31833.0], [88.8, 31833.0], [88.9, 31833.0], [89.0, 32048.0], [89.1, 32048.0], [89.2, 32048.0], [89.3, 32048.0], [89.4, 32112.0], [89.5, 32112.0], [89.6, 32112.0], [89.7, 32148.0], [89.8, 32148.0], [89.9, 32148.0], [90.0, 32190.0], [90.1, 32190.0], [90.2, 32190.0], [90.3, 32190.0], [90.4, 32379.0], [90.5, 32379.0], [90.6, 32379.0], [90.7, 32518.0], [90.8, 32518.0], [90.9, 32518.0], [91.0, 32574.0], [91.1, 32574.0], [91.2, 32574.0], [91.3, 32574.0], [91.4, 32574.0], [91.5, 32574.0], [91.6, 32574.0], [91.7, 32614.0], [91.8, 32614.0], [91.9, 32614.0], [92.0, 32660.0], [92.1, 32660.0], [92.2, 32660.0], [92.3, 32660.0], [92.4, 32698.0], [92.5, 32698.0], [92.6, 32698.0], [92.7, 32700.0], [92.8, 32700.0], [92.9, 32700.0], [93.0, 32771.0], [93.1, 32771.0], [93.2, 32771.0], [93.3, 32771.0], [93.4, 32911.0], [93.5, 32911.0], [93.6, 32911.0], [93.7, 32933.0], [93.8, 32933.0], [93.9, 32933.0], [94.0, 33375.0], [94.1, 33375.0], [94.2, 33375.0], [94.3, 33375.0], [94.4, 33506.0], [94.5, 33506.0], [94.6, 33506.0], [94.7, 33514.0], [94.8, 33514.0], [94.9, 33514.0], [95.0, 33601.0], [95.1, 33601.0], [95.2, 33601.0], [95.3, 33601.0], [95.4, 33965.0], [95.5, 33965.0], [95.6, 33965.0], [95.7, 34128.0], [95.8, 34128.0], [95.9, 34128.0], [96.0, 34301.0], [96.1, 34301.0], [96.2, 34301.0], [96.3, 34301.0], [96.4, 34324.0], [96.5, 34324.0], [96.6, 34324.0], [96.7, 34936.0], [96.8, 34936.0], [96.9, 34936.0], [97.0, 35381.0], [97.1, 35381.0], [97.2, 35381.0], [97.3, 35381.0], [97.4, 79500.0], [97.5, 79500.0], [97.6, 79500.0], [97.7, 82861.0], [97.8, 82861.0], [97.9, 82861.0], [98.0, 83339.0], [98.1, 83339.0], [98.2, 83339.0], [98.3, 83339.0], [98.4, 96018.0], [98.5, 96018.0], [98.6, 96018.0], [98.7, 97172.0], [98.8, 97172.0], [98.9, 97172.0], [99.0, 98323.0], [99.1, 98323.0], [99.2, 98323.0], [99.3, 98323.0], [99.4, 98346.0], [99.5, 98346.0], [99.6, 98346.0], [99.7, 99318.0], [99.8, 99318.0], [99.9, 99318.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[0.0, 6812.0], [0.1, 6812.0], [0.2, 6812.0], [0.3, 6812.0], [0.4, 6812.0], [0.5, 6812.0], [0.6, 6812.0], [0.7, 6812.0], [0.8, 6812.0], [0.9, 6812.0], [1.0, 6812.0], [1.1, 6812.0], [1.2, 6812.0], [1.3, 6812.0], [1.4, 6812.0], [1.5, 6812.0], [1.6, 6812.0], [1.7, 6812.0], [1.8, 6812.0], [1.9, 6812.0], [2.0, 6812.0], [2.1, 6812.0], [2.2, 6812.0], [2.3, 6812.0], [2.4, 6812.0], [2.5, 6812.0], [2.6, 6812.0], [2.7, 6812.0], [2.8, 6812.0], [2.9, 6812.0], [3.0, 6812.0], [3.1, 6812.0], [3.2, 6812.0], [3.3, 6812.0], [3.4, 6812.0], [3.5, 6812.0], [3.6, 6812.0], [3.7, 6812.0], [3.8, 6812.0], [3.9, 6812.0], [4.0, 6812.0], [4.1, 6812.0], [4.2, 6812.0], [4.3, 6812.0], [4.4, 6812.0], [4.5, 6812.0], [4.6, 6812.0], [4.7, 6812.0], [4.8, 6812.0], [4.9, 6812.0], [5.0, 6812.0], [5.1, 6812.0], [5.2, 6812.0], [5.3, 6812.0], [5.4, 6812.0], [5.5, 6812.0], [5.6, 6812.0], [5.7, 6812.0], [5.8, 6812.0], [5.9, 6812.0], [6.0, 6812.0], [6.1, 6812.0], [6.2, 6812.0], [6.3, 6812.0], [6.4, 6812.0], [6.5, 6812.0], [6.6, 6812.0], [6.7, 6812.0], [6.8, 6812.0], [6.9, 6812.0], [7.0, 6812.0], [7.1, 6812.0], [7.2, 6812.0], [7.3, 6812.0], [7.4, 6812.0], [7.5, 6812.0], [7.6, 6812.0], [7.7, 6812.0], [7.8, 6812.0], [7.9, 6812.0], [8.0, 6812.0], [8.1, 6812.0], [8.2, 6812.0], [8.3, 6812.0], [8.4, 6812.0], [8.5, 6812.0], [8.6, 6812.0], [8.7, 6812.0], [8.8, 6812.0], [8.9, 6812.0], [9.0, 6812.0], [9.1, 6812.0], [9.2, 6812.0], [9.3, 6812.0], [9.4, 6812.0], [9.5, 6812.0], [9.6, 6812.0], [9.7, 6812.0], [9.8, 6812.0], [9.9, 6812.0], [10.0, 6812.0], [10.1, 6812.0], [10.2, 6812.0], [10.3, 6812.0], [10.4, 6812.0], [10.5, 6812.0], [10.6, 6812.0], [10.7, 6812.0], [10.8, 6812.0], [10.9, 6812.0], [11.0, 6812.0], [11.1, 6812.0], [11.2, 6812.0], [11.3, 6812.0], [11.4, 6812.0], [11.5, 6812.0], [11.6, 6812.0], [11.7, 6812.0], [11.8, 6812.0], [11.9, 6812.0], [12.0, 6812.0], [12.1, 6812.0], [12.2, 6812.0], [12.3, 6812.0], [12.4, 6812.0], [12.5, 6812.0], [12.6, 6812.0], [12.7, 6812.0], [12.8, 6812.0], [12.9, 6812.0], [13.0, 6812.0], [13.1, 6812.0], [13.2, 6812.0], [13.3, 6812.0], [13.4, 6812.0], [13.5, 6812.0], [13.6, 6812.0], [13.7, 6812.0], [13.8, 6812.0], [13.9, 6812.0], [14.0, 6812.0], [14.1, 6812.0], [14.2, 6812.0], [14.3, 6812.0], [14.4, 6812.0], [14.5, 6812.0], [14.6, 6812.0], [14.7, 6812.0], [14.8, 6812.0], [14.9, 6812.0], [15.0, 6812.0], [15.1, 6812.0], [15.2, 6812.0], [15.3, 6812.0], [15.4, 6812.0], [15.5, 6812.0], [15.6, 6812.0], [15.7, 6812.0], [15.8, 6812.0], [15.9, 6812.0], [16.0, 6812.0], [16.1, 6812.0], [16.2, 6812.0], [16.3, 6812.0], [16.4, 6812.0], [16.5, 6812.0], [16.6, 6812.0], [16.7, 6812.0], [16.8, 6812.0], [16.9, 6812.0], [17.0, 6812.0], [17.1, 6812.0], [17.2, 6812.0], [17.3, 6812.0], [17.4, 6812.0], [17.5, 6812.0], [17.6, 6812.0], [17.7, 6812.0], [17.8, 6812.0], [17.9, 6812.0], [18.0, 6812.0], [18.1, 6812.0], [18.2, 6812.0], [18.3, 6812.0], [18.4, 6812.0], [18.5, 6812.0], [18.6, 6812.0], [18.7, 6812.0], [18.8, 6812.0], [18.9, 6812.0], [19.0, 6812.0], [19.1, 6812.0], [19.2, 6812.0], [19.3, 6812.0], [19.4, 6812.0], [19.5, 6812.0], [19.6, 6812.0], [19.7, 6812.0], [19.8, 6812.0], [19.9, 6812.0], [20.0, 6812.0], [20.1, 6812.0], [20.2, 6812.0], [20.3, 6812.0], [20.4, 6812.0], [20.5, 6812.0], [20.6, 6812.0], [20.7, 6812.0], [20.8, 6812.0], [20.9, 6812.0], [21.0, 6812.0], [21.1, 6812.0], [21.2, 6812.0], [21.3, 6812.0], [21.4, 6812.0], [21.5, 6812.0], [21.6, 6812.0], [21.7, 6812.0], [21.8, 6812.0], [21.9, 6812.0], [22.0, 6812.0], [22.1, 6812.0], [22.2, 6812.0], [22.3, 6812.0], [22.4, 6812.0], [22.5, 6812.0], [22.6, 6812.0], [22.7, 6812.0], [22.8, 6812.0], [22.9, 6812.0], [23.0, 6812.0], [23.1, 6812.0], [23.2, 6812.0], [23.3, 6812.0], [23.4, 6812.0], [23.5, 6812.0], [23.6, 6812.0], [23.7, 6812.0], [23.8, 6812.0], [23.9, 6812.0], [24.0, 6812.0], [24.1, 6812.0], [24.2, 6812.0], [24.3, 6812.0], [24.4, 6812.0], [24.5, 6812.0], [24.6, 6812.0], [24.7, 6812.0], [24.8, 6812.0], [24.9, 6812.0], [25.0, 6812.0], [25.1, 6812.0], [25.2, 6812.0], [25.3, 6812.0], [25.4, 6812.0], [25.5, 6812.0], [25.6, 6812.0], [25.7, 6812.0], [25.8, 6812.0], [25.9, 6812.0], [26.0, 6812.0], [26.1, 6812.0], [26.2, 6812.0], [26.3, 6812.0], [26.4, 6812.0], [26.5, 6812.0], [26.6, 6812.0], [26.7, 6812.0], [26.8, 6812.0], [26.9, 6812.0], [27.0, 6812.0], [27.1, 6812.0], [27.2, 6812.0], [27.3, 6812.0], [27.4, 6812.0], [27.5, 6812.0], [27.6, 6812.0], [27.7, 6812.0], [27.8, 6812.0], [27.9, 6812.0], [28.0, 6812.0], [28.1, 6812.0], [28.2, 6812.0], [28.3, 6812.0], [28.4, 6812.0], [28.5, 6812.0], [28.6, 6812.0], [28.7, 6812.0], [28.8, 6812.0], [28.9, 6812.0], [29.0, 6812.0], [29.1, 6812.0], [29.2, 6812.0], [29.3, 6812.0], [29.4, 6812.0], [29.5, 6812.0], [29.6, 6812.0], [29.7, 6812.0], [29.8, 6812.0], [29.9, 6812.0], [30.0, 6812.0], [30.1, 6812.0], [30.2, 6812.0], [30.3, 6812.0], [30.4, 6812.0], [30.5, 6812.0], [30.6, 6812.0], [30.7, 6812.0], [30.8, 6812.0], [30.9, 6812.0], [31.0, 6812.0], [31.1, 6812.0], [31.2, 6812.0], [31.3, 6812.0], [31.4, 6812.0], [31.5, 6812.0], [31.6, 6812.0], [31.7, 6812.0], [31.8, 6812.0], [31.9, 6812.0], [32.0, 6812.0], [32.1, 6812.0], [32.2, 6812.0], [32.3, 6812.0], [32.4, 6812.0], [32.5, 6812.0], [32.6, 6812.0], [32.7, 6812.0], [32.8, 6812.0], [32.9, 6812.0], [33.0, 6812.0], [33.1, 6812.0], [33.2, 6812.0], [33.3, 6812.0], [33.4, 6812.0], [33.5, 6812.0], [33.6, 6812.0], [33.7, 6812.0], [33.8, 6812.0], [33.9, 6812.0], [34.0, 6812.0], [34.1, 6812.0], [34.2, 6812.0], [34.3, 6812.0], [34.4, 6812.0], [34.5, 6812.0], [34.6, 6812.0], [34.7, 6812.0], [34.8, 6812.0], [34.9, 6812.0], [35.0, 6812.0], [35.1, 6812.0], [35.2, 6812.0], [35.3, 6812.0], [35.4, 6812.0], [35.5, 6812.0], [35.6, 6812.0], [35.7, 6812.0], [35.8, 6812.0], [35.9, 6812.0], [36.0, 6812.0], [36.1, 6812.0], [36.2, 6812.0], [36.3, 6812.0], [36.4, 6812.0], [36.5, 6812.0], [36.6, 6812.0], [36.7, 6812.0], [36.8, 6812.0], [36.9, 6812.0], [37.0, 6812.0], [37.1, 6812.0], [37.2, 6812.0], [37.3, 6812.0], [37.4, 6812.0], [37.5, 6812.0], [37.6, 6812.0], [37.7, 6812.0], [37.8, 6812.0], [37.9, 6812.0], [38.0, 6812.0], [38.1, 6812.0], [38.2, 6812.0], [38.3, 6812.0], [38.4, 6812.0], [38.5, 6812.0], [38.6, 6812.0], [38.7, 6812.0], [38.8, 6812.0], [38.9, 6812.0], [39.0, 6812.0], [39.1, 6812.0], [39.2, 6812.0], [39.3, 6812.0], [39.4, 6812.0], [39.5, 6812.0], [39.6, 6812.0], [39.7, 6812.0], [39.8, 6812.0], [39.9, 6812.0], [40.0, 6812.0], [40.1, 6812.0], [40.2, 6812.0], [40.3, 6812.0], [40.4, 6812.0], [40.5, 6812.0], [40.6, 6812.0], [40.7, 6812.0], [40.8, 6812.0], [40.9, 6812.0], [41.0, 6812.0], [41.1, 6812.0], [41.2, 6812.0], [41.3, 6812.0], [41.4, 6812.0], [41.5, 6812.0], [41.6, 6812.0], [41.7, 6812.0], [41.8, 6812.0], [41.9, 6812.0], [42.0, 6812.0], [42.1, 6812.0], [42.2, 6812.0], [42.3, 6812.0], [42.4, 6812.0], [42.5, 6812.0], [42.6, 6812.0], [42.7, 6812.0], [42.8, 6812.0], [42.9, 6812.0], [43.0, 6812.0], [43.1, 6812.0], [43.2, 6812.0], [43.3, 6812.0], [43.4, 6812.0], [43.5, 6812.0], [43.6, 6812.0], [43.7, 6812.0], [43.8, 6812.0], [43.9, 6812.0], [44.0, 6812.0], [44.1, 6812.0], [44.2, 6812.0], [44.3, 6812.0], [44.4, 6812.0], [44.5, 6812.0], [44.6, 6812.0], [44.7, 6812.0], [44.8, 6812.0], [44.9, 6812.0], [45.0, 6812.0], [45.1, 6812.0], [45.2, 6812.0], [45.3, 6812.0], [45.4, 6812.0], [45.5, 6812.0], [45.6, 6812.0], [45.7, 6812.0], [45.8, 6812.0], [45.9, 6812.0], [46.0, 6812.0], [46.1, 6812.0], [46.2, 6812.0], [46.3, 6812.0], [46.4, 6812.0], [46.5, 6812.0], [46.6, 6812.0], [46.7, 6812.0], [46.8, 6812.0], [46.9, 6812.0], [47.0, 6812.0], [47.1, 6812.0], [47.2, 6812.0], [47.3, 6812.0], [47.4, 6812.0], [47.5, 6812.0], [47.6, 6812.0], [47.7, 6812.0], [47.8, 6812.0], [47.9, 6812.0], [48.0, 6812.0], [48.1, 6812.0], [48.2, 6812.0], [48.3, 6812.0], [48.4, 6812.0], [48.5, 6812.0], [48.6, 6812.0], [48.7, 6812.0], [48.8, 6812.0], [48.9, 6812.0], [49.0, 6812.0], [49.1, 6812.0], [49.2, 6812.0], [49.3, 6812.0], [49.4, 6812.0], [49.5, 6812.0], [49.6, 6812.0], [49.7, 6812.0], [49.8, 6812.0], [49.9, 6812.0], [50.0, 6812.0], [50.1, 6812.0], [50.2, 6812.0], [50.3, 6812.0], [50.4, 6812.0], [50.5, 6812.0], [50.6, 6812.0], [50.7, 6812.0], [50.8, 6812.0], [50.9, 6812.0], [51.0, 6812.0], [51.1, 6812.0], [51.2, 6812.0], [51.3, 6812.0], [51.4, 6812.0], [51.5, 6812.0], [51.6, 6812.0], [51.7, 6812.0], [51.8, 6812.0], [51.9, 6812.0], [52.0, 6812.0], [52.1, 6812.0], [52.2, 6812.0], [52.3, 6812.0], [52.4, 6812.0], [52.5, 6812.0], [52.6, 6812.0], [52.7, 6812.0], [52.8, 6812.0], [52.9, 6812.0], [53.0, 6812.0], [53.1, 6812.0], [53.2, 6812.0], [53.3, 6812.0], [53.4, 6812.0], [53.5, 6812.0], [53.6, 6812.0], [53.7, 6812.0], [53.8, 6812.0], [53.9, 6812.0], [54.0, 6812.0], [54.1, 6812.0], [54.2, 6812.0], [54.3, 6812.0], [54.4, 6812.0], [54.5, 6812.0], [54.6, 6812.0], [54.7, 6812.0], [54.8, 6812.0], [54.9, 6812.0], [55.0, 6812.0], [55.1, 6812.0], [55.2, 6812.0], [55.3, 6812.0], [55.4, 6812.0], [55.5, 6812.0], [55.6, 6812.0], [55.7, 6812.0], [55.8, 6812.0], [55.9, 6812.0], [56.0, 6812.0], [56.1, 6812.0], [56.2, 6812.0], [56.3, 6812.0], [56.4, 6812.0], [56.5, 6812.0], [56.6, 6812.0], [56.7, 6812.0], [56.8, 6812.0], [56.9, 6812.0], [57.0, 6812.0], [57.1, 6812.0], [57.2, 6812.0], [57.3, 6812.0], [57.4, 6812.0], [57.5, 6812.0], [57.6, 6812.0], [57.7, 6812.0], [57.8, 6812.0], [57.9, 6812.0], [58.0, 6812.0], [58.1, 6812.0], [58.2, 6812.0], [58.3, 6812.0], [58.4, 6812.0], [58.5, 6812.0], [58.6, 6812.0], [58.7, 6812.0], [58.8, 6812.0], [58.9, 6812.0], [59.0, 6812.0], [59.1, 6812.0], [59.2, 6812.0], [59.3, 6812.0], [59.4, 6812.0], [59.5, 6812.0], [59.6, 6812.0], [59.7, 6812.0], [59.8, 6812.0], [59.9, 6812.0], [60.0, 6812.0], [60.1, 6812.0], [60.2, 6812.0], [60.3, 6812.0], [60.4, 6812.0], [60.5, 6812.0], [60.6, 6812.0], [60.7, 6812.0], [60.8, 6812.0], [60.9, 6812.0], [61.0, 6812.0], [61.1, 6812.0], [61.2, 6812.0], [61.3, 6812.0], [61.4, 6812.0], [61.5, 6812.0], [61.6, 6812.0], [61.7, 6812.0], [61.8, 6812.0], [61.9, 6812.0], [62.0, 6812.0], [62.1, 6812.0], [62.2, 6812.0], [62.3, 6812.0], [62.4, 6812.0], [62.5, 6812.0], [62.6, 6812.0], [62.7, 6812.0], [62.8, 6812.0], [62.9, 6812.0], [63.0, 6812.0], [63.1, 6812.0], [63.2, 6812.0], [63.3, 6812.0], [63.4, 6812.0], [63.5, 6812.0], [63.6, 6812.0], [63.7, 6812.0], [63.8, 6812.0], [63.9, 6812.0], [64.0, 6812.0], [64.1, 6812.0], [64.2, 6812.0], [64.3, 6812.0], [64.4, 6812.0], [64.5, 6812.0], [64.6, 6812.0], [64.7, 6812.0], [64.8, 6812.0], [64.9, 6812.0], [65.0, 6812.0], [65.1, 6812.0], [65.2, 6812.0], [65.3, 6812.0], [65.4, 6812.0], [65.5, 6812.0], [65.6, 6812.0], [65.7, 6812.0], [65.8, 6812.0], [65.9, 6812.0], [66.0, 6812.0], [66.1, 6812.0], [66.2, 6812.0], [66.3, 6812.0], [66.4, 6812.0], [66.5, 6812.0], [66.6, 6812.0], [66.7, 6812.0], [66.8, 6812.0], [66.9, 6812.0], [67.0, 6812.0], [67.1, 6812.0], [67.2, 6812.0], [67.3, 6812.0], [67.4, 6812.0], [67.5, 6812.0], [67.6, 6812.0], [67.7, 6812.0], [67.8, 6812.0], [67.9, 6812.0], [68.0, 6812.0], [68.1, 6812.0], [68.2, 6812.0], [68.3, 6812.0], [68.4, 6812.0], [68.5, 6812.0], [68.6, 6812.0], [68.7, 6812.0], [68.8, 6812.0], [68.9, 6812.0], [69.0, 6812.0], [69.1, 6812.0], [69.2, 6812.0], [69.3, 6812.0], [69.4, 6812.0], [69.5, 6812.0], [69.6, 6812.0], [69.7, 6812.0], [69.8, 6812.0], [69.9, 6812.0], [70.0, 6812.0], [70.1, 6812.0], [70.2, 6812.0], [70.3, 6812.0], [70.4, 6812.0], [70.5, 6812.0], [70.6, 6812.0], [70.7, 6812.0], [70.8, 6812.0], [70.9, 6812.0], [71.0, 6812.0], [71.1, 6812.0], [71.2, 6812.0], [71.3, 6812.0], [71.4, 6812.0], [71.5, 6812.0], [71.6, 6812.0], [71.7, 6812.0], [71.8, 6812.0], [71.9, 6812.0], [72.0, 6812.0], [72.1, 6812.0], [72.2, 6812.0], [72.3, 6812.0], [72.4, 6812.0], [72.5, 6812.0], [72.6, 6812.0], [72.7, 6812.0], [72.8, 6812.0], [72.9, 6812.0], [73.0, 6812.0], [73.1, 6812.0], [73.2, 6812.0], [73.3, 6812.0], [73.4, 6812.0], [73.5, 6812.0], [73.6, 6812.0], [73.7, 6812.0], [73.8, 6812.0], [73.9, 6812.0], [74.0, 6812.0], [74.1, 6812.0], [74.2, 6812.0], [74.3, 6812.0], [74.4, 6812.0], [74.5, 6812.0], [74.6, 6812.0], [74.7, 6812.0], [74.8, 6812.0], [74.9, 6812.0], [75.0, 6812.0], [75.1, 6812.0], [75.2, 6812.0], [75.3, 6812.0], [75.4, 6812.0], [75.5, 6812.0], [75.6, 6812.0], [75.7, 6812.0], [75.8, 6812.0], [75.9, 6812.0], [76.0, 6812.0], [76.1, 6812.0], [76.2, 6812.0], [76.3, 6812.0], [76.4, 6812.0], [76.5, 6812.0], [76.6, 6812.0], [76.7, 6812.0], [76.8, 6812.0], [76.9, 6812.0], [77.0, 6812.0], [77.1, 6812.0], [77.2, 6812.0], [77.3, 6812.0], [77.4, 6812.0], [77.5, 6812.0], [77.6, 6812.0], [77.7, 6812.0], [77.8, 6812.0], [77.9, 6812.0], [78.0, 6812.0], [78.1, 6812.0], [78.2, 6812.0], [78.3, 6812.0], [78.4, 6812.0], [78.5, 6812.0], [78.6, 6812.0], [78.7, 6812.0], [78.8, 6812.0], [78.9, 6812.0], [79.0, 6812.0], [79.1, 6812.0], [79.2, 6812.0], [79.3, 6812.0], [79.4, 6812.0], [79.5, 6812.0], [79.6, 6812.0], [79.7, 6812.0], [79.8, 6812.0], [79.9, 6812.0], [80.0, 6812.0], [80.1, 6812.0], [80.2, 6812.0], [80.3, 6812.0], [80.4, 6812.0], [80.5, 6812.0], [80.6, 6812.0], [80.7, 6812.0], [80.8, 6812.0], [80.9, 6812.0], [81.0, 6812.0], [81.1, 6812.0], [81.2, 6812.0], [81.3, 6812.0], [81.4, 6812.0], [81.5, 6812.0], [81.6, 6812.0], [81.7, 6812.0], [81.8, 6812.0], [81.9, 6812.0], [82.0, 6812.0], [82.1, 6812.0], [82.2, 6812.0], [82.3, 6812.0], [82.4, 6812.0], [82.5, 6812.0], [82.6, 6812.0], [82.7, 6812.0], [82.8, 6812.0], [82.9, 6812.0], [83.0, 6812.0], [83.1, 6812.0], [83.2, 6812.0], [83.3, 6812.0], [83.4, 6812.0], [83.5, 6812.0], [83.6, 6812.0], [83.7, 6812.0], [83.8, 6812.0], [83.9, 6812.0], [84.0, 6812.0], [84.1, 6812.0], [84.2, 6812.0], [84.3, 6812.0], [84.4, 6812.0], [84.5, 6812.0], [84.6, 6812.0], [84.7, 6812.0], [84.8, 6812.0], [84.9, 6812.0], [85.0, 6812.0], [85.1, 6812.0], [85.2, 6812.0], [85.3, 6812.0], [85.4, 6812.0], [85.5, 6812.0], [85.6, 6812.0], [85.7, 6812.0], [85.8, 6812.0], [85.9, 6812.0], [86.0, 6812.0], [86.1, 6812.0], [86.2, 6812.0], [86.3, 6812.0], [86.4, 6812.0], [86.5, 6812.0], [86.6, 6812.0], [86.7, 6812.0], [86.8, 6812.0], [86.9, 6812.0], [87.0, 6812.0], [87.1, 6812.0], [87.2, 6812.0], [87.3, 6812.0], [87.4, 6812.0], [87.5, 6812.0], [87.6, 6812.0], [87.7, 6812.0], [87.8, 6812.0], [87.9, 6812.0], [88.0, 6812.0], [88.1, 6812.0], [88.2, 6812.0], [88.3, 6812.0], [88.4, 6812.0], [88.5, 6812.0], [88.6, 6812.0], [88.7, 6812.0], [88.8, 6812.0], [88.9, 6812.0], [89.0, 6812.0], [89.1, 6812.0], [89.2, 6812.0], [89.3, 6812.0], [89.4, 6812.0], [89.5, 6812.0], [89.6, 6812.0], [89.7, 6812.0], [89.8, 6812.0], [89.9, 6812.0], [90.0, 6812.0], [90.1, 6812.0], [90.2, 6812.0], [90.3, 6812.0], [90.4, 6812.0], [90.5, 6812.0], [90.6, 6812.0], [90.7, 6812.0], [90.8, 6812.0], [90.9, 6812.0], [91.0, 6812.0], [91.1, 6812.0], [91.2, 6812.0], [91.3, 6812.0], [91.4, 6812.0], [91.5, 6812.0], [91.6, 6812.0], [91.7, 6812.0], [91.8, 6812.0], [91.9, 6812.0], [92.0, 6812.0], [92.1, 6812.0], [92.2, 6812.0], [92.3, 6812.0], [92.4, 6812.0], [92.5, 6812.0], [92.6, 6812.0], [92.7, 6812.0], [92.8, 6812.0], [92.9, 6812.0], [93.0, 6812.0], [93.1, 6812.0], [93.2, 6812.0], [93.3, 6812.0], [93.4, 6812.0], [93.5, 6812.0], [93.6, 6812.0], [93.7, 6812.0], [93.8, 6812.0], [93.9, 6812.0], [94.0, 6812.0], [94.1, 6812.0], [94.2, 6812.0], [94.3, 6812.0], [94.4, 6812.0], [94.5, 6812.0], [94.6, 6812.0], [94.7, 6812.0], [94.8, 6812.0], [94.9, 6812.0], [95.0, 6812.0], [95.1, 6812.0], [95.2, 6812.0], [95.3, 6812.0], [95.4, 6812.0], [95.5, 6812.0], [95.6, 6812.0], [95.7, 6812.0], [95.8, 6812.0], [95.9, 6812.0], [96.0, 6812.0], [96.1, 6812.0], [96.2, 6812.0], [96.3, 6812.0], [96.4, 6812.0], [96.5, 6812.0], [96.6, 6812.0], [96.7, 6812.0], [96.8, 6812.0], [96.9, 6812.0], [97.0, 6812.0], [97.1, 6812.0], [97.2, 6812.0], [97.3, 6812.0], [97.4, 6812.0], [97.5, 6812.0], [97.6, 6812.0], [97.7, 6812.0], [97.8, 6812.0], [97.9, 6812.0], [98.0, 6812.0], [98.1, 6812.0], [98.2, 6812.0], [98.3, 6812.0], [98.4, 6812.0], [98.5, 6812.0], [98.6, 6812.0], [98.7, 6812.0], [98.8, 6812.0], [98.9, 6812.0], [99.0, 6812.0], [99.1, 6812.0], [99.2, 6812.0], [99.3, 6812.0], [99.4, 6812.0], [99.5, 6812.0], [99.6, 6812.0], [99.7, 6812.0], [99.8, 6812.0], [99.9, 6812.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 800.0, "maxY": 176.0, "series": [{"data": [[800.0, 1.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[32900.0, 13.0], [33700.0, 5.0], [34500.0, 9.0], [35300.0, 98.0], [36100.0, 2.0], [36900.0, 15.0], [37700.0, 3.0], [40100.0, 2.0], [42500.0, 2.0], [44100.0, 6.0], [43300.0, 1.0], [44900.0, 13.0], [46500.0, 13.0], [45700.0, 17.0], [48100.0, 14.0], [48900.0, 22.0], [47300.0, 3.0], [50500.0, 6.0], [49700.0, 18.0], [52100.0, 17.0], [51300.0, 5.0], [52900.0, 36.0], [54500.0, 10.0], [53700.0, 1.0], [55300.0, 42.0], [56100.0, 6.0], [56900.0, 2.0], [58500.0, 26.0], [1300.0, 1.0], [1400.0, 7.0], [1500.0, 5.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 10.0], [1900.0, 5.0], [2000.0, 1.0], [2300.0, 3.0], [2200.0, 8.0], [2700.0, 1.0], [2900.0, 2.0], [3100.0, 1.0], [3300.0, 3.0], [3400.0, 6.0], [3500.0, 5.0], [3600.0, 26.0], [3700.0, 18.0], [3800.0, 2.0], [3900.0, 31.0], [4000.0, 8.0], [4200.0, 1.0], [4300.0, 1.0], [4600.0, 2.0], [4500.0, 1.0], [4400.0, 1.0], [4800.0, 3.0], [4700.0, 3.0], [4900.0, 3.0], [5000.0, 2.0], [5100.0, 3.0], [5200.0, 1.0], [5300.0, 2.0], [5500.0, 4.0], [5400.0, 3.0], [5600.0, 1.0], [5800.0, 3.0], [5700.0, 1.0], [6100.0, 3.0], [5900.0, 4.0], [6000.0, 2.0], [6200.0, 1.0], [6300.0, 3.0], [6500.0, 2.0], [6600.0, 2.0], [6400.0, 1.0], [6800.0, 9.0], [6900.0, 8.0], [6700.0, 4.0], [7000.0, 1.0], [7400.0, 6.0], [7300.0, 7.0], [7200.0, 2.0], [7500.0, 5.0], [7600.0, 9.0], [7800.0, 19.0], [7900.0, 9.0], [7700.0, 6.0], [8000.0, 3.0], [8100.0, 5.0], [8400.0, 4.0], [8200.0, 1.0], [8600.0, 2.0], [9000.0, 4.0], [8800.0, 7.0], [9200.0, 8.0], [9400.0, 4.0], [9600.0, 9.0], [9800.0, 3.0], [10000.0, 17.0], [10200.0, 8.0], [10400.0, 8.0], [10600.0, 9.0], [11000.0, 11.0], [10800.0, 6.0], [11200.0, 6.0], [11600.0, 3.0], [11400.0, 5.0], [12000.0, 5.0], [12200.0, 5.0], [11800.0, 1.0], [12400.0, 3.0], [12600.0, 1.0], [12800.0, 4.0], [13200.0, 1.0], [13000.0, 2.0], [13800.0, 8.0], [13400.0, 5.0], [13600.0, 8.0], [14000.0, 7.0], [14200.0, 5.0], [14400.0, 5.0], [14600.0, 6.0], [14800.0, 3.0], [15200.0, 5.0], [15000.0, 1.0], [15400.0, 10.0], [15600.0, 13.0], [15800.0, 9.0], [16000.0, 7.0], [16200.0, 12.0], [17200.0, 5.0], [16400.0, 8.0], [16800.0, 10.0], [18400.0, 2.0], [18000.0, 7.0], [17600.0, 6.0], [19200.0, 6.0], [20000.0, 6.0], [19600.0, 8.0], [20400.0, 12.0], [20800.0, 10.0], [21200.0, 11.0], [21600.0, 11.0], [22400.0, 4.0], [22000.0, 4.0], [23200.0, 16.0], [22800.0, 25.0], [24400.0, 6.0], [24000.0, 21.0], [23600.0, 75.0], [25200.0, 4.0], [24800.0, 1.0], [26000.0, 9.0], [26400.0, 6.0], [25600.0, 2.0], [26800.0, 17.0], [27200.0, 3.0], [27600.0, 16.0], [28000.0, 21.0], [28400.0, 13.0], [28800.0, 55.0], [29200.0, 24.0], [29600.0, 13.0], [30400.0, 27.0], [30000.0, 13.0], [31600.0, 74.0], [30800.0, 37.0], [31200.0, 19.0], [32400.0, 17.0], [32000.0, 26.0], [34400.0, 22.0], [33600.0, 7.0], [32800.0, 41.0], [35200.0, 105.0], [36000.0, 52.0], [36800.0, 29.0], [37600.0, 1.0], [38400.0, 6.0], [42400.0, 5.0], [43200.0, 3.0], [44000.0, 3.0], [44800.0, 10.0], [45600.0, 17.0], [46400.0, 16.0], [47200.0, 15.0], [48800.0, 21.0], [48000.0, 15.0], [49600.0, 31.0], [50400.0, 8.0], [51200.0, 5.0], [52800.0, 45.0], [52000.0, 15.0], [53600.0, 14.0], [54400.0, 3.0], [55200.0, 5.0], [56000.0, 26.0], [56800.0, 4.0], [58400.0, 4.0], [33900.0, 4.0], [33100.0, 3.0], [34700.0, 41.0], [35500.0, 52.0], [36300.0, 14.0], [37100.0, 2.0], [37900.0, 11.0], [39500.0, 2.0], [42700.0, 5.0], [44300.0, 9.0], [43500.0, 2.0], [46700.0, 3.0], [45100.0, 4.0], [45900.0, 10.0], [47500.0, 4.0], [48300.0, 13.0], [49100.0, 59.0], [50700.0, 3.0], [49900.0, 11.0], [51500.0, 40.0], [53100.0, 48.0], [52300.0, 37.0], [53900.0, 3.0], [54700.0, 6.0], [55500.0, 4.0], [56300.0, 33.0], [57100.0, 1.0], [57900.0, 11.0], [59500.0, 1.0], [16500.0, 8.0], [16900.0, 7.0], [17300.0, 7.0], [17700.0, 2.0], [18100.0, 2.0], [18500.0, 3.0], [19300.0, 4.0], [18900.0, 8.0], [20100.0, 6.0], [19700.0, 8.0], [20500.0, 19.0], [20900.0, 20.0], [21300.0, 12.0], [22100.0, 4.0], [22500.0, 7.0], [21700.0, 17.0], [23300.0, 16.0], [22900.0, 7.0], [23700.0, 19.0], [24500.0, 1.0], [24100.0, 30.0], [25300.0, 7.0], [26100.0, 10.0], [26500.0, 2.0], [25700.0, 4.0], [26900.0, 7.0], [27300.0, 12.0], [28100.0, 8.0], [28500.0, 30.0], [27700.0, 3.0], [28900.0, 46.0], [29300.0, 44.0], [30100.0, 17.0], [30500.0, 17.0], [29700.0, 30.0], [31300.0, 18.0], [30900.0, 40.0], [31700.0, 127.0], [32500.0, 15.0], [32100.0, 8.0], [33800.0, 8.0], [34600.0, 26.0], [33000.0, 7.0], [35400.0, 176.0], [36200.0, 5.0], [37000.0, 25.0], [37800.0, 1.0], [39400.0, 1.0], [40200.0, 2.0], [42600.0, 3.0], [41800.0, 1.0], [43400.0, 5.0], [44200.0, 8.0], [45000.0, 6.0], [46600.0, 10.0], [45800.0, 10.0], [47400.0, 11.0], [49000.0, 17.0], [48200.0, 17.0], [50600.0, 8.0], [49800.0, 28.0], [52200.0, 5.0], [53000.0, 28.0], [51400.0, 3.0], [53800.0, 19.0], [54600.0, 20.0], [55400.0, 5.0], [56200.0, 2.0], [57800.0, 1.0], [58600.0, 3.0], [33300.0, 8.0], [34100.0, 7.0], [35700.0, 25.0], [36500.0, 5.0], [34900.0, 14.0], [37300.0, 12.0], [38100.0, 106.0], [42900.0, 2.0], [43700.0, 15.0], [44500.0, 4.0], [45300.0, 23.0], [46100.0, 7.0], [46900.0, 7.0], [47700.0, 10.0], [48500.0, 25.0], [49300.0, 17.0], [50900.0, 3.0], [50100.0, 10.0], [52500.0, 11.0], [51700.0, 7.0], [54100.0, 21.0], [54900.0, 3.0], [53300.0, 6.0], [55700.0, 9.0], [56500.0, 3.0], [58100.0, 6.0], [58900.0, 1.0], [8500.0, 9.0], [8700.0, 5.0], [8300.0, 2.0], [8900.0, 8.0], [9100.0, 3.0], [9500.0, 5.0], [9300.0, 6.0], [9700.0, 7.0], [9900.0, 8.0], [10100.0, 12.0], [10300.0, 5.0], [10700.0, 9.0], [10500.0, 22.0], [10900.0, 10.0], [11100.0, 1.0], [11300.0, 8.0], [11700.0, 8.0], [11500.0, 4.0], [11900.0, 1.0], [12100.0, 1.0], [12700.0, 2.0], [12500.0, 4.0], [12300.0, 3.0], [12900.0, 5.0], [13300.0, 2.0], [13100.0, 3.0], [13500.0, 4.0], [13700.0, 4.0], [13900.0, 6.0], [14300.0, 10.0], [14100.0, 7.0], [14500.0, 10.0], [14700.0, 1.0], [15100.0, 5.0], [15300.0, 7.0], [14900.0, 6.0], [15700.0, 6.0], [15500.0, 7.0], [16300.0, 11.0], [15900.0, 9.0], [16100.0, 10.0], [17000.0, 9.0], [17400.0, 11.0], [16600.0, 2.0], [18200.0, 3.0], [17800.0, 8.0], [19000.0, 4.0], [18600.0, 2.0], [19400.0, 5.0], [20200.0, 8.0], [19800.0, 7.0], [21000.0, 15.0], [20600.0, 4.0], [21400.0, 21.0], [21800.0, 14.0], [22200.0, 2.0], [23000.0, 9.0], [23400.0, 10.0], [22600.0, 17.0], [23800.0, 21.0], [24200.0, 15.0], [24600.0, 2.0], [25400.0, 7.0], [25000.0, 5.0], [26600.0, 15.0], [25800.0, 1.0], [26200.0, 20.0], [27000.0, 11.0], [27400.0, 4.0], [28200.0, 15.0], [27800.0, 10.0], [28600.0, 34.0], [29400.0, 42.0], [29000.0, 88.0], [29800.0, 29.0], [30200.0, 53.0], [30600.0, 63.0], [31400.0, 31.0], [31000.0, 30.0], [31800.0, 31.0], [32200.0, 6.0], [32600.0, 44.0], [34000.0, 14.0], [34800.0, 29.0], [33200.0, 2.0], [35600.0, 30.0], [36400.0, 2.0], [38800.0, 1.0], [37200.0, 1.0], [40400.0, 1.0], [42000.0, 1.0], [42800.0, 1.0], [44400.0, 7.0], [43600.0, 3.0], [45200.0, 8.0], [46800.0, 14.0], [46000.0, 18.0], [47600.0, 12.0], [48400.0, 15.0], [50800.0, 5.0], [49200.0, 48.0], [50000.0, 15.0], [51600.0, 14.0], [52400.0, 71.0], [53200.0, 1.0], [54800.0, 2.0], [54000.0, 1.0], [56400.0, 5.0], [55600.0, 1.0], [58000.0, 2.0], [58800.0, 1.0], [33500.0, 11.0], [34300.0, 12.0], [35100.0, 10.0], [35900.0, 123.0], [36700.0, 2.0], [38300.0, 2.0], [37500.0, 1.0], [40700.0, 1.0], [39100.0, 6.0], [42300.0, 3.0], [44700.0, 1.0], [43100.0, 1.0], [43900.0, 10.0], [45500.0, 19.0], [47100.0, 55.0], [46300.0, 15.0], [48700.0, 15.0], [47900.0, 16.0], [50300.0, 11.0], [51100.0, 9.0], [49500.0, 26.0], [52700.0, 41.0], [51900.0, 56.0], [53500.0, 4.0], [55100.0, 2.0], [55900.0, 6.0], [58300.0, 3.0], [17100.0, 5.0], [16700.0, 5.0], [17500.0, 8.0], [17900.0, 3.0], [18300.0, 3.0], [18700.0, 9.0], [19100.0, 6.0], [19900.0, 8.0], [20300.0, 11.0], [19500.0, 3.0], [20700.0, 12.0], [21100.0, 21.0], [21500.0, 20.0], [21900.0, 13.0], [22300.0, 6.0], [22700.0, 16.0], [23500.0, 16.0], [23100.0, 9.0], [24300.0, 7.0], [23900.0, 57.0], [25100.0, 5.0], [24700.0, 2.0], [25500.0, 2.0], [25900.0, 8.0], [26300.0, 5.0], [27100.0, 12.0], [26700.0, 3.0], [27500.0, 9.0], [27900.0, 8.0], [28300.0, 12.0], [28700.0, 47.0], [29500.0, 26.0], [29100.0, 36.0], [30700.0, 51.0], [30300.0, 70.0], [29900.0, 41.0], [31100.0, 53.0], [31500.0, 164.0], [32300.0, 39.0], [32700.0, 46.0], [31900.0, 23.0], [33400.0, 6.0], [34200.0, 8.0], [36600.0, 6.0], [35000.0, 6.0], [35800.0, 50.0], [37400.0, 1.0], [38200.0, 1.0], [40600.0, 2.0], [39000.0, 1.0], [41400.0, 3.0], [42200.0, 5.0], [43800.0, 12.0], [44600.0, 4.0], [45400.0, 26.0], [46200.0, 3.0], [47000.0, 6.0], [47800.0, 13.0], [48600.0, 26.0], [49400.0, 15.0], [50200.0, 6.0], [51000.0, 5.0], [51800.0, 39.0], [52600.0, 17.0], [53400.0, 3.0], [55000.0, 6.0], [54200.0, 2.0], [55800.0, 13.0], [56600.0, 4.0], [59000.0, 3.0], [58200.0, 4.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[83100.0, 1.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[79500.0, 1.0], [97100.0, 1.0], [98300.0, 2.0], [32900.0, 2.0], [33300.0, 1.0], [33900.0, 1.0], [33500.0, 2.0], [34300.0, 2.0], [34100.0, 1.0], [34900.0, 1.0], [35300.0, 1.0], [83300.0, 1.0], [99300.0, 1.0], [12700.0, 1.0], [13100.0, 1.0], [13900.0, 1.0], [15700.0, 1.0], [15500.0, 1.0], [15400.0, 1.0], [16700.0, 1.0], [16500.0, 1.0], [17200.0, 1.0], [16600.0, 1.0], [16800.0, 1.0], [18400.0, 1.0], [18000.0, 1.0], [17600.0, 1.0], [19100.0, 1.0], [19000.0, 1.0], [18800.0, 1.0], [19600.0, 1.0], [20000.0, 1.0], [20300.0, 1.0], [20400.0, 2.0], [20500.0, 1.0], [21400.0, 1.0], [20700.0, 3.0], [21000.0, 3.0], [20600.0, 2.0], [21100.0, 1.0], [21200.0, 1.0], [22000.0, 1.0], [21700.0, 1.0], [22100.0, 2.0], [22400.0, 1.0], [23200.0, 1.0], [22700.0, 2.0], [23000.0, 1.0], [23300.0, 1.0], [23100.0, 1.0], [23900.0, 3.0], [24000.0, 2.0], [24200.0, 2.0], [24300.0, 2.0], [24500.0, 3.0], [24400.0, 1.0], [25400.0, 3.0], [25500.0, 1.0], [24900.0, 2.0], [25300.0, 3.0], [25200.0, 2.0], [25000.0, 2.0], [24800.0, 2.0], [25800.0, 4.0], [26100.0, 5.0], [25900.0, 3.0], [26000.0, 2.0], [26200.0, 5.0], [25600.0, 2.0], [25700.0, 4.0], [26400.0, 3.0], [26300.0, 6.0], [26600.0, 8.0], [26500.0, 3.0], [26800.0, 6.0], [26700.0, 5.0], [27100.0, 4.0], [27500.0, 2.0], [27600.0, 5.0], [27300.0, 5.0], [27000.0, 2.0], [27400.0, 2.0], [26900.0, 4.0], [27200.0, 5.0], [27900.0, 3.0], [28200.0, 4.0], [27800.0, 2.0], [28400.0, 5.0], [28500.0, 7.0], [28600.0, 4.0], [28000.0, 5.0], [28300.0, 2.0], [28100.0, 1.0], [27700.0, 6.0], [29600.0, 1.0], [29300.0, 3.0], [29100.0, 6.0], [28800.0, 3.0], [29400.0, 6.0], [29200.0, 4.0], [28700.0, 5.0], [28900.0, 6.0], [29500.0, 4.0], [29900.0, 1.0], [29700.0, 4.0], [30000.0, 3.0], [30600.0, 2.0], [30500.0, 1.0], [30100.0, 5.0], [30700.0, 1.0], [30400.0, 3.0], [30200.0, 3.0], [29800.0, 2.0], [31200.0, 2.0], [30800.0, 1.0], [31000.0, 1.0], [31500.0, 1.0], [31300.0, 1.0], [32000.0, 1.0], [32100.0, 3.0], [32700.0, 2.0], [32600.0, 3.0], [32500.0, 3.0], [32300.0, 1.0], [31800.0, 1.0], [33600.0, 1.0], [82800.0, 1.0], [96000.0, 1.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[6800.0, 1.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 99300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7294.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 9.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 7294.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68528912E12, "maxY": 700.0, "series": [{"data": [[1.68528954E12, 1.0]], "isOverall": false, "label": "tearDown consumers", "isController": false}, {"data": [[1.68528936E12, 700.0], [1.68528954E12, 452.0475866757304], [1.68528924E12, 700.0], [1.68528942E12, 700.0], [1.6852893E12, 700.0], [1.68528948E12, 695.6333333333323]], "isOverall": false, "label": "Producers", "isController": false}, {"data": [[1.68528924E12, 285.54452054794507], [1.6852893E12, 8.0]], "isOverall": false, "label": "Consumers", "isController": false}, {"data": [[1.68528912E12, 1.0]], "isOverall": false, "label": "setUp", "isController": false}, {"data": [[1.68528918E12, 1.0]], "isOverall": false, "label": "setUp consumers", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68528954E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 864.0, "minX": 1.0, "maxY": 91859.625, "series": [{"data": [[2.0, 864.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[2.0, 864.0]], "isOverall": false, "label": "create message-Aggregated", "isController": false}, {"data": [[2.0, 4002.0], [3.0, 3997.0], [4.0, 4002.0], [5.0, 3991.0], [6.0, 4050.0], [7.0, 3988.0], [8.0, 4024.0], [9.0, 3975.0], [10.0, 4019.0], [11.0, 3977.0], [12.0, 4027.0], [13.0, 4006.0], [14.0, 3952.0], [15.0, 3957.0], [16.0, 3947.0], [17.0, 3936.0], [18.0, 3930.0], [19.0, 3979.0], [20.0, 3977.0], [21.0, 3921.0], [22.0, 3924.0], [23.0, 3986.0], [24.0, 3918.0], [25.0, 3924.0], [26.0, 3971.0], [27.0, 3974.0], [28.0, 3910.0], [29.0, 3918.0], [30.0, 3962.0], [31.0, 3916.0], [33.0, 3914.0], [32.0, 3911.0], [35.0, 3918.0], [34.0, 3910.0], [37.0, 3779.0], [36.0, 3802.0], [39.0, 3758.0], [38.0, 3776.0], [41.0, 3684.0], [40.0, 3702.0], [43.0, 3723.0], [42.0, 3689.0], [45.0, 3724.0], [44.0, 3721.0], [47.0, 3721.0], [46.0, 3723.0], [49.0, 3724.0], [48.0, 3724.0], [51.0, 3660.0], [50.0, 3721.0], [53.0, 3649.0], [52.0, 3646.0], [55.0, 3703.0], [54.0, 3700.0], [57.0, 3695.0], [56.0, 3701.0], [59.0, 3702.0], [58.0, 3688.0], [61.0, 3694.0], [60.0, 3641.0], [63.0, 3676.0], [62.0, 3630.0], [67.0, 3680.0], [66.0, 3628.0], [65.0, 3630.0], [64.0, 3626.0], [70.0, 3668.5], [68.0, 3617.0], [75.0, 3359.5], [73.0, 3614.0], [72.0, 3669.5], [79.0, 2730.0], [78.0, 2986.0], [77.0, 3178.0], [76.0, 3349.0], [83.0, 2063.0], [82.0, 2228.0], [81.0, 2303.0], [80.0, 2297.0], [87.0, 1426.0], [86.0, 1473.0], [85.0, 1538.0], [84.0, 1947.0], [91.0, 1405.0], [90.0, 1956.0], [89.0, 1412.0], [88.0, 1461.0], [95.0, 1520.0], [94.0, 2327.0], [93.0, 1552.0], [92.0, 1541.0], [99.0, 1861.0], [98.0, 1616.0], [97.0, 1616.0], [96.0, 1969.0], [103.0, 1838.0], [102.0, 1881.0], [101.0, 1708.0], [107.0, 1744.0], [106.0, 1353.0], [105.0, 1489.0], [104.0, 1424.0], [111.0, 1864.5], [109.0, 1893.0], [108.0, 1914.0], [114.0, 2217.0], [113.0, 1903.5], [119.0, 1853.0], [118.0, 2225.5], [117.0, 2222.0], [116.0, 2293.0], [123.0, 3978.0], [122.0, 3977.0], [121.0, 1899.0], [120.0, 2208.0], [127.0, 3486.0], [126.0, 3556.0], [125.0, 3486.0], [124.0, 3489.0], [135.0, 2356.0], [134.0, 3949.0], [133.0, 3470.0], [132.0, 3969.0], [131.0, 3564.0], [130.0, 3519.0], [129.0, 3472.0], [128.0, 3565.0], [143.0, 4717.0], [142.0, 4785.0], [141.0, 6874.0], [140.0, 4785.0], [139.0, 4825.0], [138.0, 3731.0], [137.0, 3477.5], [151.0, 24156.0], [150.0, 21442.0], [149.0, 20714.333333333332], [148.0, 15091.0], [147.0, 6640.0], [146.0, 6725.0], [145.0, 3825.0], [144.0, 6771.0], [159.0, 21824.0], [158.0, 24003.0], [157.0, 21781.0], [156.0, 24167.0], [155.0, 23689.0], [154.0, 21441.0], [153.0, 24172.0], [152.0, 23689.0], [167.0, 22501.666666666668], [166.0, 21774.0], [165.0, 24089.0], [164.0, 21978.0], [163.0, 21441.0], [162.0, 23765.0], [161.0, 17040.5], [160.0, 23925.5], [175.0, 21838.0], [174.0, 23984.0], [173.0, 23686.0], [172.0, 23687.0], [171.0, 21792.0], [170.0, 20796.8], [169.0, 24169.0], [168.0, 23895.0], [183.0, 23834.0], [182.0, 23687.0], [181.0, 22749.0], [179.0, 17794.333333333332], [177.0, 21955.0], [176.0, 23246.0], [191.0, 23678.0], [190.0, 23891.0], [189.0, 9259.0], [188.0, 21597.0], [187.0, 23905.25], [186.0, 24159.0], [185.0, 23682.0], [184.0, 24154.0], [199.0, 23956.5], [198.0, 23776.5], [197.0, 24265.0], [196.0, 24005.0], [195.0, 21433.0], [194.0, 23864.666666666668], [193.0, 23679.0], [192.0, 24020.0], [207.0, 23786.5], [206.0, 21432.0], [205.0, 23760.25], [204.0, 23757.0], [203.0, 22290.333333333332], [201.0, 23835.0], [200.0, 23793.0], [215.0, 23667.0], [214.0, 23674.0], [213.0, 22773.0], [212.0, 23980.0], [211.0, 21898.0], [210.0, 23912.0], [209.0, 22656.5], [208.0, 23983.0], [223.0, 24056.0], [222.0, 21841.0], [221.0, 23677.0], [220.0, 21537.0], [219.0, 23679.0], [218.0, 21512.5], [216.0, 23970.0], [231.0, 21918.0], [230.0, 21686.0], [229.0, 23641.0], [228.0, 21753.0], [227.0, 21831.0], [226.0, 24066.0], [225.0, 24010.0], [224.0, 24011.0], [239.0, 23947.0], [238.0, 23719.0], [237.0, 23636.0], [236.0, 23644.0], [235.0, 23717.0], [234.0, 23807.0], [233.0, 23259.0], [232.0, 23935.0], [247.0, 23973.0], [246.0, 23194.666666666668], [245.0, 22756.5], [244.0, 23946.5], [243.0, 23932.0], [242.0, 23941.0], [241.0, 21911.0], [240.0, 23633.0], [255.0, 21953.0], [254.0, 21516.0], [253.0, 21793.0], [252.0, 23733.0], [251.0, 23948.0], [250.0, 23675.5], [249.0, 21549.0], [248.0, 21793.5], [270.0, 23937.0], [271.0, 24113.0], [269.0, 21947.0], [268.0, 22592.0], [266.0, 23630.0], [265.0, 22215.0], [264.0, 21851.0], [263.0, 24104.0], [256.0, 21786.0], [259.0, 23640.0], [258.0, 21668.0], [262.0, 21546.0], [261.0, 22674.0], [260.0, 23019.333333333332], [286.0, 21943.0], [287.0, 23668.0], [285.0, 23728.666666666668], [284.0, 23730.333333333332], [283.0, 23752.75], [282.0, 23941.0], [281.0, 23948.0], [280.0, 21793.0], [279.0, 21733.0], [273.0, 23633.0], [272.0, 23630.0], [275.0, 23838.0], [274.0, 23925.0], [278.0, 22717.0], [277.0, 22265.0], [276.0, 23637.0], [302.0, 23628.0], [303.0, 23926.0], [301.0, 21653.0], [300.0, 24093.0], [299.0, 22673.5], [298.0, 24066.75], [297.0, 23625.0], [296.0, 23818.0], [295.0, 23918.5], [289.0, 24102.0], [288.0, 21541.0], [291.0, 23629.0], [290.0, 23639.0], [294.0, 23915.75], [293.0, 24103.0], [292.0, 23823.75], [318.0, 23691.0], [319.0, 23897.0], [317.0, 23908.0], [316.0, 21871.0], [315.0, 24086.0], [314.0, 23931.0], [313.0, 21371.0], [312.0, 21791.0], [311.0, 23853.5], [305.0, 23724.0], [304.0, 23922.0], [307.0, 21776.0], [306.0, 23941.0], [310.0, 24088.0], [309.0, 23930.0], [308.0, 24088.0], [334.0, 21126.0], [335.0, 23566.0], [333.0, 22807.666666666668], [332.0, 20319.5], [331.0, 23537.333333333332], [330.0, 23328.0], [329.0, 23564.0], [328.0, 21795.0], [327.0, 23687.5], [321.0, 23877.0], [320.0, 23907.0], [323.0, 23886.0], [322.0, 7878.0], [326.0, 23558.0], [325.0, 23762.0], [324.0, 23657.333333333332], [350.0, 21120.0], [351.0, 22386.333333333332], [349.0, 22586.666666666668], [348.0, 21389.0], [347.0, 23547.0], [346.0, 23540.5], [345.0, 23535.0], [344.0, 23467.0], [343.0, 22523.0], [337.0, 22287.5], [336.0, 21418.0], [339.0, 23486.0], [338.0, 21238.0], [342.0, 23409.5], [341.0, 23260.0], [340.0, 10880.0], [366.0, 23020.0], [367.0, 22720.0], [365.0, 22030.333333333332], [364.0, 22746.0], [363.0, 22073.0], [362.0, 22913.0], [361.0, 22800.5], [360.0, 22976.5], [359.0, 23258.0], [353.0, 22975.5], [352.0, 23126.0], [355.0, 23111.0], [354.0, 23127.0], [358.0, 23096.0], [357.0, 22967.0], [356.0, 20973.0], [382.0, 22576.0], [383.0, 20452.0], [381.0, 20412.0], [380.0, 22371.0], [379.0, 20415.0], [378.0, 22671.0], [377.0, 22848.0], [376.0, 22538.0], [375.0, 21718.5], [369.0, 20738.0], [368.0, 21908.5], [371.0, 20611.0], [370.0, 20858.0], [374.0, 22679.0], [373.0, 22666.0], [372.0, 22787.666666666668], [398.0, 20979.0], [399.0, 21329.666666666668], [397.0, 21452.0], [396.0, 21292.0], [395.0, 20974.0], [394.0, 21055.0], [393.0, 21444.0], [392.0, 21398.6], [391.0, 21433.5], [385.0, 22756.75], [384.0, 22667.0], [387.0, 22663.0], [386.0, 22662.0], [390.0, 21250.0], [389.0, 22101.4], [388.0, 22601.5], [414.0, 20885.0], [415.0, 20882.0], [413.0, 21041.0], [412.0, 20716.5], [411.0, 4896.0], [410.0, 20968.5], [409.0, 20800.0], [408.0, 21038.0], [407.0, 20840.0], [401.0, 21428.0], [400.0, 21442.0], [403.0, 20928.0], [402.0, 21226.0], [406.0, 21348.0], [405.0, 21359.0], [404.0, 21398.0], [429.0, 19892.0], [431.0, 19735.5], [428.0, 19660.5], [418.0, 20562.0], [417.0, 20895.0], [416.0, 20559.0], [427.0, 19741.0], [425.0, 19421.0], [424.0, 19078.2], [423.0, 3721.0], [422.0, 20723.0], [421.0, 20490.0], [420.0, 20538.333333333332], [446.0, 16048.75], [447.0, 14925.0], [445.0, 16206.0], [444.0, 16098.0], [443.0, 16370.5], [442.0, 17609.0], [441.0, 17408.0], [440.0, 17434.0], [439.0, 17650.0], [433.0, 18137.333333333332], [432.0, 19736.0], [435.0, 17333.0], [434.0, 17658.0], [438.0, 17538.0], [437.0, 17647.0], [436.0, 17572.0], [462.0, 11844.5], [463.0, 10054.0], [461.0, 10758.0], [460.0, 10964.0], [459.0, 10062.166666666668], [458.0, 10106.0], [457.0, 10572.0], [456.0, 11818.0], [455.0, 11709.0], [449.0, 14280.5], [448.0, 14610.0], [451.0, 13907.0], [450.0, 13396.0], [454.0, 12247.0], [453.0, 13049.5], [452.0, 13585.0], [478.0, 7827.0], [479.0, 9926.0], [477.0, 11719.0], [476.0, 31992.0], [475.0, 10905.0], [474.0, 9994.0], [473.0, 9994.0], [472.0, 9164.25], [471.0, 8653.0], [464.0, 8196.0], [466.0, 11055.0], [465.0, 13073.333333333334], [470.0, 15269.0], [469.0, 8193.0], [468.0, 9589.5], [494.0, 7632.0], [495.0, 10848.0], [493.0, 4339.0], [492.0, 7631.0], [491.0, 11075.0], [490.0, 7439.0], [489.0, 7641.0], [488.0, 13868.0], [487.0, 9088.0], [481.0, 11854.0], [480.0, 6807.0], [483.0, 10931.285714285714], [482.0, 7824.0], [486.0, 16722.0], [485.0, 15367.0], [484.0, 7669.5], [510.0, 12167.5], [511.0, 15366.0], [509.0, 13955.666666666666], [508.0, 11271.0], [507.0, 14406.0], [506.0, 12305.0], [505.0, 11217.0], [504.0, 14879.0], [503.0, 4216.0], [497.0, 21109.0], [496.0, 11190.5], [499.0, 3602.0], [498.0, 14359.0], [502.0, 12434.6], [501.0, 10979.5], [540.0, 10083.0], [543.0, 10545.0], [529.0, 23600.833333333332], [528.0, 30892.5], [531.0, 13997.0], [530.0, 22675.5], [533.0, 14532.0], [532.0, 14291.0], [542.0, 7389.0], [541.0, 12365.0], [539.0, 14058.0], [538.0, 7635.0], [537.0, 15290.0], [536.0, 12385.5], [527.0, 30741.0], [513.0, 14946.0], [512.0, 15503.666666666668], [515.0, 13153.666666666666], [514.0, 13463.5], [517.0, 19359.5], [516.0, 26310.333333333332], [519.0, 20332.0], [518.0, 10775.0], [526.0, 15456.0], [525.0, 16119.0], [524.0, 22777.5], [523.0, 13169.0], [522.0, 20491.5], [521.0, 17157.5], [520.0, 17171.75], [535.0, 15355.5], [534.0, 13422.0], [572.0, 29995.42857142857], [575.0, 29009.0], [560.0, 30458.25], [562.0, 29017.0], [561.0, 29324.0], [564.0, 29613.23076923077], [563.0, 29371.4], [574.0, 28795.294117647052], [573.0, 29607.0], [571.0, 29715.4], [570.0, 29812.75], [569.0, 29404.0], [568.0, 29504.333333333332], [559.0, 29024.0], [545.0, 11998.666666666666], [544.0, 14699.0], [547.0, 13891.0], [546.0, 19042.0], [549.0, 15360.0], [548.0, 14802.0], [551.0, 9223.0], [550.0, 14462.5], [558.0, 29019.0], [557.0, 29991.57142857143], [556.0, 29785.727272727272], [555.0, 27744.142857142855], [554.0, 13621.0], [553.0, 9225.0], [552.0, 13124.0], [567.0, 29092.0], [566.0, 29015.5], [604.0, 27061.777777777777], [607.0, 29046.0], [593.0, 20585.0], [592.0, 29387.6], [595.0, 28724.0], [594.0, 29638.5], [597.0, 28951.166666666668], [596.0, 28872.333333333336], [606.0, 29018.9], [605.0, 28877.81818181818], [603.0, 28842.375], [602.0, 28825.333333333332], [601.0, 28711.0], [600.0, 29225.88888888889], [591.0, 29184.0], [577.0, 18344.333333333332], [576.0, 29435.0], [579.0, 29539.571428571428], [578.0, 29023.333333333332], [581.0, 28936.0], [580.0, 26336.166666666668], [583.0, 29848.0], [582.0, 28941.0], [590.0, 29265.230769230766], [589.0, 28813.0], [588.0, 29022.5], [587.0, 28926.0], [586.0, 29356.30769230769], [585.0, 29041.0], [584.0, 29641.333333333332], [599.0, 29325.5], [598.0, 28726.0], [636.0, 29540.5], [639.0, 28917.25], [625.0, 30388.5], [624.0, 31186.0], [627.0, 30560.0], [626.0, 29584.0], [629.0, 29333.142857142855], [628.0, 29643.6], [638.0, 29530.5], [637.0, 30231.0], [635.0, 28546.0], [634.0, 28689.5], [633.0, 30242.0], [632.0, 29298.4], [623.0, 30020.666666666668], [608.0, 28529.0], [610.0, 28384.0], [609.0, 28848.57142857143], [612.0, 29016.875], [611.0, 29121.0], [614.0, 13486.0], [613.0, 28696.0], [622.0, 22240.0], [621.0, 28766.714285714286], [620.0, 29233.416666666668], [619.0, 28810.0], [618.0, 28848.5], [617.0, 29880.5], [616.0, 29021.6], [631.0, 29895.5], [630.0, 28720.25], [668.0, 22710.5], [671.0, 23164.666666666668], [657.0, 26070.6], [656.0, 27617.0], [659.0, 23504.333333333336], [658.0, 23765.384615384617], [661.0, 23668.0], [660.0, 23296.0], [670.0, 24020.5], [669.0, 22529.272727272728], [667.0, 21484.0], [666.0, 21768.0], [665.0, 22846.0], [664.0, 22416.5], [655.0, 28516.333333333332], [641.0, 29457.25], [640.0, 28836.0], [643.0, 29793.375], [642.0, 29303.666666666668], [645.0, 29761.666666666668], [644.0, 29298.1], [647.0, 29207.75], [646.0, 29937.333333333332], [654.0, 29824.0], [653.0, 29558.333333333332], [652.0, 29556.333333333336], [651.0, 29237.25], [650.0, 28962.5], [649.0, 29297.25], [648.0, 28948.333333333332], [663.0, 22172.8], [662.0, 21463.0], [699.0, 42934.00000000001], [692.0, 30450.25], [700.0, 33380.43330055722], [689.0, 30937.226666666673], [688.0, 30738.084415584413], [691.0, 28660.535714285714], [690.0, 30126.600000000002], [698.0, 29315.503105590054], [697.0, 29341.46666666667], [696.0, 29221.730769230773], [679.0, 20161.5], [678.0, 20252.333333333332], [677.0, 20490.842105263164], [676.0, 20995.239999999998], [675.0, 21180.0], [674.0, 21520.333333333336], [673.0, 21828.2], [672.0, 23468.368421052633], [687.0, 30589.15625], [686.0, 30817.166666666668], [685.0, 17411.441176470587], [684.0, 17180.333333333332], [683.0, 18767.5], [682.0, 19107.0], [681.0, 19392.0], [680.0, 19688.399999999994], [695.0, 30011.20689655173], [694.0, 29526.0], [693.0, 28142.000000000004], [717.0, 28034.0], [713.0, 27978.0], [709.0, 28012.0], [708.0, 50075.44999999998], [707.0, 23434.846153846156], [705.0, 24147.88888888889], [752.0, 27951.0], [737.0, 27936.0], [796.0, 27384.0], [813.0, 27571.6], [840.0, 27362.666666666668], [837.0, 27359.0], [986.0, 44015.0], [985.0, 42977.10391363024], [1000.0, 41137.90909090909], [997.0, 42739.72727272727], [995.0, 43250.967741935485], [1.0, 4061.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[680.8672857142855, 33499.89185714287]], "isOverall": false, "label": "Produce Kafka message for user-Aggregated", "isController": false}, {"data": [[1.0, 83169.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.0, 83169.0]], "isOverall": false, "label": "Create + subscribe consumers-Aggregated", "isController": false}, {"data": [[708.0, 91859.625], [986.0, 16889.0], [985.0, 27473.144404332124], [1000.0, 13277.0], [997.0, 15615.0], [995.0, 17483.375], [994.0, 16687.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[978.1433333333334, 28631.473333333313]], "isOverall": false, "label": "Consume Kafka message for user - receive latency-Aggregated", "isController": false}, {"data": [[1.0, 6812.0]], "isOverall": false, "label": "Close consumers", "isController": false}, {"data": [[1.0, 6812.0]], "isOverall": false, "label": "Close consumers-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.68528912E12, "maxY": 455.03333333333336, "series": [{"data": [[1.68528936E12, 455.03333333333336], [1.68528954E12, 441.3], [1.68528924E12, 209.93333333333334], [1.68528942E12, 251.6], [1.68528912E12, 0.0], [1.6852893E12, 226.66666666666666], [1.68528948E12, 425.75], [1.68528918E12, 0.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68528936E12, 0.0], [1.68528954E12, 0.0], [1.68528924E12, 0.0], [1.68528942E12, 0.0], [1.68528912E12, 0.0], [1.6852893E12, 0.0], [1.68528948E12, 0.0], [1.68528918E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68528954E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 864.0, "minX": 1.68528912E12, "maxY": 91859.625, "series": [{"data": [[1.68528912E12, 864.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.68528936E12, 30192.435865504416], [1.68528954E12, 21335.475866757286], [1.68528924E12, 43840.39477124181], [1.68528942E12, 28591.55180180181], [1.6852893E12, 48288.985], [1.68528948E12, 38821.304761904736]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68528918E12, 83169.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.68528924E12, 26899.195205479435], [1.6852893E12, 91859.625]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68528954E12, 6812.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68528954E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68528912E12, "maxY": 4.9E-324, "series": [{"data": [[1.68528912E12, 0.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.68528936E12, 0.0], [1.68528954E12, 0.0], [1.68528924E12, 0.0], [1.68528942E12, 0.0], [1.6852893E12, 0.0], [1.68528948E12, 0.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68528918E12, 0.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.68528924E12, 0.0], [1.6852893E12, 0.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68528954E12, 0.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68528954E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68528912E12, "maxY": 4.9E-324, "series": [{"data": [[1.68528912E12, 0.0]], "isOverall": false, "label": "create message", "isController": false}, {"data": [[1.68528936E12, 0.0], [1.68528954E12, 0.0], [1.68528924E12, 0.0], [1.68528942E12, 0.0], [1.6852893E12, 0.0], [1.68528948E12, 0.0]], "isOverall": false, "label": "Produce Kafka message for user", "isController": false}, {"data": [[1.68528918E12, 0.0]], "isOverall": false, "label": "Create + subscribe consumers", "isController": false}, {"data": [[1.68528924E12, 0.0], [1.6852893E12, 0.0]], "isOverall": false, "label": "Consume Kafka message for user - receive latency", "isController": false}, {"data": [[1.68528954E12, 0.0]], "isOverall": false, "label": "Close consumers", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68528954E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 864.0, "minX": 1.68528912E12, "maxY": 99318.0, "series": [{"data": [[1.68528936E12, 41466.0], [1.68528954E12, 33331.0], [1.68528924E12, 52263.0], [1.68528942E12, 35957.0], [1.68528912E12, 864.0], [1.6852893E12, 99318.0], [1.68528948E12, 53032.0], [1.68528918E12, 83169.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68528936E12, 37084.7], [1.68528954E12, 29655.5], [1.68528924E12, 49735.0], [1.68528942E12, 35517.0], [1.68528912E12, 864.0], [1.6852893E12, 56893.0], [1.68528948E12, 52428.0], [1.68528918E12, 83169.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68528936E12, 38413.86], [1.68528954E12, 31083.81], [1.68528924E12, 51566.3], [1.68528942E12, 35859.0], [1.68528912E12, 864.0], [1.6852893E12, 77702.24999999936], [1.68528948E12, 53000.29], [1.68528918E12, 83169.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68528936E12, 38159.65], [1.68528954E12, 30407.0], [1.68528924E12, 50260.2], [1.68528942E12, 35708.1], [1.68528912E12, 864.0], [1.6852893E12, 58503.1], [1.68528948E12, 52799.9], [1.68528918E12, 83169.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68528936E12, 4625.0], [1.68528954E12, 1353.0], [1.68528924E12, 6843.0], [1.68528942E12, 4439.0], [1.68528912E12, 864.0], [1.6852893E12, 20078.0], [1.68528948E12, 5167.0], [1.68528918E12, 83169.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68528936E12, 31750.0], [1.68528954E12, 23491.0], [1.68528924E12, 45352.0], [1.68528942E12, 35251.5], [1.68528912E12, 864.0], [1.6852893E12, 53155.0], [1.68528948E12, 34347.0], [1.68528918E12, 83169.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68528954E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2217.0, "minX": 1.0, "maxY": 54603.0, "series": [{"data": [[2.0, 18533.5], [578.0, 35387.0], [609.0, 31597.0], [3.0, 21920.0], [4.0, 18755.0], [5.0, 23761.0], [6.0, 24093.5], [7.0, 23258.0], [8.0, 25047.0], [9.0, 29356.0], [10.0, 30623.5], [11.0, 19143.0], [12.0, 20486.0], [13.0, 34137.5], [14.0, 32574.0], [15.0, 24588.0], [16.0, 26208.5], [18.0, 26894.0], [19.0, 30435.0], [20.0, 26646.0], [21.0, 23094.5], [22.0, 24089.5], [23.0, 24982.5], [24.0, 23831.5], [25.0, 46543.0], [26.0, 28147.0], [27.0, 22851.0], [28.0, 19577.5], [29.0, 33806.5], [31.0, 29522.0], [32.0, 36031.0], [37.0, 35739.5], [36.0, 27583.5], [41.0, 8846.0], [42.0, 26646.0], [44.0, 28698.5], [47.0, 20879.0], [52.0, 44612.5], [53.0, 29461.0], [54.0, 52213.5], [60.0, 43927.5], [61.0, 22710.0], [63.0, 2217.0], [70.0, 16130.5], [71.0, 47170.0], [78.0, 7355.5], [76.0, 3767.0], [88.0, 52936.5], [89.0, 11055.0], [92.0, 52722.0], [98.0, 14463.0], [110.0, 49551.0], [109.0, 51549.0], [114.0, 30362.5], [113.0, 29756.0], [118.0, 49210.0], [139.0, 29312.0], [188.0, 45765.0], [194.0, 48802.0], [200.0, 34925.0], [201.0, 31467.0], [210.0, 53350.0], [214.0, 31167.5], [1.0, 17574.0], [283.0, 52303.0], [303.0, 23644.0], [319.0, 54603.0], [330.0, 28992.0], [369.0, 35997.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 609.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[2.0, 0.0], [578.0, 0.0], [609.0, 0.0], [3.0, 0.0], [4.0, 0.0], [5.0, 0.0], [6.0, 0.0], [7.0, 0.0], [8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [16.0, 0.0], [18.0, 0.0], [19.0, 0.0], [20.0, 0.0], [21.0, 0.0], [22.0, 0.0], [23.0, 0.0], [24.0, 0.0], [25.0, 0.0], [26.0, 0.0], [27.0, 0.0], [28.0, 0.0], [29.0, 0.0], [31.0, 0.0], [32.0, 0.0], [37.0, 0.0], [36.0, 0.0], [41.0, 0.0], [42.0, 0.0], [44.0, 0.0], [47.0, 0.0], [52.0, 0.0], [53.0, 0.0], [54.0, 0.0], [60.0, 0.0], [61.0, 0.0], [63.0, 0.0], [70.0, 0.0], [71.0, 0.0], [78.0, 0.0], [76.0, 0.0], [88.0, 0.0], [89.0, 0.0], [92.0, 0.0], [98.0, 0.0], [110.0, 0.0], [109.0, 0.0], [114.0, 0.0], [113.0, 0.0], [118.0, 0.0], [139.0, 0.0], [188.0, 0.0], [194.0, 0.0], [200.0, 0.0], [201.0, 0.0], [210.0, 0.0], [214.0, 0.0], [1.0, 0.0], [283.0, 0.0], [303.0, 0.0], [319.0, 0.0], [330.0, 0.0], [369.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 609.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68528912E12, "maxY": 26.766666666666666, "series": [{"data": [[1.68528936E12, 26.766666666666666], [1.68528954E12, 13.133333333333333], [1.68528924E12, 12.75], [1.68528942E12, 14.8], [1.68528912E12, 0.03333333333333333], [1.6852893E12, 13.333333333333334], [1.68528948E12, 24.233333333333334], [1.68528918E12, 16.666666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68528954E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68528912E12, "maxY": 26.766666666666666, "series": [{"data": [[1.68528936E12, 26.766666666666666], [1.68528954E12, 24.533333333333335], [1.68528924E12, 17.616666666666667], [1.68528942E12, 14.8], [1.68528912E12, 0.016666666666666666], [1.6852893E12, 13.466666666666667], [1.68528948E12, 24.5], [1.68528918E12, 0.016666666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68528954E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68528912E12, "maxY": 26.766666666666666, "series": [{"data": [[1.68528924E12, 4.866666666666666], [1.6852893E12, 0.13333333333333333]], "isOverall": false, "label": "Consume Kafka message for user - receive latency-success", "isController": false}, {"data": [[1.68528912E12, 0.016666666666666666]], "isOverall": false, "label": "create message-success", "isController": false}, {"data": [[1.68528918E12, 0.016666666666666666]], "isOverall": false, "label": "Create + subscribe consumers-success", "isController": false}, {"data": [[1.68528936E12, 26.766666666666666], [1.68528954E12, 24.516666666666666], [1.68528924E12, 12.75], [1.68528942E12, 14.8], [1.6852893E12, 13.333333333333334], [1.68528948E12, 24.5]], "isOverall": false, "label": "Produce Kafka message for user-success", "isController": false}, {"data": [[1.68528954E12, 0.016666666666666666]], "isOverall": false, "label": "Close consumers-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68528954E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68528912E12, "maxY": 26.766666666666666, "series": [{"data": [[1.68528936E12, 26.766666666666666], [1.68528954E12, 24.533333333333335], [1.68528924E12, 17.616666666666667], [1.68528942E12, 14.8], [1.68528912E12, 0.016666666666666666], [1.6852893E12, 13.466666666666667], [1.68528948E12, 24.5], [1.68528918E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68528954E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

